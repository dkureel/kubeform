/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/kubeform/apis/base/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type ApiManagementAuthorizationServer struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty" protobuf:"bytes,1,opt,name=metadata"`
	Spec              ApiManagementAuthorizationServerSpec   `json:"spec,omitempty" protobuf:"bytes,2,opt,name=spec"`
	Status            ApiManagementAuthorizationServerStatus `json:"status,omitempty" protobuf:"bytes,3,opt,name=status"`
}

type ApiManagementAuthorizationServerSpecTokenBodyParameter struct {
	Name  string `json:"name" tf:"name" protobuf:"bytes,1,opt,name=name"`
	Value string `json:"value" tf:"value" protobuf:"bytes,2,opt,name=value"`
}

type ApiManagementAuthorizationServerSpec struct {
	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-" protobuf:"bytes,1,opt,name=providerRef"`

	ID string `json:"id,omitempty" tf:"id,omitempty" protobuf:"bytes,2,opt,name=id"`

	SecretRef *core.LocalObjectReference `json:"secretRef,omitempty" tf:"-" protobuf:"bytes,3,opt,name=secretRef"`

	ApiManagementName     string   `json:"apiManagementName" tf:"api_management_name" protobuf:"bytes,4,opt,name=apiManagementName"`
	AuthorizationEndpoint string   `json:"authorizationEndpoint" tf:"authorization_endpoint" protobuf:"bytes,5,opt,name=authorizationEndpoint"`
	AuthorizationMethods  []string `json:"authorizationMethods" tf:"authorization_methods" protobuf:"bytes,6,rep,name=authorizationMethods"`
	// +optional
	BearerTokenSendingMethods []string `json:"bearerTokenSendingMethods,omitempty" tf:"bearer_token_sending_methods,omitempty" protobuf:"bytes,7,rep,name=bearerTokenSendingMethods"`
	// +optional
	ClientAuthenticationMethod []string `json:"clientAuthenticationMethod,omitempty" tf:"client_authentication_method,omitempty" protobuf:"bytes,8,rep,name=clientAuthenticationMethod"`
	ClientID                   string   `json:"clientID" tf:"client_id" protobuf:"bytes,9,opt,name=clientID"`
	ClientRegistrationEndpoint string   `json:"clientRegistrationEndpoint" tf:"client_registration_endpoint" protobuf:"bytes,10,opt,name=clientRegistrationEndpoint"`
	// +optional
	ClientSecret string `json:"-" sensitive:"true" tf:"client_secret,omitempty"`
	// +optional
	DefaultScope string `json:"defaultScope,omitempty" tf:"default_scope,omitempty" protobuf:"bytes,11,opt,name=defaultScope"`
	// +optional
	Description       string   `json:"description,omitempty" tf:"description,omitempty" protobuf:"bytes,12,opt,name=description"`
	DisplayName       string   `json:"displayName" tf:"display_name" protobuf:"bytes,13,opt,name=displayName"`
	GrantTypes        []string `json:"grantTypes" tf:"grant_types" protobuf:"bytes,14,rep,name=grantTypes"`
	Name              string   `json:"name" tf:"name" protobuf:"bytes,15,opt,name=name"`
	ResourceGroupName string   `json:"resourceGroupName" tf:"resource_group_name" protobuf:"bytes,16,opt,name=resourceGroupName"`
	// +optional
	ResourceOwnerPassword string `json:"-" sensitive:"true" tf:"resource_owner_password,omitempty"`
	// +optional
	ResourceOwnerUsername string `json:"resourceOwnerUsername,omitempty" tf:"resource_owner_username,omitempty" protobuf:"bytes,17,opt,name=resourceOwnerUsername"`
	// +optional
	SupportState bool `json:"supportState,omitempty" tf:"support_state,omitempty" protobuf:"varint,18,opt,name=supportState"`
	// +optional
	TokenBodyParameter []ApiManagementAuthorizationServerSpecTokenBodyParameter `json:"tokenBodyParameter,omitempty" tf:"token_body_parameter,omitempty" protobuf:"bytes,19,rep,name=tokenBodyParameter"`
	// +optional
	TokenEndpoint string `json:"tokenEndpoint,omitempty" tf:"token_endpoint,omitempty" protobuf:"bytes,20,opt,name=tokenEndpoint"`
}

type ApiManagementAuthorizationServerStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty" protobuf:"varint,1,opt,name=observedGeneration"`
	// +optional
	Output *ApiManagementAuthorizationServerSpec `json:"output,omitempty" protobuf:"bytes,2,opt,name=output"`
	// +optional
	State *base.State `json:"state,omitempty" protobuf:"bytes,3,opt,name=state"`
	// +optional
	Phase base.Phase `json:"phase,omitempty" protobuf:"bytes,4,opt,name=phase,casttype=kubeform.dev/kubeform/apis/base/v1alpha1.Phase"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// ApiManagementAuthorizationServerList is a list of ApiManagementAuthorizationServers
type ApiManagementAuthorizationServerList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty" protobuf:"bytes,1,opt,name=metadata"`
	// Items is a list of ApiManagementAuthorizationServer CRD objects
	Items []ApiManagementAuthorizationServer `json:"items,omitempty" protobuf:"bytes,2,rep,name=items"`
}
