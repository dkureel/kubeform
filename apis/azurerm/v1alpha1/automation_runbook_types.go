/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/kubeform/apis/base/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type AutomationRunbook struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty" protobuf:"bytes,1,opt,name=metadata"`
	Spec              AutomationRunbookSpec   `json:"spec,omitempty" protobuf:"bytes,2,opt,name=spec"`
	Status            AutomationRunbookStatus `json:"status,omitempty" protobuf:"bytes,3,opt,name=status"`
}

type AutomationRunbookSpecPublishContentLinkHash struct {
	Algorithm string `json:"algorithm" tf:"algorithm" protobuf:"bytes,1,opt,name=algorithm"`
	Value     string `json:"value" tf:"value" protobuf:"bytes,2,opt,name=value"`
}

type AutomationRunbookSpecPublishContentLink struct {
	// +optional
	// +kubebuilder:validation:MaxItems=1
	Hash []AutomationRunbookSpecPublishContentLinkHash `json:"hash,omitempty" tf:"hash,omitempty" protobuf:"bytes,1,rep,name=hash"`
	Uri  string                                        `json:"uri" tf:"uri" protobuf:"bytes,2,opt,name=uri"`
	// +optional
	Version string `json:"version,omitempty" tf:"version,omitempty" protobuf:"bytes,3,opt,name=version"`
}

type AutomationRunbookSpec struct {
	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-" protobuf:"bytes,1,opt,name=providerRef"`

	ID string `json:"id,omitempty" tf:"id,omitempty" protobuf:"bytes,2,opt,name=id"`

	AccountName string `json:"accountName" tf:"account_name" protobuf:"bytes,3,opt,name=accountName"`
	// +optional
	Content string `json:"content,omitempty" tf:"content,omitempty" protobuf:"bytes,4,opt,name=content"`
	// +optional
	Description string `json:"description,omitempty" tf:"description,omitempty" protobuf:"bytes,5,opt,name=description"`
	Location    string `json:"location" tf:"location" protobuf:"bytes,6,opt,name=location"`
	LogProgress bool   `json:"logProgress" tf:"log_progress" protobuf:"varint,7,opt,name=logProgress"`
	LogVerbose  bool   `json:"logVerbose" tf:"log_verbose" protobuf:"varint,8,opt,name=logVerbose"`
	Name        string `json:"name" tf:"name" protobuf:"bytes,9,opt,name=name"`
	// +kubebuilder:validation:MaxItems=1
	PublishContentLink []AutomationRunbookSpecPublishContentLink `json:"publishContentLink" tf:"publish_content_link" protobuf:"bytes,10,rep,name=publishContentLink"`
	ResourceGroupName  string                                    `json:"resourceGroupName" tf:"resource_group_name" protobuf:"bytes,11,opt,name=resourceGroupName"`
	RunbookType        string                                    `json:"runbookType" tf:"runbook_type" protobuf:"bytes,12,opt,name=runbookType"`
	// +optional
	Tags map[string]string `json:"tags,omitempty" tf:"tags,omitempty" protobuf:"bytes,13,rep,name=tags"`
}

type AutomationRunbookStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty" protobuf:"varint,1,opt,name=observedGeneration"`
	// +optional
	Output *AutomationRunbookSpec `json:"output,omitempty" protobuf:"bytes,2,opt,name=output"`
	// +optional
	State *base.State `json:"state,omitempty" protobuf:"bytes,3,opt,name=state"`
	// +optional
	Phase base.Phase `json:"phase,omitempty" protobuf:"bytes,4,opt,name=phase,casttype=kubeform.dev/kubeform/apis/base/v1alpha1.Phase"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// AutomationRunbookList is a list of AutomationRunbooks
type AutomationRunbookList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty" protobuf:"bytes,1,opt,name=metadata"`
	// Items is a list of AutomationRunbook CRD objects
	Items []AutomationRunbook `json:"items,omitempty" protobuf:"bytes,2,rep,name=items"`
}
