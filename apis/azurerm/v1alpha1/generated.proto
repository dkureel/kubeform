/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// This file was autogenerated by go-to-protobuf. Do not edit it manually!

syntax = 'proto2';

package kubeform.dev.kubeform.apis.azurerm.v1alpha1;

import "k8s.io/api/core/v1/generated.proto";
import "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/schema/generated.proto";

// Package-wide variables from generator "generated".
option go_package = "v1alpha1";

message AnalysisServicesServer {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional AnalysisServicesServerSpec spec = 2;

  optional AnalysisServicesServerStatus status = 3;
}

// AnalysisServicesServerList is a list of AnalysisServicesServers
message AnalysisServicesServerList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of AnalysisServicesServer CRD objects
  repeated AnalysisServicesServer items = 2;
}

message AnalysisServicesServerSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  repeated string adminUsers = 3;

  // +optional
  optional bool enablePowerBiService = 4;

  // +optional
  repeated AnalysisServicesServerSpecIpv4FirewallRule ipv4FirewallRule = 5;

  optional string location = 6;

  optional string name = 7;

  // +optional
  optional string querypoolConnectionMode = 8;

  optional string resourceGroupName = 9;

  optional string sku = 10;

  // +optional
  map<string, string> tags = 11;
}

message AnalysisServicesServerSpecIpv4FirewallRule {
  optional string name = 1;

  optional string rangeEnd = 2;

  optional string rangeStart = 3;
}

message AnalysisServicesServerStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional AnalysisServicesServerSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message ApiManagement {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional ApiManagementSpec spec = 2;

  optional ApiManagementStatus status = 3;
}

message ApiManagementAPI {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional ApiManagementAPISpec spec = 2;

  optional ApiManagementAPIStatus status = 3;
}

// ApiManagementAPIList is a list of ApiManagementAPIs
message ApiManagementAPIList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of ApiManagementAPI CRD objects
  repeated ApiManagementAPI items = 2;
}

message ApiManagementAPIOperation {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional ApiManagementAPIOperationSpec spec = 2;

  optional ApiManagementAPIOperationStatus status = 3;
}

// ApiManagementAPIOperationList is a list of ApiManagementAPIOperations
message ApiManagementAPIOperationList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of ApiManagementAPIOperation CRD objects
  repeated ApiManagementAPIOperation items = 2;
}

message ApiManagementAPIOperationPolicy {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional ApiManagementAPIOperationPolicySpec spec = 2;

  optional ApiManagementAPIOperationPolicyStatus status = 3;
}

// ApiManagementAPIOperationPolicyList is a list of ApiManagementAPIOperationPolicys
message ApiManagementAPIOperationPolicyList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of ApiManagementAPIOperationPolicy CRD objects
  repeated ApiManagementAPIOperationPolicy items = 2;
}

message ApiManagementAPIOperationPolicySpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string apiManagementName = 3;

  optional string apiName = 4;

  optional string operationID = 5;

  optional string resourceGroupName = 6;

  // +optional
  optional string xmlContent = 7;

  // +optional
  optional string xmlLink = 8;
}

message ApiManagementAPIOperationPolicyStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional ApiManagementAPIOperationPolicySpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message ApiManagementAPIOperationSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string apiManagementName = 3;

  optional string apiName = 4;

  // +optional
  optional string description = 5;

  optional string displayName = 6;

  optional string method = 7;

  optional string operationID = 8;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated ApiManagementAPIOperationSpecRequest request = 9;

  optional string resourceGroupName = 10;

  // +optional
  repeated ApiManagementAPIOperationSpecResponse response = 11;

  // +optional
  repeated ApiManagementAPIOperationSpecTemplateParameter templateParameter = 12;

  optional string urlTemplate = 13;
}

message ApiManagementAPIOperationSpecRequest {
  // +optional
  optional string description = 1;

  // +optional
  repeated ApiManagementAPIOperationSpecRequestHeader header = 2;

  // +optional
  repeated ApiManagementAPIOperationSpecRequestQueryParameter queryParameter = 3;

  // +optional
  repeated ApiManagementAPIOperationSpecRequestRepresentation representation = 4;
}

message ApiManagementAPIOperationSpecRequestHeader {
  // +optional
  optional string defaultValue = 1;

  // +optional
  optional string description = 2;

  optional string name = 3;

  optional bool required = 4;

  optional string type = 5;

  // +optional
  repeated string values = 6;
}

message ApiManagementAPIOperationSpecRequestQueryParameter {
  // +optional
  optional string defaultValue = 1;

  // +optional
  optional string description = 2;

  optional string name = 3;

  optional bool required = 4;

  optional string type = 5;

  // +optional
  repeated string values = 6;
}

message ApiManagementAPIOperationSpecRequestRepresentation {
  optional string contentType = 1;

  // +optional
  repeated ApiManagementAPIOperationSpecRequestRepresentationFormParameter formParameter = 2;

  // +optional
  optional string sample = 3;

  // +optional
  optional string schemaID = 4;

  // +optional
  optional string typeName = 5;
}

message ApiManagementAPIOperationSpecRequestRepresentationFormParameter {
  // +optional
  optional string defaultValue = 1;

  // +optional
  optional string description = 2;

  optional string name = 3;

  optional bool required = 4;

  optional string type = 5;

  // +optional
  repeated string values = 6;
}

message ApiManagementAPIOperationSpecResponse {
  // +optional
  optional string description = 1;

  // +optional
  repeated ApiManagementAPIOperationSpecResponseHeader header = 2;

  // +optional
  repeated ApiManagementAPIOperationSpecResponseRepresentation representation = 3;

  optional int64 statusCode = 4;
}

message ApiManagementAPIOperationSpecResponseHeader {
  // +optional
  optional string defaultValue = 1;

  // +optional
  optional string description = 2;

  optional string name = 3;

  optional bool required = 4;

  optional string type = 5;

  // +optional
  repeated string values = 6;
}

message ApiManagementAPIOperationSpecResponseRepresentation {
  optional string contentType = 1;

  // +optional
  repeated ApiManagementAPIOperationSpecResponseRepresentationFormParameter formParameter = 2;

  // +optional
  optional string sample = 3;

  // +optional
  optional string schemaID = 4;

  // +optional
  optional string typeName = 5;
}

message ApiManagementAPIOperationSpecResponseRepresentationFormParameter {
  // +optional
  optional string defaultValue = 1;

  // +optional
  optional string description = 2;

  optional string name = 3;

  optional bool required = 4;

  optional string type = 5;

  // +optional
  repeated string values = 6;
}

message ApiManagementAPIOperationSpecTemplateParameter {
  // +optional
  optional string defaultValue = 1;

  // +optional
  optional string description = 2;

  optional string name = 3;

  optional bool required = 4;

  optional string type = 5;

  // +optional
  repeated string values = 6;
}

message ApiManagementAPIOperationStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional ApiManagementAPIOperationSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message ApiManagementAPIPolicy {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional ApiManagementAPIPolicySpec spec = 2;

  optional ApiManagementAPIPolicyStatus status = 3;
}

// ApiManagementAPIPolicyList is a list of ApiManagementAPIPolicys
message ApiManagementAPIPolicyList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of ApiManagementAPIPolicy CRD objects
  repeated ApiManagementAPIPolicy items = 2;
}

message ApiManagementAPIPolicySpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string apiManagementName = 3;

  optional string apiName = 4;

  optional string resourceGroupName = 5;

  // +optional
  optional string xmlContent = 6;

  // +optional
  optional string xmlLink = 7;
}

message ApiManagementAPIPolicyStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional ApiManagementAPIPolicySpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message ApiManagementAPISchema {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional ApiManagementAPISchemaSpec spec = 2;

  optional ApiManagementAPISchemaStatus status = 3;
}

// ApiManagementAPISchemaList is a list of ApiManagementAPISchemas
message ApiManagementAPISchemaList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of ApiManagementAPISchema CRD objects
  repeated ApiManagementAPISchema items = 2;
}

message ApiManagementAPISchemaSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string apiManagementName = 3;

  optional string apiName = 4;

  optional string contentType = 5;

  optional string resourceGroupName = 6;

  optional string schemaID = 7;

  optional string value = 8;
}

message ApiManagementAPISchemaStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional ApiManagementAPISchemaSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message ApiManagementAPISpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string apiManagementName = 3;

  // +optional
  optional string description = 4;

  optional string displayName = 5;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated ApiManagementAPISpecImport import = 6;

  // +optional
  optional bool isCurrent = 7;

  // +optional
  optional bool isOnline = 8;

  optional string name = 9;

  optional string path = 10;

  repeated string protocols = 11;

  optional string resourceGroupName = 12;

  optional string revision = 13;

  // +optional
  optional string serviceURL = 14;

  // +optional
  optional bool soapPassThrough = 15;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated ApiManagementAPISpecSubscriptionKeyParameterNames subscriptionKeyParameterNames = 16;

  // +optional
  optional string version = 17;

  // +optional
  optional string versionSetID = 18;
}

message ApiManagementAPISpecImport {
  optional string contentFormat = 1;

  optional string contentValue = 2;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated ApiManagementAPISpecImportWsdlSelector wsdlSelector = 3;
}

message ApiManagementAPISpecImportWsdlSelector {
  optional string endpointName = 1;

  optional string serviceName = 2;
}

message ApiManagementAPISpecSubscriptionKeyParameterNames {
  optional string header = 1;

  optional string query = 2;
}

message ApiManagementAPIStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional ApiManagementAPISpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message ApiManagementAPIVersionSet {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional ApiManagementAPIVersionSetSpec spec = 2;

  optional ApiManagementAPIVersionSetStatus status = 3;
}

// ApiManagementAPIVersionSetList is a list of ApiManagementAPIVersionSets
message ApiManagementAPIVersionSetList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of ApiManagementAPIVersionSet CRD objects
  repeated ApiManagementAPIVersionSet items = 2;
}

message ApiManagementAPIVersionSetSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string apiManagementName = 3;

  // +optional
  optional string description = 4;

  optional string displayName = 5;

  optional string name = 6;

  optional string resourceGroupName = 7;

  // +optional
  optional string versionHeaderName = 8;

  // +optional
  optional string versionQueryName = 9;

  optional string versioningScheme = 10;
}

message ApiManagementAPIVersionSetStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional ApiManagementAPIVersionSetSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message ApiManagementAuthorizationServer {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional ApiManagementAuthorizationServerSpec spec = 2;

  optional ApiManagementAuthorizationServerStatus status = 3;
}

// ApiManagementAuthorizationServerList is a list of ApiManagementAuthorizationServers
message ApiManagementAuthorizationServerList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of ApiManagementAuthorizationServer CRD objects
  repeated ApiManagementAuthorizationServer items = 2;
}

message ApiManagementAuthorizationServerSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional k8s.io.api.core.v1.LocalObjectReference secretRef = 3;

  optional string apiManagementName = 4;

  optional string authorizationEndpoint = 5;

  repeated string authorizationMethods = 6;

  // +optional
  repeated string bearerTokenSendingMethods = 7;

  // +optional
  repeated string clientAuthenticationMethod = 8;

  optional string clientID = 9;

  optional string clientRegistrationEndpoint = 10;

  // +optional
  optional string defaultScope = 11;

  // +optional
  optional string description = 12;

  optional string displayName = 13;

  repeated string grantTypes = 14;

  optional string name = 15;

  optional string resourceGroupName = 16;

  // +optional
  optional string resourceOwnerUsername = 17;

  // +optional
  optional bool supportState = 18;

  // +optional
  repeated ApiManagementAuthorizationServerSpecTokenBodyParameter tokenBodyParameter = 19;

  // +optional
  optional string tokenEndpoint = 20;
}

message ApiManagementAuthorizationServerSpecTokenBodyParameter {
  optional string name = 1;

  optional string value = 2;
}

message ApiManagementAuthorizationServerStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional ApiManagementAuthorizationServerSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message ApiManagementBackend {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional ApiManagementBackendSpec spec = 2;

  optional ApiManagementBackendStatus status = 3;
}

// ApiManagementBackendList is a list of ApiManagementBackends
message ApiManagementBackendList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of ApiManagementBackend CRD objects
  repeated ApiManagementBackend items = 2;
}

message ApiManagementBackendSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional k8s.io.api.core.v1.LocalObjectReference secretRef = 3;

  optional string apiManagementName = 4;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated ApiManagementBackendSpecCredentials credentials = 5;

  // +optional
  optional string description = 6;

  optional string name = 7;

  optional string protocol = 8;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated ApiManagementBackendSpecProxy proxy = 9;

  optional string resourceGroupName = 10;

  // +optional
  optional string resourceID = 11;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated ApiManagementBackendSpecServiceFabricCluster serviceFabricCluster = 12;

  // +optional
  optional string title = 13;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated ApiManagementBackendSpecTls tls = 14;

  optional string url = 15;
}

message ApiManagementBackendSpecCredentials {
  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated ApiManagementBackendSpecCredentialsAuthorization authorization = 1;

  // +optional
  repeated string certificate = 2;

  // +optional
  map<string, string> header = 3;

  // +optional
  map<string, string> query = 4;
}

message ApiManagementBackendSpecCredentialsAuthorization {
  // +optional
  optional string parameter = 1;

  // +optional
  optional string scheme = 2;
}

message ApiManagementBackendSpecProxy {
  optional string url = 1;

  optional string username = 2;
}

message ApiManagementBackendSpecServiceFabricCluster {
  optional string clientCertificateThumbprint = 1;

  repeated string managementEndpoints = 2;

  optional int64 maxPartitionResolutionRetries = 3;

  // +optional
  repeated string serverCertificateThumbprints = 4;

  // +optional
  repeated ApiManagementBackendSpecServiceFabricClusterServerX509Name serverX509Name = 5;
}

message ApiManagementBackendSpecServiceFabricClusterServerX509Name {
  optional string issuerCertificateThumbprint = 1;

  optional string name = 2;
}

message ApiManagementBackendSpecTls {
  // +optional
  optional bool validateCertificateChain = 1;

  // +optional
  optional bool validateCertificateName = 2;
}

message ApiManagementBackendStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional ApiManagementBackendSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message ApiManagementCertificate {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional ApiManagementCertificateSpec spec = 2;

  optional ApiManagementCertificateStatus status = 3;
}

// ApiManagementCertificateList is a list of ApiManagementCertificates
message ApiManagementCertificateList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of ApiManagementCertificate CRD objects
  repeated ApiManagementCertificate items = 2;
}

message ApiManagementCertificateSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional k8s.io.api.core.v1.LocalObjectReference secretRef = 3;

  optional string apiManagementName = 4;

  // +optional
  optional string expiration = 5;

  optional string name = 6;

  optional string resourceGroupName = 7;

  // +optional
  optional string subject = 8;

  // +optional
  optional string thumbprint = 9;
}

message ApiManagementCertificateStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional ApiManagementCertificateSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message ApiManagementGroup {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional ApiManagementGroupSpec spec = 2;

  optional ApiManagementGroupStatus status = 3;
}

// ApiManagementGroupList is a list of ApiManagementGroups
message ApiManagementGroupList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of ApiManagementGroup CRD objects
  repeated ApiManagementGroup items = 2;
}

message ApiManagementGroupSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string apiManagementName = 3;

  // +optional
  optional string description = 4;

  optional string displayName = 5;

  // +optional
  optional string externalID = 6;

  optional string name = 7;

  optional string resourceGroupName = 8;

  // +optional
  optional string type = 9;
}

message ApiManagementGroupStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional ApiManagementGroupSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message ApiManagementGroupUser {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional ApiManagementGroupUserSpec spec = 2;

  optional ApiManagementGroupUserStatus status = 3;
}

// ApiManagementGroupUserList is a list of ApiManagementGroupUsers
message ApiManagementGroupUserList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of ApiManagementGroupUser CRD objects
  repeated ApiManagementGroupUser items = 2;
}

message ApiManagementGroupUserSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string apiManagementName = 3;

  optional string groupName = 4;

  optional string resourceGroupName = 5;

  optional string userID = 6;
}

message ApiManagementGroupUserStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional ApiManagementGroupUserSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

// ApiManagementList is a list of ApiManagements
message ApiManagementList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of ApiManagement CRD objects
  repeated ApiManagement items = 2;
}

message ApiManagementLogger {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional ApiManagementLoggerSpec spec = 2;

  optional ApiManagementLoggerStatus status = 3;
}

// ApiManagementLoggerList is a list of ApiManagementLoggers
message ApiManagementLoggerList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of ApiManagementLogger CRD objects
  repeated ApiManagementLogger items = 2;
}

message ApiManagementLoggerSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional k8s.io.api.core.v1.LocalObjectReference secretRef = 3;

  optional string apiManagementName = 4;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated ApiManagementLoggerSpecApplicationInsights applicationInsights = 5;

  // +optional
  optional bool buffered = 6;

  // +optional
  optional string description = 7;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated ApiManagementLoggerSpecEventhub eventhub = 8;

  optional string name = 9;

  optional string resourceGroupName = 10;
}

message ApiManagementLoggerSpecApplicationInsights {
}

message ApiManagementLoggerSpecEventhub {
  optional string name = 1;
}

message ApiManagementLoggerStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional ApiManagementLoggerSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message ApiManagementOpenidConnectProvider {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional ApiManagementOpenidConnectProviderSpec spec = 2;

  optional ApiManagementOpenidConnectProviderStatus status = 3;
}

// ApiManagementOpenidConnectProviderList is a list of ApiManagementOpenidConnectProviders
message ApiManagementOpenidConnectProviderList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of ApiManagementOpenidConnectProvider CRD objects
  repeated ApiManagementOpenidConnectProvider items = 2;
}

message ApiManagementOpenidConnectProviderSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional k8s.io.api.core.v1.LocalObjectReference secretRef = 3;

  optional string apiManagementName = 4;

  // +optional
  optional string description = 5;

  optional string displayName = 6;

  optional string metadataEndpoint = 7;

  optional string name = 8;

  optional string resourceGroupName = 9;
}

message ApiManagementOpenidConnectProviderStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional ApiManagementOpenidConnectProviderSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message ApiManagementProduct {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional ApiManagementProductSpec spec = 2;

  optional ApiManagementProductStatus status = 3;
}

message ApiManagementProductAPI {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional ApiManagementProductAPISpec spec = 2;

  optional ApiManagementProductAPIStatus status = 3;
}

// ApiManagementProductAPIList is a list of ApiManagementProductAPIs
message ApiManagementProductAPIList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of ApiManagementProductAPI CRD objects
  repeated ApiManagementProductAPI items = 2;
}

message ApiManagementProductAPISpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string apiManagementName = 3;

  optional string apiName = 4;

  optional string productID = 5;

  optional string resourceGroupName = 6;
}

message ApiManagementProductAPIStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional ApiManagementProductAPISpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message ApiManagementProductGroup {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional ApiManagementProductGroupSpec spec = 2;

  optional ApiManagementProductGroupStatus status = 3;
}

// ApiManagementProductGroupList is a list of ApiManagementProductGroups
message ApiManagementProductGroupList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of ApiManagementProductGroup CRD objects
  repeated ApiManagementProductGroup items = 2;
}

message ApiManagementProductGroupSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string apiManagementName = 3;

  optional string groupName = 4;

  optional string productID = 5;

  optional string resourceGroupName = 6;
}

message ApiManagementProductGroupStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional ApiManagementProductGroupSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

// ApiManagementProductList is a list of ApiManagementProducts
message ApiManagementProductList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of ApiManagementProduct CRD objects
  repeated ApiManagementProduct items = 2;
}

message ApiManagementProductPolicy {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional ApiManagementProductPolicySpec spec = 2;

  optional ApiManagementProductPolicyStatus status = 3;
}

// ApiManagementProductPolicyList is a list of ApiManagementProductPolicys
message ApiManagementProductPolicyList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of ApiManagementProductPolicy CRD objects
  repeated ApiManagementProductPolicy items = 2;
}

message ApiManagementProductPolicySpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string apiManagementName = 3;

  optional string productID = 4;

  optional string resourceGroupName = 5;

  // +optional
  optional string xmlContent = 6;

  // +optional
  optional string xmlLink = 7;
}

message ApiManagementProductPolicyStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional ApiManagementProductPolicySpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message ApiManagementProductSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string apiManagementName = 3;

  // +optional
  optional bool approvalRequired = 4;

  // +optional
  optional string description = 5;

  optional string displayName = 6;

  optional string productID = 7;

  optional bool published = 8;

  optional string resourceGroupName = 9;

  optional bool subscriptionRequired = 10;

  // +optional
  optional int64 subscriptionsLimit = 11;

  // +optional
  optional string terms = 12;
}

message ApiManagementProductStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional ApiManagementProductSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message ApiManagementProperty {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional ApiManagementPropertySpec spec = 2;

  optional ApiManagementPropertyStatus status = 3;
}

// ApiManagementPropertyList is a list of ApiManagementPropertys
message ApiManagementPropertyList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of ApiManagementProperty CRD objects
  repeated ApiManagementProperty items = 2;
}

message ApiManagementPropertySpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string apiManagementName = 3;

  optional string displayName = 4;

  optional string name = 5;

  optional string resourceGroupName = 6;

  // +optional
  optional bool secret = 7;

  // +optional
  repeated string tags = 8;

  optional string value = 9;
}

message ApiManagementPropertyStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional ApiManagementPropertySpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message ApiManagementSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional k8s.io.api.core.v1.LocalObjectReference secretRef = 3;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated ApiManagementSpecAdditionalLocation additionalLocation = 4;

  // +optional
  // +kubebuilder:validation:MaxItems=10
  repeated ApiManagementSpecCertificate certificate = 5;

  // +optional
  optional string gatewayRegionalURL = 6;

  // +optional
  optional string gatewayURL = 7;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated ApiManagementSpecHostnameConfiguration hostnameConfiguration = 8;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated ApiManagementSpecIdentity identity = 9;

  optional string location = 10;

  // +optional
  optional string managementAPIURL = 11;

  optional string name = 12;

  // +optional
  optional string notificationSenderEmail = 13;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated ApiManagementSpecPolicy policy = 14;

  // +optional
  optional string portalURL = 15;

  // +optional
  repeated string publicIPAddresses = 16;

  optional string publisherEmail = 17;

  optional string publisherName = 18;

  optional string resourceGroupName = 19;

  // +optional
  optional string scmURL = 20;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated ApiManagementSpecSecurity security = 21;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated ApiManagementSpecSignIn signIn = 22;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated ApiManagementSpecSignUp signUp = 23;

  // +kubebuilder:validation:MaxItems=1
  repeated ApiManagementSpecSku sku = 24;

  // +optional
  map<string, string> tags = 25;
}

message ApiManagementSpecAdditionalLocation {
  // +optional
  optional string gatewayRegionalURL = 1;

  optional string location = 2;

  // +optional
  repeated string publicIPAddresses = 3;
}

message ApiManagementSpecCertificate {
  optional string storeName = 1;
}

message ApiManagementSpecHostnameConfiguration {
  // +optional
  repeated ApiManagementSpecHostnameConfigurationManagement management = 1;

  // +optional
  repeated ApiManagementSpecHostnameConfigurationPortal portal = 2;

  // +optional
  repeated ApiManagementSpecHostnameConfigurationProxy proxy = 3;

  // +optional
  repeated ApiManagementSpecHostnameConfigurationScm scm = 4;
}

message ApiManagementSpecHostnameConfigurationManagement {
  optional string hostName = 1;

  // +optional
  optional string keyVaultID = 2;

  // +optional
  optional bool negotiateClientCertificate = 3;
}

message ApiManagementSpecHostnameConfigurationPortal {
  optional string hostName = 1;

  // +optional
  optional string keyVaultID = 2;

  // +optional
  optional bool negotiateClientCertificate = 3;
}

message ApiManagementSpecHostnameConfigurationProxy {
  // +optional
  optional bool defaultSSLBinding = 1;

  optional string hostName = 2;

  // +optional
  optional string keyVaultID = 3;

  // +optional
  optional bool negotiateClientCertificate = 4;
}

message ApiManagementSpecHostnameConfigurationScm {
  optional string hostName = 1;

  // +optional
  optional string keyVaultID = 2;

  // +optional
  optional bool negotiateClientCertificate = 3;
}

message ApiManagementSpecIdentity {
  // +optional
  optional string principalID = 1;

  // +optional
  optional string tenantID = 2;

  optional string type = 3;
}

message ApiManagementSpecPolicy {
  // +optional
  optional string xmlContent = 1;

  // +optional
  optional string xmlLink = 2;
}

message ApiManagementSpecSecurity {
  // +optional
  optional bool disableBackendSSL30 = 1;

  // +optional
  optional bool disableBackendTLS10 = 2;

  // +optional
  optional bool disableBackendTLS11 = 3;

  // +optional
  optional bool disableFrontendSSL30 = 4;

  // +optional
  optional bool disableFrontendTLS10 = 5;

  // +optional
  optional bool disableFrontendTLS11 = 6;

  // +optional
  // Deprecated
  optional bool disableTripleDESChipers = 7;

  // +optional
  optional bool disableTripleDESCiphers = 8;
}

message ApiManagementSpecSignIn {
  optional bool enabled = 1;
}

message ApiManagementSpecSignUp {
  optional bool enabled = 1;

  // +kubebuilder:validation:MaxItems=1
  repeated ApiManagementSpecSignUpTermsOfService termsOfService = 2;
}

message ApiManagementSpecSignUpTermsOfService {
  optional bool consentRequired = 1;

  optional bool enabled = 2;

  // +optional
  optional string text = 3;
}

message ApiManagementSpecSku {
  optional int64 capacity = 1;

  optional string name = 2;
}

message ApiManagementStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional ApiManagementSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message ApiManagementSubscription {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional ApiManagementSubscriptionSpec spec = 2;

  optional ApiManagementSubscriptionStatus status = 3;
}

// ApiManagementSubscriptionList is a list of ApiManagementSubscriptions
message ApiManagementSubscriptionList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of ApiManagementSubscription CRD objects
  repeated ApiManagementSubscription items = 2;
}

message ApiManagementSubscriptionSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional k8s.io.api.core.v1.LocalObjectReference secretRef = 3;

  optional string apiManagementName = 4;

  optional string displayName = 5;

  optional string productID = 6;

  optional string resourceGroupName = 7;

  // +optional
  optional string state = 8;

  // +optional
  optional string subscriptionID = 9;

  optional string userID = 10;
}

message ApiManagementSubscriptionStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional ApiManagementSubscriptionSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message ApiManagementUser {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional ApiManagementUserSpec spec = 2;

  optional ApiManagementUserStatus status = 3;
}

// ApiManagementUserList is a list of ApiManagementUsers
message ApiManagementUserList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of ApiManagementUser CRD objects
  repeated ApiManagementUser items = 2;
}

message ApiManagementUserSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional k8s.io.api.core.v1.LocalObjectReference secretRef = 3;

  optional string apiManagementName = 4;

  // +optional
  optional string confirmation = 5;

  optional string email = 6;

  optional string firstName = 7;

  optional string lastName = 8;

  // +optional
  optional string note = 9;

  optional string resourceGroupName = 10;

  // +optional
  optional string state = 11;

  optional string userID = 12;
}

message ApiManagementUserStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional ApiManagementUserSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message AppService {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional AppServiceSpec spec = 2;

  optional AppServiceStatus status = 3;
}

message AppServiceActiveSlot {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional AppServiceActiveSlotSpec spec = 2;

  optional AppServiceActiveSlotStatus status = 3;
}

// AppServiceActiveSlotList is a list of AppServiceActiveSlots
message AppServiceActiveSlotList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of AppServiceActiveSlot CRD objects
  repeated AppServiceActiveSlot items = 2;
}

message AppServiceActiveSlotSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string appServiceName = 3;

  optional string appServiceSlotName = 4;

  optional string resourceGroupName = 5;
}

message AppServiceActiveSlotStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional AppServiceActiveSlotSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message AppServiceCustomHostnameBinding {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional AppServiceCustomHostnameBindingSpec spec = 2;

  optional AppServiceCustomHostnameBindingStatus status = 3;
}

// AppServiceCustomHostnameBindingList is a list of AppServiceCustomHostnameBindings
message AppServiceCustomHostnameBindingList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of AppServiceCustomHostnameBinding CRD objects
  repeated AppServiceCustomHostnameBinding items = 2;
}

message AppServiceCustomHostnameBindingSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string appServiceName = 3;

  optional string hostname = 4;

  optional string resourceGroupName = 5;
}

message AppServiceCustomHostnameBindingStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional AppServiceCustomHostnameBindingSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

// AppServiceList is a list of AppServices
message AppServiceList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of AppService CRD objects
  repeated AppService items = 2;
}

message AppServicePlan {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional AppServicePlanSpec spec = 2;

  optional AppServicePlanStatus status = 3;
}

// AppServicePlanList is a list of AppServicePlans
message AppServicePlanList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of AppServicePlan CRD objects
  repeated AppServicePlan items = 2;
}

message AppServicePlanSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  optional string appServiceEnvironmentID = 3;

  // +optional
  optional bool isXenon = 4;

  // +optional
  optional string kind = 5;

  optional string location = 6;

  // +optional
  optional int64 maximumElasticWorkerCount = 7;

  // +optional
  optional int64 maximumNumberOfWorkers = 8;

  optional string name = 9;

  // +optional
  optional bool perSiteScaling = 10;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  // Deprecated
  repeated AppServicePlanSpecProperties properties = 11;

  // +optional
  optional bool reserved = 12;

  optional string resourceGroupName = 13;

  // +kubebuilder:validation:MaxItems=1
  repeated AppServicePlanSpecSku sku = 14;

  // +optional
  map<string, string> tags = 15;
}

message AppServicePlanSpecProperties {
  // +optional
  // Deprecated
  optional string appServiceEnvironmentID = 1;

  // +optional
  // Deprecated
  optional bool perSiteScaling = 2;

  // +optional
  // Deprecated
  optional bool reserved = 3;
}

message AppServicePlanSpecSku {
  // +optional
  optional int64 capacity = 1;

  optional string size = 2;

  optional string tier = 3;
}

message AppServicePlanStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional AppServicePlanSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message AppServiceSlot {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional AppServiceSlotSpec spec = 2;

  optional AppServiceSlotStatus status = 3;
}

// AppServiceSlotList is a list of AppServiceSlots
message AppServiceSlotList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of AppServiceSlot CRD objects
  repeated AppServiceSlot items = 2;
}

message AppServiceSlotSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional k8s.io.api.core.v1.LocalObjectReference secretRef = 3;

  optional string appServiceName = 4;

  optional string appServicePlanID = 5;

  // +optional
  map<string, string> appSettings = 6;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated AppServiceSlotSpecAuthSettings authSettings = 7;

  // +optional
  optional bool clientAffinityEnabled = 8;

  // +optional
  repeated AppServiceSlotSpecConnectionString connectionString = 9;

  // +optional
  optional string defaultSiteHostname = 10;

  // +optional
  optional bool enabled = 11;

  // +optional
  optional bool httpsOnly = 12;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated AppServiceSlotSpecIdentity identity = 13;

  optional string location = 14;

  optional string name = 15;

  optional string resourceGroupName = 16;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated AppServiceSlotSpecSiteConfig siteConfig = 17;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated AppServiceSlotSpecSiteCredential siteCredential = 18;

  // +optional
  map<string, string> tags = 19;
}

message AppServiceSlotSpecAuthSettings {
  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated AppServiceSlotSpecAuthSettingsActiveDirectory activeDirectory = 1;

  // +optional
  map<string, string> additionalLoginParams = 2;

  // +optional
  repeated string allowedExternalRedirectUrls = 3;

  // +optional
  optional string defaultProvider = 4;

  optional bool enabled = 5;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated AppServiceSlotSpecAuthSettingsFacebook facebook = 6;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated AppServiceSlotSpecAuthSettingsGoogle google = 7;

  // +optional
  optional string issuer = 8;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated AppServiceSlotSpecAuthSettingsMicrosoft microsoft = 9;

  // +optional
  optional string runtimeVersion = 10;

  // +optional
  optional double tokenRefreshExtensionHours = 11;

  // +optional
  optional bool tokenStoreEnabled = 12;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated AppServiceSlotSpecAuthSettingsTwitter twitter = 13;

  // +optional
  optional string unauthenticatedClientAction = 14;
}

message AppServiceSlotSpecAuthSettingsActiveDirectory {
  // +optional
  repeated string allowedAudiences = 1;

  optional string clientID = 2;
}

message AppServiceSlotSpecAuthSettingsFacebook {
  optional string appID = 1;

  // +optional
  repeated string oauthScopes = 2;
}

message AppServiceSlotSpecAuthSettingsGoogle {
  optional string clientID = 1;

  // +optional
  repeated string oauthScopes = 2;
}

message AppServiceSlotSpecAuthSettingsMicrosoft {
  optional string clientID = 1;

  // +optional
  repeated string oauthScopes = 2;
}

message AppServiceSlotSpecAuthSettingsTwitter {
  optional string consumerKey = 1;
}

message AppServiceSlotSpecConnectionString {
  optional string name = 1;

  optional string type = 2;
}

message AppServiceSlotSpecIdentity {
  // +optional
  // +kubebuilder:validation:MinItems=1
  repeated string identityIDS = 1;

  // +optional
  optional string principalID = 2;

  // +optional
  optional string tenantID = 3;

  optional string type = 4;
}

message AppServiceSlotSpecSiteConfig {
  // +optional
  optional bool alwaysOn = 1;

  // +optional
  optional string appCommandLine = 2;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated AppServiceSlotSpecSiteConfigCors cors = 3;

  // +optional
  repeated string defaultDocuments = 4;

  // +optional
  optional string dotnetFrameworkVersion = 5;

  // +optional
  optional string ftpsState = 6;

  // +optional
  optional bool http2Enabled = 7;

  // +optional
  repeated AppServiceSlotSpecSiteConfigIpRestriction ipRestriction = 8;

  // +optional
  optional string javaContainer = 9;

  // +optional
  optional string javaContainerVersion = 10;

  // +optional
  optional string javaVersion = 11;

  // +optional
  optional string linuxFxVersion = 12;

  // +optional
  optional bool localMysqlEnabled = 13;

  // +optional
  optional string managedPipelineMode = 14;

  // +optional
  optional string minTLSVersion = 15;

  // +optional
  optional string phpVersion = 16;

  // +optional
  optional string pythonVersion = 17;

  // +optional
  optional bool remoteDebuggingEnabled = 18;

  // +optional
  optional string remoteDebuggingVersion = 19;

  // +optional
  optional string scmType = 20;

  // +optional
  optional bool use32BitWorkerProcess = 21;

  // +optional
  optional string virtualNetworkName = 22;

  // +optional
  optional bool websocketsEnabled = 23;

  // +optional
  optional string windowsFxVersion = 24;
}

message AppServiceSlotSpecSiteConfigCors {
  repeated string allowedOrigins = 1;

  // +optional
  optional bool supportCredentials = 2;
}

message AppServiceSlotSpecSiteConfigIpRestriction {
  optional string ipAddress = 1;

  // +optional
  optional string subnetMask = 2;
}

message AppServiceSlotSpecSiteCredential {
  // +optional
  optional string username = 1;
}

message AppServiceSlotStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional AppServiceSlotSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message AppServiceSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional k8s.io.api.core.v1.LocalObjectReference secretRef = 3;

  optional string appServicePlanID = 4;

  // +optional
  map<string, string> appSettings = 5;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated AppServiceSpecAuthSettings authSettings = 6;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated AppServiceSpecBackup backup = 7;

  // +optional
  optional bool clientAffinityEnabled = 8;

  // +optional
  optional bool clientCertEnabled = 9;

  // +optional
  repeated AppServiceSpecConnectionString connectionString = 10;

  // +optional
  optional string defaultSiteHostname = 11;

  // +optional
  optional bool enabled = 12;

  // +optional
  optional bool httpsOnly = 13;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated AppServiceSpecIdentity identity = 14;

  optional string location = 15;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated AppServiceSpecLogs logs = 16;

  optional string name = 17;

  // +optional
  optional string outboundIPAddresses = 18;

  // +optional
  optional string possibleOutboundIPAddresses = 19;

  optional string resourceGroupName = 20;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated AppServiceSpecSiteConfig siteConfig = 21;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated AppServiceSpecSiteCredential siteCredential = 22;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated AppServiceSpecSourceControl sourceControl = 23;

  // +optional
  repeated AppServiceSpecStorageAccount storageAccount = 24;

  // +optional
  map<string, string> tags = 25;
}

message AppServiceSpecAuthSettings {
  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated AppServiceSpecAuthSettingsActiveDirectory activeDirectory = 1;

  // +optional
  map<string, string> additionalLoginParams = 2;

  // +optional
  repeated string allowedExternalRedirectUrls = 3;

  // +optional
  optional string defaultProvider = 4;

  optional bool enabled = 5;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated AppServiceSpecAuthSettingsFacebook facebook = 6;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated AppServiceSpecAuthSettingsGoogle google = 7;

  // +optional
  optional string issuer = 8;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated AppServiceSpecAuthSettingsMicrosoft microsoft = 9;

  // +optional
  optional string runtimeVersion = 10;

  // +optional
  optional double tokenRefreshExtensionHours = 11;

  // +optional
  optional bool tokenStoreEnabled = 12;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated AppServiceSpecAuthSettingsTwitter twitter = 13;

  // +optional
  optional string unauthenticatedClientAction = 14;
}

message AppServiceSpecAuthSettingsActiveDirectory {
  // +optional
  repeated string allowedAudiences = 1;

  optional string clientID = 2;
}

message AppServiceSpecAuthSettingsFacebook {
  optional string appID = 1;

  // +optional
  repeated string oauthScopes = 2;
}

message AppServiceSpecAuthSettingsGoogle {
  optional string clientID = 1;

  // +optional
  repeated string oauthScopes = 2;
}

message AppServiceSpecAuthSettingsMicrosoft {
  optional string clientID = 1;

  // +optional
  repeated string oauthScopes = 2;
}

message AppServiceSpecAuthSettingsTwitter {
  optional string consumerKey = 1;
}

message AppServiceSpecBackup {
  // +optional
  optional bool enabled = 1;

  optional string name = 2;

  // +kubebuilder:validation:MaxItems=1
  repeated AppServiceSpecBackupSchedule schedule = 3;
}

message AppServiceSpecBackupSchedule {
  optional int64 frequencyInterval = 1;

  optional string frequencyUnit = 2;

  // +optional
  optional bool keepAtLeastOneBackup = 3;

  // +optional
  optional int64 retentionPeriodInDays = 4;

  // +optional
  optional string startTime = 5;
}

message AppServiceSpecConnectionString {
  optional string name = 1;

  optional string type = 2;
}

message AppServiceSpecIdentity {
  // +optional
  // +kubebuilder:validation:MinItems=1
  repeated string identityIDS = 1;

  // +optional
  optional string principalID = 2;

  // +optional
  optional string tenantID = 3;

  optional string type = 4;
}

message AppServiceSpecLogs {
  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated AppServiceSpecLogsApplicationLogs applicationLogs = 1;
}

message AppServiceSpecLogsApplicationLogs {
  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated AppServiceSpecLogsApplicationLogsAzureBlobStorage azureBlobStorage = 1;
}

message AppServiceSpecLogsApplicationLogsAzureBlobStorage {
  optional string level = 1;

  optional int64 retentionInDays = 2;
}

message AppServiceSpecSiteConfig {
  // +optional
  optional bool alwaysOn = 1;

  // +optional
  optional string appCommandLine = 2;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated AppServiceSpecSiteConfigCors cors = 3;

  // +optional
  repeated string defaultDocuments = 4;

  // +optional
  optional string dotnetFrameworkVersion = 5;

  // +optional
  optional string ftpsState = 6;

  // +optional
  optional bool http2Enabled = 7;

  // +optional
  repeated AppServiceSpecSiteConfigIpRestriction ipRestriction = 8;

  // +optional
  optional string javaContainer = 9;

  // +optional
  optional string javaContainerVersion = 10;

  // +optional
  optional string javaVersion = 11;

  // +optional
  optional string linuxFxVersion = 12;

  // +optional
  optional bool localMysqlEnabled = 13;

  // +optional
  optional string managedPipelineMode = 14;

  // +optional
  optional string minTLSVersion = 15;

  // +optional
  optional string phpVersion = 16;

  // +optional
  optional string pythonVersion = 17;

  // +optional
  optional bool remoteDebuggingEnabled = 18;

  // +optional
  optional string remoteDebuggingVersion = 19;

  // +optional
  optional string scmType = 20;

  // +optional
  optional bool use32BitWorkerProcess = 21;

  // +optional
  optional string virtualNetworkName = 22;

  // +optional
  optional bool websocketsEnabled = 23;

  // +optional
  optional string windowsFxVersion = 24;
}

message AppServiceSpecSiteConfigCors {
  repeated string allowedOrigins = 1;

  // +optional
  optional bool supportCredentials = 2;
}

message AppServiceSpecSiteConfigIpRestriction {
  optional string ipAddress = 1;

  // +optional
  optional string subnetMask = 2;
}

message AppServiceSpecSiteCredential {
  // +optional
  optional string username = 1;
}

message AppServiceSpecSourceControl {
  // +optional
  optional string branch = 1;

  // +optional
  optional string repoURL = 2;
}

message AppServiceSpecStorageAccount {
  optional string accountName = 1;

  // +optional
  optional string mountPath = 2;

  optional string name = 3;

  optional string shareName = 4;

  optional string type = 5;
}

message AppServiceStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional AppServiceSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message ApplicationGateway {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional ApplicationGatewaySpec spec = 2;

  optional ApplicationGatewayStatus status = 3;
}

// ApplicationGatewayList is a list of ApplicationGateways
message ApplicationGatewayList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of ApplicationGateway CRD objects
  repeated ApplicationGateway items = 2;
}

message ApplicationGatewaySpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional k8s.io.api.core.v1.LocalObjectReference secretRef = 3;

  // +optional
  repeated ApplicationGatewaySpecAuthenticationCertificate authenticationCertificate = 4;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated ApplicationGatewaySpecAutoscaleConfiguration autoscaleConfiguration = 5;

  repeated ApplicationGatewaySpecBackendAddressPool backendAddressPool = 6;

  // +kubebuilder:validation:MinItems=1
  repeated ApplicationGatewaySpecBackendHTTPSettings backendHTTPSettings = 7;

  // +optional
  repeated ApplicationGatewaySpecCustomErrorConfiguration customErrorConfiguration = 8;

  // +optional
  // Deprecated
  repeated string disabledSSLProtocols = 9;

  // +optional
  optional bool enableHttp2 = 10;

  // +kubebuilder:validation:MinItems=1
  repeated ApplicationGatewaySpecFrontendIPConfiguration frontendIPConfiguration = 11;

  repeated ApplicationGatewaySpecFrontendPort frontendPort = 12;

  // +kubebuilder:validation:MaxItems=2
  repeated ApplicationGatewaySpecGatewayIPConfiguration gatewayIPConfiguration = 13;

  repeated ApplicationGatewaySpecHttpListener httpListener = 14;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated ApplicationGatewaySpecIdentity identity = 15;

  optional string location = 16;

  optional string name = 17;

  // +optional
  repeated ApplicationGatewaySpecProbe probe = 18;

  // +optional
  repeated ApplicationGatewaySpecRedirectConfiguration redirectConfiguration = 19;

  // +kubebuilder:validation:MinItems=1
  repeated ApplicationGatewaySpecRequestRoutingRule requestRoutingRule = 20;

  optional string resourceGroupName = 21;

  // +optional
  repeated ApplicationGatewaySpecRewriteRuleSet rewriteRuleSet = 22;

  // +kubebuilder:validation:MaxItems=1
  repeated ApplicationGatewaySpecSku sku = 23;

  // +optional
  repeated ApplicationGatewaySpecSslCertificate sslCertificate = 24;

  // +optional
  repeated ApplicationGatewaySpecSslPolicy sslPolicy = 25;

  // +optional
  map<string, string> tags = 26;

  // +optional
  repeated ApplicationGatewaySpecUrlPathMap urlPathMap = 27;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated ApplicationGatewaySpecWafConfiguration wafConfiguration = 28;

  // +optional
  repeated string zones = 29;
}

message ApplicationGatewaySpecAuthenticationCertificate {
  // +optional
  optional string ID = 1;

  optional string name = 2;
}

message ApplicationGatewaySpecAutoscaleConfiguration {
  // +optional
  optional int64 maxCapacity = 1;

  optional int64 minCapacity = 2;
}

message ApplicationGatewaySpecBackendAddressPool {
  // +optional
  // +kubebuilder:validation:MinItems=1
  // Deprecated
  repeated string fqdnList = 1;

  // +optional
  // +kubebuilder:validation:MinItems=1
  repeated string fqdns = 2;

  // +optional
  optional string ID = 3;

  // +optional
  // +kubebuilder:validation:MinItems=1
  // Deprecated
  repeated string ipAddressList = 4;

  // +optional
  // +kubebuilder:validation:MinItems=1
  repeated string ipAddresses = 5;

  optional string name = 6;
}

message ApplicationGatewaySpecBackendHTTPSettings {
  // +optional
  optional string affinityCookieName = 1;

  // +optional
  repeated ApplicationGatewaySpecBackendHTTPSettingsAuthenticationCertificate authenticationCertificate = 2;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated ApplicationGatewaySpecBackendHTTPSettingsConnectionDraining connectionDraining = 3;

  optional string cookieBasedAffinity = 4;

  // +optional
  optional string hostName = 5;

  // +optional
  optional string ID = 6;

  optional string name = 7;

  // +optional
  optional string path = 8;

  // +optional
  optional bool pickHostNameFromBackendAddress = 9;

  optional int64 port = 10;

  // +optional
  optional string probeID = 11;

  // +optional
  optional string probeName = 12;

  optional string protocol = 13;

  // +optional
  optional int64 requestTimeout = 14;
}

message ApplicationGatewaySpecBackendHTTPSettingsAuthenticationCertificate {
  // +optional
  optional string ID = 1;

  optional string name = 2;
}

message ApplicationGatewaySpecBackendHTTPSettingsConnectionDraining {
  optional int64 drainTimeoutSec = 1;

  optional bool enabled = 2;
}

message ApplicationGatewaySpecCustomErrorConfiguration {
  optional string customErrorPageURL = 1;

  // +optional
  optional string ID = 2;

  optional string statusCode = 3;
}

message ApplicationGatewaySpecFrontendIPConfiguration {
  // +optional
  optional string ID = 1;

  optional string name = 2;

  // +optional
  optional string privateIPAddress = 3;

  // +optional
  optional string privateIPAddressAllocation = 4;

  // +optional
  optional string publicIPAddressID = 5;

  // +optional
  optional string subnetID = 6;
}

message ApplicationGatewaySpecFrontendPort {
  // +optional
  optional string ID = 1;

  optional string name = 2;

  optional int64 port = 3;
}

message ApplicationGatewaySpecGatewayIPConfiguration {
  // +optional
  optional string ID = 1;

  optional string name = 2;

  optional string subnetID = 3;
}

message ApplicationGatewaySpecHttpListener {
  // +optional
  repeated ApplicationGatewaySpecHttpListenerCustomErrorConfiguration customErrorConfiguration = 1;

  // +optional
  optional string frontendIPConfigurationID = 2;

  optional string frontendIPConfigurationName = 3;

  // +optional
  optional string frontendPortID = 4;

  optional string frontendPortName = 5;

  // +optional
  optional string hostName = 6;

  // +optional
  optional string ID = 7;

  optional string name = 8;

  optional string protocol = 9;

  // +optional
  optional bool requireSni = 10;

  // +optional
  optional string sslCertificateID = 11;

  // +optional
  optional string sslCertificateName = 12;
}

message ApplicationGatewaySpecHttpListenerCustomErrorConfiguration {
  optional string customErrorPageURL = 1;

  // +optional
  optional string ID = 2;

  optional string statusCode = 3;
}

message ApplicationGatewaySpecIdentity {
  // +kubebuilder:validation:MaxItems=1
  // +kubebuilder:validation:MinItems=1
  repeated string identityIDS = 1;

  // +optional
  optional string type = 2;
}

message ApplicationGatewaySpecProbe {
  // +optional
  optional string host = 1;

  // +optional
  optional string ID = 2;

  optional int64 interval = 3;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated ApplicationGatewaySpecProbeMatch match = 4;

  // +optional
  optional int64 minimumServers = 5;

  optional string name = 6;

  optional string path = 7;

  // +optional
  optional bool pickHostNameFromBackendHTTPSettings = 8;

  optional string protocol = 9;

  optional int64 timeout = 10;

  optional int64 unhealthyThreshold = 11;
}

message ApplicationGatewaySpecProbeMatch {
  // +optional
  optional string body = 1;

  // +optional
  repeated string statusCode = 2;
}

message ApplicationGatewaySpecRedirectConfiguration {
  // +optional
  optional string ID = 1;

  // +optional
  optional bool includePath = 2;

  // +optional
  optional bool includeQueryString = 3;

  optional string name = 4;

  optional string redirectType = 5;

  // +optional
  optional string targetListenerID = 6;

  // +optional
  optional string targetListenerName = 7;

  // +optional
  optional string targetURL = 8;
}

message ApplicationGatewaySpecRequestRoutingRule {
  // +optional
  optional string backendAddressPoolID = 1;

  // +optional
  optional string backendAddressPoolName = 2;

  // +optional
  optional string backendHTTPSettingsID = 3;

  // +optional
  optional string backendHTTPSettingsName = 4;

  // +optional
  optional string httpListenerID = 5;

  optional string httpListenerName = 6;

  // +optional
  optional string ID = 7;

  optional string name = 8;

  // +optional
  optional string redirectConfigurationID = 9;

  // +optional
  optional string redirectConfigurationName = 10;

  // +optional
  optional string rewriteRuleSetID = 11;

  // +optional
  optional string rewriteRuleSetName = 12;

  optional string ruleType = 13;

  // +optional
  optional string urlPathMapID = 14;

  // +optional
  optional string urlPathMapName = 15;
}

message ApplicationGatewaySpecRewriteRuleSet {
  // +optional
  optional string ID = 1;

  optional string name = 2;

  // +optional
  repeated ApplicationGatewaySpecRewriteRuleSetRewriteRule rewriteRule = 3;
}

message ApplicationGatewaySpecRewriteRuleSetRewriteRule {
  // +optional
  repeated ApplicationGatewaySpecRewriteRuleSetRewriteRuleCondition condition = 1;

  optional string name = 2;

  // +optional
  repeated ApplicationGatewaySpecRewriteRuleSetRewriteRuleRequestHeaderConfiguration requestHeaderConfiguration = 3;

  // +optional
  repeated ApplicationGatewaySpecRewriteRuleSetRewriteRuleResponseHeaderConfiguration responseHeaderConfiguration = 4;

  optional int64 ruleSequence = 5;
}

message ApplicationGatewaySpecRewriteRuleSetRewriteRuleCondition {
  // +optional
  optional bool ignoreCase = 1;

  // +optional
  optional bool negate = 2;

  optional string pattern = 3;

  optional string variable = 4;
}

message ApplicationGatewaySpecRewriteRuleSetRewriteRuleRequestHeaderConfiguration {
  optional string headerName = 1;

  optional string headerValue = 2;
}

message ApplicationGatewaySpecRewriteRuleSetRewriteRuleResponseHeaderConfiguration {
  optional string headerName = 1;

  optional string headerValue = 2;
}

message ApplicationGatewaySpecSku {
  // +optional
  optional int64 capacity = 1;

  optional string name = 2;

  optional string tier = 3;
}

message ApplicationGatewaySpecSslCertificate {
  // +optional
  optional string ID = 1;

  optional string name = 2;

  // +optional
  optional string publicCertData = 3;
}

message ApplicationGatewaySpecSslPolicy {
  // +optional
  repeated string cipherSuites = 1;

  // +optional
  repeated string disabledProtocols = 2;

  // +optional
  optional string minProtocolVersion = 3;

  // +optional
  optional string policyName = 4;

  // +optional
  optional string policyType = 5;
}

message ApplicationGatewaySpecUrlPathMap {
  // +optional
  optional string defaultBackendAddressPoolID = 1;

  // +optional
  optional string defaultBackendAddressPoolName = 2;

  // +optional
  optional string defaultBackendHTTPSettingsID = 3;

  // +optional
  optional string defaultBackendHTTPSettingsName = 4;

  // +optional
  optional string defaultRedirectConfigurationID = 5;

  // +optional
  optional string defaultRedirectConfigurationName = 6;

  // +optional
  optional string defaultRewriteRuleSetID = 7;

  // +optional
  optional string defaultRewriteRuleSetName = 8;

  // +optional
  optional string ID = 9;

  optional string name = 10;

  repeated ApplicationGatewaySpecUrlPathMapPathRule pathRule = 11;
}

message ApplicationGatewaySpecUrlPathMapPathRule {
  // +optional
  optional string backendAddressPoolID = 1;

  // +optional
  optional string backendAddressPoolName = 2;

  // +optional
  optional string backendHTTPSettingsID = 3;

  // +optional
  optional string backendHTTPSettingsName = 4;

  // +optional
  optional string ID = 5;

  optional string name = 6;

  repeated string paths = 7;

  // +optional
  optional string redirectConfigurationID = 8;

  // +optional
  optional string redirectConfigurationName = 9;

  // +optional
  optional string rewriteRuleSetID = 10;

  // +optional
  optional string rewriteRuleSetName = 11;
}

message ApplicationGatewaySpecWafConfiguration {
  // +optional
  repeated ApplicationGatewaySpecWafConfigurationDisabledRuleGroup disabledRuleGroup = 1;

  optional bool enabled = 2;

  // +optional
  repeated ApplicationGatewaySpecWafConfigurationExclusion exclusion = 3;

  // +optional
  optional int64 fileUploadLimitMb = 4;

  optional string firewallMode = 5;

  // +optional
  optional int64 maxRequestBodySizeKb = 6;

  // +optional
  optional bool requestBodyCheck = 7;

  // +optional
  optional string ruleSetType = 8;

  optional string ruleSetVersion = 9;
}

message ApplicationGatewaySpecWafConfigurationDisabledRuleGroup {
  optional string ruleGroupName = 1;

  // +optional
  repeated int64 rules = 2;
}

message ApplicationGatewaySpecWafConfigurationExclusion {
  optional string matchVariable = 1;

  // +optional
  optional string selector = 2;

  // +optional
  optional string selectorMatchOperator = 3;
}

message ApplicationGatewayStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional ApplicationGatewaySpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message ApplicationInsights {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional ApplicationInsightsSpec spec = 2;

  optional ApplicationInsightsStatus status = 3;
}

message ApplicationInsightsAPIKey {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional ApplicationInsightsAPIKeySpec spec = 2;

  optional ApplicationInsightsAPIKeyStatus status = 3;
}

// ApplicationInsightsAPIKeyList is a list of ApplicationInsightsAPIKeys
message ApplicationInsightsAPIKeyList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of ApplicationInsightsAPIKey CRD objects
  repeated ApplicationInsightsAPIKey items = 2;
}

message ApplicationInsightsAPIKeySpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional k8s.io.api.core.v1.LocalObjectReference secretRef = 3;

  optional string applicationInsightsID = 4;

  optional string name = 5;

  // +optional
  repeated string readPermissions = 6;

  // +optional
  repeated string writePermissions = 7;
}

message ApplicationInsightsAPIKeyStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional ApplicationInsightsAPIKeySpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

// ApplicationInsightsList is a list of ApplicationInsightss
message ApplicationInsightsList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of ApplicationInsights CRD objects
  repeated ApplicationInsights items = 2;
}

message ApplicationInsightsSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional k8s.io.api.core.v1.LocalObjectReference secretRef = 3;

  // +optional
  optional string appID = 4;

  optional string applicationType = 5;

  optional string location = 6;

  optional string name = 7;

  optional string resourceGroupName = 8;

  // +optional
  map<string, string> tags = 9;
}

message ApplicationInsightsStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional ApplicationInsightsSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message ApplicationInsightsWebTest {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional ApplicationInsightsWebTestSpec spec = 2;

  optional ApplicationInsightsWebTestStatus status = 3;
}

// ApplicationInsightsWebTestList is a list of ApplicationInsightsWebTests
message ApplicationInsightsWebTestList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of ApplicationInsightsWebTest CRD objects
  repeated ApplicationInsightsWebTest items = 2;
}

message ApplicationInsightsWebTestSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string applicationInsightsID = 3;

  optional string configuration = 4;

  // +optional
  optional string description = 5;

  // +optional
  optional bool enabled = 6;

  // +optional
  optional int64 frequency = 7;

  // +kubebuilder:validation:MinItems=1
  repeated string geoLocations = 8;

  optional string kind = 9;

  optional string location = 10;

  optional string name = 11;

  optional string resourceGroupName = 12;

  // +optional
  optional bool retryEnabled = 13;

  // +optional
  optional string syntheticMonitorID = 14;

  // +optional
  map<string, string> tags = 15;

  // +optional
  optional int64 timeout = 16;
}

message ApplicationInsightsWebTestStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional ApplicationInsightsWebTestSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message ApplicationSecurityGroup {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional ApplicationSecurityGroupSpec spec = 2;

  optional ApplicationSecurityGroupStatus status = 3;
}

// ApplicationSecurityGroupList is a list of ApplicationSecurityGroups
message ApplicationSecurityGroupList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of ApplicationSecurityGroup CRD objects
  repeated ApplicationSecurityGroup items = 2;
}

message ApplicationSecurityGroupSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string location = 3;

  optional string name = 4;

  optional string resourceGroupName = 5;

  // +optional
  map<string, string> tags = 6;
}

message ApplicationSecurityGroupStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional ApplicationSecurityGroupSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message AutomationAccount {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional AutomationAccountSpec spec = 2;

  optional AutomationAccountStatus status = 3;
}

// AutomationAccountList is a list of AutomationAccounts
message AutomationAccountList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of AutomationAccount CRD objects
  repeated AutomationAccount items = 2;
}

message AutomationAccountSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  optional string dscPrimaryAccessKey = 3;

  // +optional
  optional string dscSecondaryAccessKey = 4;

  // +optional
  optional string dscServerEndpoint = 5;

  optional string location = 6;

  optional string name = 7;

  optional string resourceGroupName = 8;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  // Deprecated
  repeated AutomationAccountSpecSku sku = 9;

  // +optional
  optional string skuName = 10;

  // +optional
  map<string, string> tags = 11;
}

message AutomationAccountSpecSku {
  // +optional
  optional string name = 1;
}

message AutomationAccountStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional AutomationAccountSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message AutomationCredential {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional AutomationCredentialSpec spec = 2;

  optional AutomationCredentialStatus status = 3;
}

// AutomationCredentialList is a list of AutomationCredentials
message AutomationCredentialList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of AutomationCredential CRD objects
  repeated AutomationCredential items = 2;
}

message AutomationCredentialSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional k8s.io.api.core.v1.LocalObjectReference secretRef = 3;

  optional string accountName = 4;

  // +optional
  optional string description = 5;

  optional string name = 6;

  optional string resourceGroupName = 7;

  optional string username = 8;
}

message AutomationCredentialStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional AutomationCredentialSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message AutomationDscConfiguration {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional AutomationDscConfigurationSpec spec = 2;

  optional AutomationDscConfigurationStatus status = 3;
}

// AutomationDscConfigurationList is a list of AutomationDscConfigurations
message AutomationDscConfigurationList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of AutomationDscConfiguration CRD objects
  repeated AutomationDscConfiguration items = 2;
}

message AutomationDscConfigurationSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string automationAccountName = 3;

  optional string contentEmbedded = 4;

  // +optional
  optional string description = 5;

  optional string location = 6;

  // +optional
  optional bool logVerbose = 7;

  optional string name = 8;

  optional string resourceGroupName = 9;

  // +optional
  optional string state = 10;
}

message AutomationDscConfigurationStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional AutomationDscConfigurationSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message AutomationDscNodeconfiguration {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional AutomationDscNodeconfigurationSpec spec = 2;

  optional AutomationDscNodeconfigurationStatus status = 3;
}

// AutomationDscNodeconfigurationList is a list of AutomationDscNodeconfigurations
message AutomationDscNodeconfigurationList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of AutomationDscNodeconfiguration CRD objects
  repeated AutomationDscNodeconfiguration items = 2;
}

message AutomationDscNodeconfigurationSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string automationAccountName = 3;

  // +optional
  optional string configurationName = 4;

  optional string contentEmbedded = 5;

  optional string name = 6;

  optional string resourceGroupName = 7;
}

message AutomationDscNodeconfigurationStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional AutomationDscNodeconfigurationSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message AutomationModule {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional AutomationModuleSpec spec = 2;

  optional AutomationModuleStatus status = 3;
}

// AutomationModuleList is a list of AutomationModules
message AutomationModuleList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of AutomationModule CRD objects
  repeated AutomationModule items = 2;
}

message AutomationModuleSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string automationAccountName = 3;

  // +kubebuilder:validation:MaxItems=1
  repeated AutomationModuleSpecModuleLink moduleLink = 4;

  optional string name = 5;

  optional string resourceGroupName = 6;
}

message AutomationModuleSpecModuleLink {
  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated AutomationModuleSpecModuleLinkHash hash = 1;

  optional string uri = 2;
}

message AutomationModuleSpecModuleLinkHash {
  optional string algorithm = 1;

  optional string value = 2;
}

message AutomationModuleStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional AutomationModuleSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message AutomationRunbook {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional AutomationRunbookSpec spec = 2;

  optional AutomationRunbookStatus status = 3;
}

// AutomationRunbookList is a list of AutomationRunbooks
message AutomationRunbookList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of AutomationRunbook CRD objects
  repeated AutomationRunbook items = 2;
}

message AutomationRunbookSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string accountName = 3;

  // +optional
  optional string content = 4;

  // +optional
  optional string description = 5;

  optional string location = 6;

  optional bool logProgress = 7;

  optional bool logVerbose = 8;

  optional string name = 9;

  // +kubebuilder:validation:MaxItems=1
  repeated AutomationRunbookSpecPublishContentLink publishContentLink = 10;

  optional string resourceGroupName = 11;

  optional string runbookType = 12;

  // +optional
  map<string, string> tags = 13;
}

message AutomationRunbookSpecPublishContentLink {
  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated AutomationRunbookSpecPublishContentLinkHash hash = 1;

  optional string uri = 2;

  // +optional
  optional string version = 3;
}

message AutomationRunbookSpecPublishContentLinkHash {
  optional string algorithm = 1;

  optional string value = 2;
}

message AutomationRunbookStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional AutomationRunbookSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message AutomationSchedule {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional AutomationScheduleSpec spec = 2;

  optional AutomationScheduleStatus status = 3;
}

// AutomationScheduleList is a list of AutomationSchedules
message AutomationScheduleList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of AutomationSchedule CRD objects
  repeated AutomationSchedule items = 2;
}

message AutomationScheduleSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  // Deprecated
  optional string accountName = 3;

  // +optional
  optional string automationAccountName = 4;

  // +optional
  optional string description = 5;

  // +optional
  optional string expiryTime = 6;

  optional string frequency = 7;

  // +optional
  optional int64 interval = 8;

  // +optional
  repeated int64 monthDays = 9;

  // +optional
  repeated AutomationScheduleSpecMonthlyOccurrence monthlyOccurrence = 10;

  optional string name = 11;

  optional string resourceGroupName = 12;

  // +optional
  optional string startTime = 13;

  // +optional
  optional string timezone = 14;

  // +optional
  repeated string weekDays = 15;
}

message AutomationScheduleSpecMonthlyOccurrence {
  optional string day = 1;

  optional int64 occurrence = 2;
}

message AutomationScheduleStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional AutomationScheduleSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message AutomationVariableBool {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional AutomationVariableBoolSpec spec = 2;

  optional AutomationVariableBoolStatus status = 3;
}

// AutomationVariableBoolList is a list of AutomationVariableBools
message AutomationVariableBoolList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of AutomationVariableBool CRD objects
  repeated AutomationVariableBool items = 2;
}

message AutomationVariableBoolSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string automationAccountName = 3;

  // +optional
  optional string description = 4;

  // +optional
  optional bool encrypted = 5;

  optional string name = 6;

  optional string resourceGroupName = 7;

  // +optional
  optional bool value = 8;
}

message AutomationVariableBoolStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional AutomationVariableBoolSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message AutomationVariableDatetime {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional AutomationVariableDatetimeSpec spec = 2;

  optional AutomationVariableDatetimeStatus status = 3;
}

// AutomationVariableDatetimeList is a list of AutomationVariableDatetimes
message AutomationVariableDatetimeList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of AutomationVariableDatetime CRD objects
  repeated AutomationVariableDatetime items = 2;
}

message AutomationVariableDatetimeSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string automationAccountName = 3;

  // +optional
  optional string description = 4;

  // +optional
  optional bool encrypted = 5;

  optional string name = 6;

  optional string resourceGroupName = 7;

  // +optional
  optional string value = 8;
}

message AutomationVariableDatetimeStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional AutomationVariableDatetimeSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message AutomationVariableInt {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional AutomationVariableIntSpec spec = 2;

  optional AutomationVariableIntStatus status = 3;
}

// AutomationVariableIntList is a list of AutomationVariableInts
message AutomationVariableIntList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of AutomationVariableInt CRD objects
  repeated AutomationVariableInt items = 2;
}

message AutomationVariableIntSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string automationAccountName = 3;

  // +optional
  optional string description = 4;

  // +optional
  optional bool encrypted = 5;

  optional string name = 6;

  optional string resourceGroupName = 7;

  // +optional
  optional int64 value = 8;
}

message AutomationVariableIntStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional AutomationVariableIntSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message AutomationVariableString {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional AutomationVariableStringSpec spec = 2;

  optional AutomationVariableStringStatus status = 3;
}

// AutomationVariableStringList is a list of AutomationVariableStrings
message AutomationVariableStringList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of AutomationVariableString CRD objects
  repeated AutomationVariableString items = 2;
}

message AutomationVariableStringSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string automationAccountName = 3;

  // +optional
  optional string description = 4;

  // +optional
  optional bool encrypted = 5;

  optional string name = 6;

  optional string resourceGroupName = 7;

  // +optional
  optional string value = 8;
}

message AutomationVariableStringStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional AutomationVariableStringSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message AutoscaleSetting {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional AutoscaleSettingSpec spec = 2;

  optional AutoscaleSettingStatus status = 3;
}

// AutoscaleSettingList is a list of AutoscaleSettings
message AutoscaleSettingList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of AutoscaleSetting CRD objects
  repeated AutoscaleSetting items = 2;
}

message AutoscaleSettingSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  optional bool enabled = 3;

  optional string location = 4;

  optional string name = 5;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated AutoscaleSettingSpecNotification notification = 6;

  // +kubebuilder:validation:MaxItems=20
  repeated AutoscaleSettingSpecProfile profile = 7;

  optional string resourceGroupName = 8;

  // +optional
  map<string, string> tags = 9;

  optional string targetResourceID = 10;
}

message AutoscaleSettingSpecNotification {
  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated AutoscaleSettingSpecNotificationEmail email = 1;

  // +optional
  repeated AutoscaleSettingSpecNotificationWebhook webhook = 2;
}

message AutoscaleSettingSpecNotificationEmail {
  // +optional
  repeated string customEmails = 1;

  // +optional
  optional bool sendToSubscriptionAdministrator = 2;

  // +optional
  optional bool sendToSubscriptionCoAdministrator = 3;
}

message AutoscaleSettingSpecNotificationWebhook {
  // +optional
  map<string, string> properties = 1;

  optional string serviceURI = 2;
}

message AutoscaleSettingSpecProfile {
  // +kubebuilder:validation:MaxItems=1
  repeated AutoscaleSettingSpecProfileCapacity capacity = 1;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated AutoscaleSettingSpecProfileFixedDate fixedDate = 2;

  optional string name = 3;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated AutoscaleSettingSpecProfileRecurrence recurrence = 4;

  // +optional
  // +kubebuilder:validation:MaxItems=10
  repeated AutoscaleSettingSpecProfileRule rule = 5;
}

message AutoscaleSettingSpecProfileCapacity {
  optional int64 default = 1;

  optional int64 maximum = 2;

  optional int64 minimum = 3;
}

message AutoscaleSettingSpecProfileFixedDate {
  optional string end = 1;

  optional string start = 2;

  // +optional
  optional string timezone = 3;
}

message AutoscaleSettingSpecProfileRecurrence {
  repeated string days = 1;

  // +kubebuilder:validation:MaxItems=1
  repeated int64 hours = 2;

  // +kubebuilder:validation:MaxItems=1
  repeated int64 minutes = 3;

  // +optional
  optional string timezone = 4;
}

message AutoscaleSettingSpecProfileRule {
  // +kubebuilder:validation:MaxItems=1
  repeated AutoscaleSettingSpecProfileRuleMetricTrigger metricTrigger = 1;

  // +kubebuilder:validation:MaxItems=1
  repeated AutoscaleSettingSpecProfileRuleScaleAction scaleAction = 2;
}

message AutoscaleSettingSpecProfileRuleMetricTrigger {
  optional string metricName = 1;

  optional string metricResourceID = 2;

  optional string operator = 3;

  optional string statistic = 4;

  optional double threshold = 5;

  optional string timeAggregation = 6;

  optional string timeGrain = 7;

  optional string timeWindow = 8;
}

message AutoscaleSettingSpecProfileRuleScaleAction {
  optional string cooldown = 1;

  optional string direction = 2;

  optional string type = 3;

  optional int64 value = 4;
}

message AutoscaleSettingStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional AutoscaleSettingSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message AvailabilitySet {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional AvailabilitySetSpec spec = 2;

  optional AvailabilitySetStatus status = 3;
}

// AvailabilitySetList is a list of AvailabilitySets
message AvailabilitySetList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of AvailabilitySet CRD objects
  repeated AvailabilitySet items = 2;
}

message AvailabilitySetSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string location = 3;

  // +optional
  optional bool managed = 4;

  optional string name = 5;

  // +optional
  optional int64 platformFaultDomainCount = 6;

  // +optional
  optional int64 platformUpdateDomainCount = 7;

  optional string resourceGroupName = 8;

  // +optional
  map<string, string> tags = 9;
}

message AvailabilitySetStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional AvailabilitySetSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message AzureadApplication {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional AzureadApplicationSpec spec = 2;

  optional AzureadApplicationStatus status = 3;
}

// AzureadApplicationList is a list of AzureadApplications
message AzureadApplicationList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of AzureadApplication CRD objects
  repeated AzureadApplication items = 2;
}

message AzureadApplicationSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  optional string applicationID = 3;

  // +optional
  optional bool availableToOtherTenants = 4;

  // +optional
  optional string homepage = 5;

  // +optional
  // +kubebuilder:validation:MinItems=1
  repeated string identifierUris = 6;

  optional string name = 7;

  // +optional
  optional bool oauth2AllowImplicitFlow = 8;

  // +optional
  repeated string replyUrls = 9;
}

message AzureadApplicationStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional AzureadApplicationSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message AzureadServicePrincipal {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional AzureadServicePrincipalSpec spec = 2;

  optional AzureadServicePrincipalStatus status = 3;
}

// AzureadServicePrincipalList is a list of AzureadServicePrincipals
message AzureadServicePrincipalList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of AzureadServicePrincipal CRD objects
  repeated AzureadServicePrincipal items = 2;
}

message AzureadServicePrincipalPassword {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional AzureadServicePrincipalPasswordSpec spec = 2;

  optional AzureadServicePrincipalPasswordStatus status = 3;
}

// AzureadServicePrincipalPasswordList is a list of AzureadServicePrincipalPasswords
message AzureadServicePrincipalPasswordList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of AzureadServicePrincipalPassword CRD objects
  repeated AzureadServicePrincipalPassword items = 2;
}

message AzureadServicePrincipalPasswordSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional k8s.io.api.core.v1.LocalObjectReference secretRef = 3;

  optional string endDate = 4;

  // +optional
  optional string keyID = 5;

  optional string servicePrincipalID = 6;

  // +optional
  optional string startDate = 7;
}

message AzureadServicePrincipalPasswordStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional AzureadServicePrincipalPasswordSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message AzureadServicePrincipalSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string applicationID = 3;

  // +optional
  optional string displayName = 4;
}

message AzureadServicePrincipalStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional AzureadServicePrincipalSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message BatchAccount {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional BatchAccountSpec spec = 2;

  optional BatchAccountStatus status = 3;
}

// BatchAccountList is a list of BatchAccounts
message BatchAccountList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of BatchAccount CRD objects
  repeated BatchAccount items = 2;
}

message BatchAccountSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional k8s.io.api.core.v1.LocalObjectReference secretRef = 3;

  // +optional
  optional string accountEndpoint = 4;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated BatchAccountSpecKeyVaultReference keyVaultReference = 5;

  optional string location = 6;

  optional string name = 7;

  // +optional
  optional string poolAllocationMode = 8;

  optional string resourceGroupName = 9;

  // +optional
  optional string storageAccountID = 10;

  // +optional
  map<string, string> tags = 11;
}

message BatchAccountSpecKeyVaultReference {
  optional string ID = 1;

  optional string url = 2;
}

message BatchAccountStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional BatchAccountSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message BatchApplication {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional BatchApplicationSpec spec = 2;

  optional BatchApplicationStatus status = 3;
}

// BatchApplicationList is a list of BatchApplications
message BatchApplicationList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of BatchApplication CRD objects
  repeated BatchApplication items = 2;
}

message BatchApplicationSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string accountName = 3;

  // +optional
  optional bool allowUpdates = 4;

  // +optional
  optional string defaultVersion = 5;

  // +optional
  optional string displayName = 6;

  optional string name = 7;

  optional string resourceGroupName = 8;
}

message BatchApplicationStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional BatchApplicationSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message BatchCertificate {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional BatchCertificateSpec spec = 2;

  optional BatchCertificateStatus status = 3;
}

// BatchCertificateList is a list of BatchCertificates
message BatchCertificateList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of BatchCertificate CRD objects
  repeated BatchCertificate items = 2;
}

message BatchCertificateSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional k8s.io.api.core.v1.LocalObjectReference secretRef = 3;

  optional string accountName = 4;

  optional string format = 5;

  // +optional
  optional string name = 6;

  // +optional
  optional string publicData = 7;

  optional string resourceGroupName = 8;

  optional string thumbprint = 9;

  optional string thumbprintAlgorithm = 10;
}

message BatchCertificateStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional BatchCertificateSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message BatchPool {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional BatchPoolSpec spec = 2;

  optional BatchPoolStatus status = 3;
}

// BatchPoolList is a list of BatchPools
message BatchPoolList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of BatchPool CRD objects
  repeated BatchPool items = 2;
}

message BatchPoolSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string accountName = 3;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated BatchPoolSpecAutoScale autoScale = 4;

  // +optional
  repeated BatchPoolSpecCertificate certificate = 5;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated BatchPoolSpecContainerConfiguration containerConfiguration = 6;

  // +optional
  optional string displayName = 7;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated BatchPoolSpecFixedScale fixedScale = 8;

  // +optional
  optional int64 maxTasksPerNode = 9;

  optional string name = 10;

  optional string nodeAgentSkuID = 11;

  optional string resourceGroupName = 12;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated BatchPoolSpecStartTask startTask = 13;

  // +optional
  optional bool stopPendingResizeOperation = 14;

  // +kubebuilder:validation:MaxItems=1
  repeated BatchPoolSpecStorageImageReference storageImageReference = 15;

  optional string vmSize = 16;
}

message BatchPoolSpecAutoScale {
  // +optional
  optional string evaluationInterval = 1;

  optional string formula = 2;
}

message BatchPoolSpecCertificate {
  optional string ID = 1;

  optional string storeLocation = 2;

  // +optional
  optional string storeName = 3;

  // +optional
  repeated string visibility = 4;
}

message BatchPoolSpecContainerConfiguration {
  // +optional
  optional string type = 1;
}

message BatchPoolSpecFixedScale {
  // +optional
  optional string resizeTimeout = 1;

  // +optional
  optional int64 targetDedicatedNodes = 2;

  // +optional
  optional int64 targetLowPriorityNodes = 3;
}

message BatchPoolSpecStartTask {
  optional string commandLine = 1;

  // +optional
  map<string, string> environment = 2;

  // +optional
  optional int64 maxTaskRetryCount = 3;

  // +optional
  repeated BatchPoolSpecStartTaskResourceFile resourceFile = 4;

  // +kubebuilder:validation:MaxItems=1
  repeated BatchPoolSpecStartTaskUserIdentity userIdentity = 5;

  // +optional
  optional bool waitForSuccess = 6;
}

message BatchPoolSpecStartTaskResourceFile {
  // +optional
  optional string autoStorageContainerName = 1;

  // +optional
  optional string blobPrefix = 2;

  // +optional
  optional string fileMode = 3;

  // +optional
  optional string filePath = 4;

  // +optional
  optional string httpURL = 5;

  // +optional
  optional string storageContainerURL = 6;
}

message BatchPoolSpecStartTaskUserIdentity {
  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated BatchPoolSpecStartTaskUserIdentityAutoUser autoUser = 1;

  // +optional
  optional string userName = 2;
}

message BatchPoolSpecStartTaskUserIdentityAutoUser {
  // +optional
  optional string elevationLevel = 1;

  // +optional
  optional string scope = 2;
}

message BatchPoolSpecStorageImageReference {
  // +optional
  optional string ID = 1;

  // +optional
  optional string offer = 2;

  // +optional
  optional string publisher = 3;

  // +optional
  optional string sku = 4;

  // +optional
  optional string version = 5;
}

message BatchPoolStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional BatchPoolSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message CdnEndpoint {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional CdnEndpointSpec spec = 2;

  optional CdnEndpointStatus status = 3;
}

// CdnEndpointList is a list of CdnEndpoints
message CdnEndpointList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of CdnEndpoint CRD objects
  repeated CdnEndpoint items = 2;
}

message CdnEndpointSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  repeated string contentTypesToCompress = 3;

  // +optional
  repeated CdnEndpointSpecGeoFilter geoFilter = 4;

  // +optional
  optional string hostName = 5;

  // +optional
  optional bool isCompressionEnabled = 6;

  // +optional
  optional bool isHTTPAllowed = 7;

  // +optional
  optional bool isHTTPSAllowed = 8;

  optional string location = 9;

  optional string name = 10;

  // +optional
  optional string optimizationType = 11;

  repeated CdnEndpointSpecOrigin origin = 12;

  // +optional
  optional string originHostHeader = 13;

  // +optional
  optional string originPath = 14;

  // +optional
  optional string probePath = 15;

  optional string profileName = 16;

  // +optional
  optional string querystringCachingBehaviour = 17;

  optional string resourceGroupName = 18;

  // +optional
  map<string, string> tags = 19;
}

message CdnEndpointSpecGeoFilter {
  optional string action = 1;

  repeated string countryCodes = 2;

  optional string relativePath = 3;
}

message CdnEndpointSpecOrigin {
  optional string hostName = 1;

  // +optional
  optional int64 httpPort = 2;

  // +optional
  optional int64 httpsPort = 3;

  optional string name = 4;
}

message CdnEndpointStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional CdnEndpointSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message CdnProfile {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional CdnProfileSpec spec = 2;

  optional CdnProfileStatus status = 3;
}

// CdnProfileList is a list of CdnProfiles
message CdnProfileList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of CdnProfile CRD objects
  repeated CdnProfile items = 2;
}

message CdnProfileSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string location = 3;

  optional string name = 4;

  optional string resourceGroupName = 5;

  optional string sku = 6;

  // +optional
  map<string, string> tags = 7;
}

message CdnProfileStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional CdnProfileSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message CognitiveAccount {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional CognitiveAccountSpec spec = 2;

  optional CognitiveAccountStatus status = 3;
}

// CognitiveAccountList is a list of CognitiveAccounts
message CognitiveAccountList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of CognitiveAccount CRD objects
  repeated CognitiveAccount items = 2;
}

message CognitiveAccountSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional k8s.io.api.core.v1.LocalObjectReference secretRef = 3;

  // +optional
  optional string endpoint = 4;

  optional string kind = 5;

  optional string location = 6;

  optional string name = 7;

  optional string resourceGroupName = 8;

  // +kubebuilder:validation:MaxItems=1
  repeated CognitiveAccountSpecSku sku = 9;

  // +optional
  map<string, string> tags = 10;
}

message CognitiveAccountSpecSku {
  optional string name = 1;

  optional string tier = 2;
}

message CognitiveAccountStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional CognitiveAccountSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message ConnectionMonitor {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional ConnectionMonitorSpec spec = 2;

  optional ConnectionMonitorStatus status = 3;
}

// ConnectionMonitorList is a list of ConnectionMonitors
message ConnectionMonitorList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of ConnectionMonitor CRD objects
  repeated ConnectionMonitor items = 2;
}

message ConnectionMonitorSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  optional bool autoStart = 3;

  // +kubebuilder:validation:MaxItems=1
  repeated ConnectionMonitorSpecDestination destination = 4;

  // +optional
  optional int64 intervalInSeconds = 5;

  optional string location = 6;

  optional string name = 7;

  optional string networkWatcherName = 8;

  optional string resourceGroupName = 9;

  // +kubebuilder:validation:MaxItems=1
  repeated ConnectionMonitorSpecSource source = 10;

  // +optional
  map<string, string> tags = 11;
}

message ConnectionMonitorSpecDestination {
  // +optional
  optional string address = 1;

  optional int64 port = 2;

  // +optional
  optional string virtualMachineID = 3;
}

message ConnectionMonitorSpecSource {
  // +optional
  optional int64 port = 1;

  optional string virtualMachineID = 2;
}

message ConnectionMonitorStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional ConnectionMonitorSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message ContainerGroup {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional ContainerGroupSpec spec = 2;

  optional ContainerGroupStatus status = 3;
}

// ContainerGroupList is a list of ContainerGroups
message ContainerGroupList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of ContainerGroup CRD objects
  repeated ContainerGroup items = 2;
}

message ContainerGroupSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional k8s.io.api.core.v1.LocalObjectReference secretRef = 3;

  repeated ContainerGroupSpecContainer container = 4;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated ContainerGroupSpecDiagnostics diagnostics = 5;

  // +optional
  optional string dnsNameLabel = 6;

  // +optional
  optional string fqdn = 7;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated ContainerGroupSpecIdentity identity = 8;

  // +optional
  repeated ContainerGroupSpecImageRegistryCredential imageRegistryCredential = 9;

  // +optional
  optional string ipAddress = 10;

  // +optional
  optional string ipAddressType = 11;

  optional string location = 12;

  optional string name = 13;

  optional string osType = 14;

  optional string resourceGroupName = 15;

  // +optional
  optional string restartPolicy = 16;

  // +optional
  map<string, string> tags = 17;
}

message ContainerGroupSpecContainer {
  // +optional
  // Deprecated
  optional string command = 1;

  // +optional
  repeated string commands = 2;

  optional double cpu = 3;

  // +optional
  map<string, string> environmentVariables = 4;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated ContainerGroupSpecContainerGpu gpu = 5;

  optional string image = 6;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated ContainerGroupSpecContainerLivenessProbe livenessProbe = 7;

  optional double memory = 8;

  optional string name = 9;

  // +optional
  // Deprecated
  optional int64 port = 10;

  // +optional
  repeated ContainerGroupSpecContainerPorts ports = 11;

  // +optional
  // Deprecated
  optional string protocol = 12;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated ContainerGroupSpecContainerReadinessProbe readinessProbe = 13;

  // +optional
  repeated ContainerGroupSpecContainerVolume volume = 14;
}

message ContainerGroupSpecContainerGpu {
  // +optional
  optional int64 count = 1;

  // +optional
  optional string sku = 2;
}

message ContainerGroupSpecContainerLivenessProbe {
  // +optional
  repeated string exec = 1;

  // +optional
  optional int64 failureThreshold = 2;

  // +optional
  repeated ContainerGroupSpecContainerLivenessProbeHttpGet httpGet = 3;

  // +optional
  optional int64 initialDelaySeconds = 4;

  // +optional
  optional int64 periodSeconds = 5;

  // +optional
  optional int64 successThreshold = 6;

  // +optional
  optional int64 timeoutSeconds = 7;
}

message ContainerGroupSpecContainerLivenessProbeHttpGet {
  // +optional
  optional string path = 1;

  // +optional
  optional int64 port = 2;

  // +optional
  optional string scheme = 3;
}

message ContainerGroupSpecContainerPorts {
  // +optional
  optional int64 port = 1;

  // +optional
  optional string protocol = 2;
}

message ContainerGroupSpecContainerReadinessProbe {
  // +optional
  repeated string exec = 1;

  // +optional
  optional int64 failureThreshold = 2;

  // +optional
  repeated ContainerGroupSpecContainerReadinessProbeHttpGet httpGet = 3;

  // +optional
  optional int64 initialDelaySeconds = 4;

  // +optional
  optional int64 periodSeconds = 5;

  // +optional
  optional int64 successThreshold = 6;

  // +optional
  optional int64 timeoutSeconds = 7;
}

message ContainerGroupSpecContainerReadinessProbeHttpGet {
  // +optional
  optional string path = 1;

  // +optional
  optional int64 port = 2;

  // +optional
  optional string scheme = 3;
}

message ContainerGroupSpecContainerVolume {
  optional string mountPath = 1;

  optional string name = 2;

  // +optional
  optional bool readOnly = 3;

  optional string shareName = 4;

  optional string storageAccountKey = 5;

  optional string storageAccountName = 6;
}

message ContainerGroupSpecDiagnostics {
  // +kubebuilder:validation:MaxItems=1
  repeated ContainerGroupSpecDiagnosticsLogAnalytics logAnalytics = 1;
}

message ContainerGroupSpecDiagnosticsLogAnalytics {
  optional string logType = 1;

  // +optional
  map<string, string> metadata = 2;

  optional string workspaceID = 3;
}

message ContainerGroupSpecIdentity {
  // +optional
  // +kubebuilder:validation:MinItems=1
  repeated string identityIDS = 1;

  // +optional
  optional string principalID = 2;

  optional string type = 3;
}

message ContainerGroupSpecImageRegistryCredential {
  optional string server = 1;

  optional string username = 2;
}

message ContainerGroupStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional ContainerGroupSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message ContainerRegistry {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional ContainerRegistrySpec spec = 2;

  optional ContainerRegistryStatus status = 3;
}

// ContainerRegistryList is a list of ContainerRegistrys
message ContainerRegistryList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of ContainerRegistry CRD objects
  repeated ContainerRegistry items = 2;
}

message ContainerRegistrySpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional k8s.io.api.core.v1.LocalObjectReference secretRef = 3;

  // +optional
  optional bool adminEnabled = 4;

  // +optional
  optional string adminUsername = 5;

  // +optional
  // +kubebuilder:validation:MinItems=1
  repeated string georeplicationLocations = 6;

  optional string location = 7;

  // +optional
  optional string loginServer = 8;

  optional string name = 9;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated ContainerRegistrySpecNetworkRuleSet networkRuleSet = 10;

  optional string resourceGroupName = 11;

  // +optional
  optional string sku = 12;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  // Deprecated
  repeated ContainerRegistrySpecStorageAccount storageAccount = 13;

  // +optional
  optional string storageAccountID = 14;

  // +optional
  map<string, string> tags = 15;
}

message ContainerRegistrySpecNetworkRuleSet {
  // +optional
  optional string defaultAction = 1;

  // +optional
  repeated ContainerRegistrySpecNetworkRuleSetIpRule ipRule = 2;
}

message ContainerRegistrySpecNetworkRuleSetIpRule {
  optional string action = 1;

  optional string ipRange = 2;
}

message ContainerRegistrySpecStorageAccount {
  optional string name = 1;
}

message ContainerRegistryStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional ContainerRegistrySpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message ContainerService {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional ContainerServiceSpec spec = 2;

  optional ContainerServiceStatus status = 3;
}

// ContainerServiceList is a list of ContainerServices
message ContainerServiceList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of ContainerService CRD objects
  repeated ContainerService items = 2;
}

message ContainerServiceSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional k8s.io.api.core.v1.LocalObjectReference secretRef = 3;

  // +kubebuilder:validation:MaxItems=1
  repeated ContainerServiceSpecAgentPoolProfile agentPoolProfile = 4;

  // +kubebuilder:validation:MaxItems=1
  repeated ContainerServiceSpecDiagnosticsProfile diagnosticsProfile = 5;

  // +kubebuilder:validation:MaxItems=1
  repeated ContainerServiceSpecLinuxProfile linuxProfile = 6;

  optional string location = 7;

  // +kubebuilder:validation:MaxItems=1
  repeated ContainerServiceSpecMasterProfile masterProfile = 8;

  optional string name = 9;

  optional string orchestrationPlatform = 10;

  optional string resourceGroupName = 11;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated ContainerServiceSpecServicePrincipal servicePrincipal = 12;

  // +optional
  map<string, string> tags = 13;
}

message ContainerServiceSpecAgentPoolProfile {
  // +optional
  optional int64 count = 1;

  optional string dnsPrefix = 2;

  // +optional
  optional string fqdn = 3;

  optional string name = 4;

  optional string vmSize = 5;
}

message ContainerServiceSpecDiagnosticsProfile {
  optional bool enabled = 1;

  // +optional
  optional string storageURI = 2;
}

message ContainerServiceSpecLinuxProfile {
  optional string adminUsername = 1;

  // +kubebuilder:validation:MaxItems=1
  repeated ContainerServiceSpecLinuxProfileSshKey sshKey = 2;
}

message ContainerServiceSpecLinuxProfileSshKey {
  optional string keyData = 1;
}

message ContainerServiceSpecMasterProfile {
  // +optional
  optional int64 count = 1;

  optional string dnsPrefix = 2;

  // +optional
  optional string fqdn = 3;
}

message ContainerServiceSpecServicePrincipal {
  optional string clientID = 1;
}

message ContainerServiceStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional ContainerServiceSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message CosmosdbAccount {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional CosmosdbAccountSpec spec = 2;

  optional CosmosdbAccountStatus status = 3;
}

// CosmosdbAccountList is a list of CosmosdbAccounts
message CosmosdbAccountList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of CosmosdbAccount CRD objects
  repeated CosmosdbAccount items = 2;
}

message CosmosdbAccountSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional k8s.io.api.core.v1.LocalObjectReference secretRef = 3;

  // +optional
  repeated CosmosdbAccountSpecCapabilities capabilities = 4;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated CosmosdbAccountSpecConsistencyPolicy consistencyPolicy = 5;

  // +optional
  optional bool enableAutomaticFailover = 6;

  // +optional
  optional bool enableMultipleWriteLocations = 7;

  // +optional
  optional string endpoint = 8;

  // +optional
  // Deprecated
  repeated CosmosdbAccountSpecFailoverPolicy failoverPolicy = 9;

  // +optional
  repeated CosmosdbAccountSpecGeoLocation geoLocation = 10;

  // +optional
  optional string ipRangeFilter = 11;

  // +optional
  optional bool isVirtualNetworkFilterEnabled = 12;

  // +optional
  optional string kind = 13;

  optional string location = 14;

  optional string name = 15;

  optional string offerType = 16;

  // +optional
  repeated string readEndpoints = 17;

  optional string resourceGroupName = 18;

  // +optional
  map<string, string> tags = 19;

  // +optional
  repeated CosmosdbAccountSpecVirtualNetworkRule virtualNetworkRule = 20;

  // +optional
  repeated string writeEndpoints = 21;
}

message CosmosdbAccountSpecCapabilities {
  optional string name = 1;
}

message CosmosdbAccountSpecConsistencyPolicy {
  optional string consistencyLevel = 1;

  // +optional
  optional int64 maxIntervalInSeconds = 2;

  // +optional
  optional int64 maxStalenessPrefix = 3;
}

message CosmosdbAccountSpecFailoverPolicy {
  // +optional
  optional string ID = 1;

  optional string location = 2;

  optional int64 priority = 3;
}

message CosmosdbAccountSpecGeoLocation {
  optional int64 failoverPriority = 1;

  // +optional
  optional string ID = 2;

  optional string location = 3;

  // +optional
  optional string prefix = 4;
}

message CosmosdbAccountSpecVirtualNetworkRule {
  optional string ID = 1;
}

message CosmosdbAccountStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional CosmosdbAccountSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message CosmosdbCassandraKeyspace {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional CosmosdbCassandraKeyspaceSpec spec = 2;

  optional CosmosdbCassandraKeyspaceStatus status = 3;
}

// CosmosdbCassandraKeyspaceList is a list of CosmosdbCassandraKeyspaces
message CosmosdbCassandraKeyspaceList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of CosmosdbCassandraKeyspace CRD objects
  repeated CosmosdbCassandraKeyspace items = 2;
}

message CosmosdbCassandraKeyspaceSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string accountName = 3;

  optional string name = 4;

  optional string resourceGroupName = 5;
}

message CosmosdbCassandraKeyspaceStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional CosmosdbCassandraKeyspaceSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message CosmosdbMongoCollection {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional CosmosdbMongoCollectionSpec spec = 2;

  optional CosmosdbMongoCollectionStatus status = 3;
}

// CosmosdbMongoCollectionList is a list of CosmosdbMongoCollections
message CosmosdbMongoCollectionList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of CosmosdbMongoCollection CRD objects
  repeated CosmosdbMongoCollection items = 2;
}

message CosmosdbMongoCollectionSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string accountName = 3;

  optional string databaseName = 4;

  // +optional
  optional int64 defaultTtlSeconds = 5;

  // +optional
  repeated CosmosdbMongoCollectionSpecIndexes indexes = 6;

  optional string name = 7;

  optional string resourceGroupName = 8;

  // +optional
  optional string shardKey = 9;
}

message CosmosdbMongoCollectionSpecIndexes {
  optional string key = 1;

  // +optional
  optional bool unique = 2;
}

message CosmosdbMongoCollectionStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional CosmosdbMongoCollectionSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message CosmosdbMongoDatabase {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional CosmosdbMongoDatabaseSpec spec = 2;

  optional CosmosdbMongoDatabaseStatus status = 3;
}

// CosmosdbMongoDatabaseList is a list of CosmosdbMongoDatabases
message CosmosdbMongoDatabaseList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of CosmosdbMongoDatabase CRD objects
  repeated CosmosdbMongoDatabase items = 2;
}

message CosmosdbMongoDatabaseSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string accountName = 3;

  optional string name = 4;

  optional string resourceGroupName = 5;
}

message CosmosdbMongoDatabaseStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional CosmosdbMongoDatabaseSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message CosmosdbSQLDatabase {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional CosmosdbSQLDatabaseSpec spec = 2;

  optional CosmosdbSQLDatabaseStatus status = 3;
}

// CosmosdbSQLDatabaseList is a list of CosmosdbSQLDatabases
message CosmosdbSQLDatabaseList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of CosmosdbSQLDatabase CRD objects
  repeated CosmosdbSQLDatabase items = 2;
}

message CosmosdbSQLDatabaseSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string accountName = 3;

  optional string name = 4;

  optional string resourceGroupName = 5;
}

message CosmosdbSQLDatabaseStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional CosmosdbSQLDatabaseSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message CosmosdbTable {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional CosmosdbTableSpec spec = 2;

  optional CosmosdbTableStatus status = 3;
}

// CosmosdbTableList is a list of CosmosdbTables
message CosmosdbTableList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of CosmosdbTable CRD objects
  repeated CosmosdbTable items = 2;
}

message CosmosdbTableSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string accountName = 3;

  optional string name = 4;

  optional string resourceGroupName = 5;
}

message CosmosdbTableStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional CosmosdbTableSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message DataFactory {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional DataFactorySpec spec = 2;

  optional DataFactoryStatus status = 3;
}

message DataFactoryDatasetMysql {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional DataFactoryDatasetMysqlSpec spec = 2;

  optional DataFactoryDatasetMysqlStatus status = 3;
}

// DataFactoryDatasetMysqlList is a list of DataFactoryDatasetMysqls
message DataFactoryDatasetMysqlList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of DataFactoryDatasetMysql CRD objects
  repeated DataFactoryDatasetMysql items = 2;
}

message DataFactoryDatasetMysqlSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  map<string, string> additionalProperties = 3;

  // +optional
  repeated string annotations = 4;

  optional string dataFactoryName = 5;

  // +optional
  optional string description = 6;

  // +optional
  optional string folder = 7;

  optional string linkedServiceName = 8;

  optional string name = 9;

  // +optional
  map<string, string> parameters = 10;

  optional string resourceGroupName = 11;

  // +optional
  repeated DataFactoryDatasetMysqlSpecSchemaColumn schemaColumn = 12;

  // +optional
  optional string tableName = 13;
}

message DataFactoryDatasetMysqlSpecSchemaColumn {
  // +optional
  optional string description = 1;

  optional string name = 2;

  // +optional
  optional string type = 3;
}

message DataFactoryDatasetMysqlStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional DataFactoryDatasetMysqlSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message DataFactoryDatasetPostgresql {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional DataFactoryDatasetPostgresqlSpec spec = 2;

  optional DataFactoryDatasetPostgresqlStatus status = 3;
}

// DataFactoryDatasetPostgresqlList is a list of DataFactoryDatasetPostgresqls
message DataFactoryDatasetPostgresqlList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of DataFactoryDatasetPostgresql CRD objects
  repeated DataFactoryDatasetPostgresql items = 2;
}

message DataFactoryDatasetPostgresqlSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  map<string, string> additionalProperties = 3;

  // +optional
  repeated string annotations = 4;

  optional string dataFactoryName = 5;

  // +optional
  optional string description = 6;

  // +optional
  optional string folder = 7;

  optional string linkedServiceName = 8;

  optional string name = 9;

  // +optional
  map<string, string> parameters = 10;

  optional string resourceGroupName = 11;

  // +optional
  repeated DataFactoryDatasetPostgresqlSpecSchemaColumn schemaColumn = 12;

  // +optional
  optional string tableName = 13;
}

message DataFactoryDatasetPostgresqlSpecSchemaColumn {
  // +optional
  optional string description = 1;

  optional string name = 2;

  // +optional
  optional string type = 3;
}

message DataFactoryDatasetPostgresqlStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional DataFactoryDatasetPostgresqlSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message DataFactoryDatasetSQLServerTable {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional DataFactoryDatasetSQLServerTableSpec spec = 2;

  optional DataFactoryDatasetSQLServerTableStatus status = 3;
}

// DataFactoryDatasetSQLServerTableList is a list of DataFactoryDatasetSQLServerTables
message DataFactoryDatasetSQLServerTableList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of DataFactoryDatasetSQLServerTable CRD objects
  repeated DataFactoryDatasetSQLServerTable items = 2;
}

message DataFactoryDatasetSQLServerTableSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  map<string, string> additionalProperties = 3;

  // +optional
  repeated string annotations = 4;

  optional string dataFactoryName = 5;

  // +optional
  optional string description = 6;

  // +optional
  optional string folder = 7;

  optional string linkedServiceName = 8;

  optional string name = 9;

  // +optional
  map<string, string> parameters = 10;

  optional string resourceGroupName = 11;

  // +optional
  repeated DataFactoryDatasetSQLServerTableSpecSchemaColumn schemaColumn = 12;

  // +optional
  optional string tableName = 13;
}

message DataFactoryDatasetSQLServerTableSpecSchemaColumn {
  // +optional
  optional string description = 1;

  optional string name = 2;

  // +optional
  optional string type = 3;
}

message DataFactoryDatasetSQLServerTableStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional DataFactoryDatasetSQLServerTableSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message DataFactoryLinkedServiceDataLakeStorageGen2 {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional DataFactoryLinkedServiceDataLakeStorageGen2Spec spec = 2;

  optional DataFactoryLinkedServiceDataLakeStorageGen2Status status = 3;
}

// DataFactoryLinkedServiceDataLakeStorageGen2List is a list of DataFactoryLinkedServiceDataLakeStorageGen2s
message DataFactoryLinkedServiceDataLakeStorageGen2List {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of DataFactoryLinkedServiceDataLakeStorageGen2 CRD objects
  repeated DataFactoryLinkedServiceDataLakeStorageGen2 items = 2;
}

message DataFactoryLinkedServiceDataLakeStorageGen2Spec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  map<string, string> additionalProperties = 3;

  // +optional
  repeated string annotations = 4;

  optional string dataFactoryName = 5;

  // +optional
  optional string description = 6;

  // +optional
  optional string integrationRuntimeName = 7;

  optional string name = 8;

  // +optional
  map<string, string> parameters = 9;

  optional string resourceGroupName = 10;

  optional string servicePrincipalID = 11;

  optional string servicePrincipalKey = 12;

  optional string tenant = 13;

  optional string url = 14;
}

message DataFactoryLinkedServiceDataLakeStorageGen2Status {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional DataFactoryLinkedServiceDataLakeStorageGen2Spec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message DataFactoryLinkedServiceMysql {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional DataFactoryLinkedServiceMysqlSpec spec = 2;

  optional DataFactoryLinkedServiceMysqlStatus status = 3;
}

// DataFactoryLinkedServiceMysqlList is a list of DataFactoryLinkedServiceMysqls
message DataFactoryLinkedServiceMysqlList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of DataFactoryLinkedServiceMysql CRD objects
  repeated DataFactoryLinkedServiceMysql items = 2;
}

message DataFactoryLinkedServiceMysqlSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  map<string, string> additionalProperties = 3;

  // +optional
  repeated string annotations = 4;

  optional string connectionString = 5;

  optional string dataFactoryName = 6;

  // +optional
  optional string description = 7;

  // +optional
  optional string integrationRuntimeName = 8;

  optional string name = 9;

  // +optional
  map<string, string> parameters = 10;

  optional string resourceGroupName = 11;
}

message DataFactoryLinkedServiceMysqlStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional DataFactoryLinkedServiceMysqlSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message DataFactoryLinkedServicePostgresql {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional DataFactoryLinkedServicePostgresqlSpec spec = 2;

  optional DataFactoryLinkedServicePostgresqlStatus status = 3;
}

// DataFactoryLinkedServicePostgresqlList is a list of DataFactoryLinkedServicePostgresqls
message DataFactoryLinkedServicePostgresqlList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of DataFactoryLinkedServicePostgresql CRD objects
  repeated DataFactoryLinkedServicePostgresql items = 2;
}

message DataFactoryLinkedServicePostgresqlSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  map<string, string> additionalProperties = 3;

  // +optional
  repeated string annotations = 4;

  optional string connectionString = 5;

  optional string dataFactoryName = 6;

  // +optional
  optional string description = 7;

  // +optional
  optional string integrationRuntimeName = 8;

  optional string name = 9;

  // +optional
  map<string, string> parameters = 10;

  optional string resourceGroupName = 11;
}

message DataFactoryLinkedServicePostgresqlStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional DataFactoryLinkedServicePostgresqlSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message DataFactoryLinkedServiceSQLServer {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional DataFactoryLinkedServiceSQLServerSpec spec = 2;

  optional DataFactoryLinkedServiceSQLServerStatus status = 3;
}

// DataFactoryLinkedServiceSQLServerList is a list of DataFactoryLinkedServiceSQLServers
message DataFactoryLinkedServiceSQLServerList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of DataFactoryLinkedServiceSQLServer CRD objects
  repeated DataFactoryLinkedServiceSQLServer items = 2;
}

message DataFactoryLinkedServiceSQLServerSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  map<string, string> additionalProperties = 3;

  // +optional
  repeated string annotations = 4;

  optional string connectionString = 5;

  optional string dataFactoryName = 6;

  // +optional
  optional string description = 7;

  // +optional
  optional string integrationRuntimeName = 8;

  optional string name = 9;

  // +optional
  map<string, string> parameters = 10;

  optional string resourceGroupName = 11;
}

message DataFactoryLinkedServiceSQLServerStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional DataFactoryLinkedServiceSQLServerSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

// DataFactoryList is a list of DataFactorys
message DataFactoryList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of DataFactory CRD objects
  repeated DataFactory items = 2;
}

message DataFactoryPipeline {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional DataFactoryPipelineSpec spec = 2;

  optional DataFactoryPipelineStatus status = 3;
}

// DataFactoryPipelineList is a list of DataFactoryPipelines
message DataFactoryPipelineList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of DataFactoryPipeline CRD objects
  repeated DataFactoryPipeline items = 2;
}

message DataFactoryPipelineSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  repeated string annotations = 3;

  optional string dataFactoryName = 4;

  // +optional
  optional string description = 5;

  optional string name = 6;

  // +optional
  map<string, string> parameters = 7;

  optional string resourceGroupName = 8;

  // +optional
  map<string, string> variables = 9;
}

message DataFactoryPipelineStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional DataFactoryPipelineSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message DataFactorySpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated DataFactorySpecGithubConfiguration githubConfiguration = 3;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated DataFactorySpecIdentity identity = 4;

  optional string location = 5;

  optional string name = 6;

  optional string resourceGroupName = 7;

  // +optional
  map<string, string> tags = 8;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated DataFactorySpecVstsConfiguration vstsConfiguration = 9;
}

message DataFactorySpecGithubConfiguration {
  optional string accountName = 1;

  optional string branchName = 2;

  optional string gitURL = 3;

  optional string repositoryName = 4;

  optional string rootFolder = 5;
}

message DataFactorySpecIdentity {
  // +optional
  optional string principalID = 1;

  // +optional
  optional string tenantID = 2;

  optional string type = 3;
}

message DataFactorySpecVstsConfiguration {
  optional string accountName = 1;

  optional string branchName = 2;

  optional string projectName = 3;

  optional string repositoryName = 4;

  optional string rootFolder = 5;

  optional string tenantID = 6;
}

message DataFactoryStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional DataFactorySpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message DataLakeAnalyticsAccount {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional DataLakeAnalyticsAccountSpec spec = 2;

  optional DataLakeAnalyticsAccountStatus status = 3;
}

// DataLakeAnalyticsAccountList is a list of DataLakeAnalyticsAccounts
message DataLakeAnalyticsAccountList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of DataLakeAnalyticsAccount CRD objects
  repeated DataLakeAnalyticsAccount items = 2;
}

message DataLakeAnalyticsAccountSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string defaultStoreAccountName = 3;

  optional string location = 4;

  optional string name = 5;

  optional string resourceGroupName = 6;

  // +optional
  map<string, string> tags = 7;

  // +optional
  optional string tier = 8;
}

message DataLakeAnalyticsAccountStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional DataLakeAnalyticsAccountSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message DataLakeAnalyticsFirewallRule {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional DataLakeAnalyticsFirewallRuleSpec spec = 2;

  optional DataLakeAnalyticsFirewallRuleStatus status = 3;
}

// DataLakeAnalyticsFirewallRuleList is a list of DataLakeAnalyticsFirewallRules
message DataLakeAnalyticsFirewallRuleList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of DataLakeAnalyticsFirewallRule CRD objects
  repeated DataLakeAnalyticsFirewallRule items = 2;
}

message DataLakeAnalyticsFirewallRuleSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string accountName = 3;

  optional string endIPAddress = 4;

  optional string name = 5;

  optional string resourceGroupName = 6;

  optional string startIPAddress = 7;
}

message DataLakeAnalyticsFirewallRuleStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional DataLakeAnalyticsFirewallRuleSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message DataLakeStore {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional DataLakeStoreSpec spec = 2;

  optional DataLakeStoreStatus status = 3;
}

message DataLakeStoreFile {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional DataLakeStoreFileSpec spec = 2;

  optional DataLakeStoreFileStatus status = 3;
}

// DataLakeStoreFileList is a list of DataLakeStoreFiles
message DataLakeStoreFileList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of DataLakeStoreFile CRD objects
  repeated DataLakeStoreFile items = 2;
}

message DataLakeStoreFileSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string accountName = 3;

  optional string localFilePath = 4;

  optional string remoteFilePath = 5;
}

message DataLakeStoreFileStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional DataLakeStoreFileSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message DataLakeStoreFirewallRule {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional DataLakeStoreFirewallRuleSpec spec = 2;

  optional DataLakeStoreFirewallRuleStatus status = 3;
}

// DataLakeStoreFirewallRuleList is a list of DataLakeStoreFirewallRules
message DataLakeStoreFirewallRuleList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of DataLakeStoreFirewallRule CRD objects
  repeated DataLakeStoreFirewallRule items = 2;
}

message DataLakeStoreFirewallRuleSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string accountName = 3;

  optional string endIPAddress = 4;

  optional string name = 5;

  optional string resourceGroupName = 6;

  optional string startIPAddress = 7;
}

message DataLakeStoreFirewallRuleStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional DataLakeStoreFirewallRuleSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

// DataLakeStoreList is a list of DataLakeStores
message DataLakeStoreList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of DataLakeStore CRD objects
  repeated DataLakeStore items = 2;
}

message DataLakeStoreSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  optional string encryptionState = 3;

  // +optional
  optional string encryptionType = 4;

  // +optional
  optional string endpoint = 5;

  // +optional
  optional string firewallAllowAzureIPS = 6;

  // +optional
  optional string firewallState = 7;

  optional string location = 8;

  optional string name = 9;

  optional string resourceGroupName = 10;

  // +optional
  map<string, string> tags = 11;

  // +optional
  optional string tier = 12;
}

message DataLakeStoreStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional DataLakeStoreSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message DatabricksWorkspace {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional DatabricksWorkspaceSpec spec = 2;

  optional DatabricksWorkspaceStatus status = 3;
}

// DatabricksWorkspaceList is a list of DatabricksWorkspaces
message DatabricksWorkspaceList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of DatabricksWorkspace CRD objects
  repeated DatabricksWorkspace items = 2;
}

message DatabricksWorkspaceSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string location = 3;

  // +optional
  optional string managedResourceGroupID = 4;

  // +optional
  optional string managedResourceGroupName = 5;

  optional string name = 6;

  optional string resourceGroupName = 7;

  optional string sku = 8;

  // +optional
  map<string, string> tags = 9;
}

message DatabricksWorkspaceStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional DatabricksWorkspaceSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message DdosProtectionPlan {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional DdosProtectionPlanSpec spec = 2;

  optional DdosProtectionPlanStatus status = 3;
}

// DdosProtectionPlanList is a list of DdosProtectionPlans
message DdosProtectionPlanList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of DdosProtectionPlan CRD objects
  repeated DdosProtectionPlan items = 2;
}

message DdosProtectionPlanSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string location = 3;

  optional string name = 4;

  optional string resourceGroupName = 5;

  // +optional
  map<string, string> tags = 6;

  // +optional
  repeated string virtualNetworkIDS = 7;
}

message DdosProtectionPlanStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional DdosProtectionPlanSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message DevTestLab {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional DevTestLabSpec spec = 2;

  optional DevTestLabStatus status = 3;
}

// DevTestLabList is a list of DevTestLabs
message DevTestLabList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of DevTestLab CRD objects
  repeated DevTestLab items = 2;
}

message DevTestLabSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  optional string artifactsStorageAccountID = 3;

  // +optional
  optional string defaultPremiumStorageAccountID = 4;

  // +optional
  optional string defaultStorageAccountID = 5;

  // +optional
  optional string keyVaultID = 6;

  optional string location = 7;

  optional string name = 8;

  // +optional
  optional string premiumDataDiskStorageAccountID = 9;

  optional string resourceGroupName = 10;

  // +optional
  optional string storageType = 11;

  // +optional
  map<string, string> tags = 12;

  // +optional
  optional string uniqueIdentifier = 13;
}

message DevTestLabStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional DevTestLabSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message DevTestLinuxVirtualMachine {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional DevTestLinuxVirtualMachineSpec spec = 2;

  optional DevTestLinuxVirtualMachineStatus status = 3;
}

// DevTestLinuxVirtualMachineList is a list of DevTestLinuxVirtualMachines
message DevTestLinuxVirtualMachineList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of DevTestLinuxVirtualMachine CRD objects
  repeated DevTestLinuxVirtualMachine items = 2;
}

message DevTestLinuxVirtualMachineSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional k8s.io.api.core.v1.LocalObjectReference secretRef = 3;

  // +optional
  optional bool allowClaim = 4;

  // +optional
  optional bool disallowPublicIPAddress = 5;

  // +optional
  optional string fqdn = 6;

  // +kubebuilder:validation:MaxItems=1
  repeated DevTestLinuxVirtualMachineSpecGalleryImageReference galleryImageReference = 7;

  // +optional
  repeated DevTestLinuxVirtualMachineSpecInboundNATRule inboundNATRule = 8;

  optional string labName = 9;

  optional string labSubnetName = 10;

  optional string labVirtualNetworkID = 11;

  optional string location = 12;

  optional string name = 13;

  // +optional
  optional string notes = 14;

  optional string resourceGroupName = 15;

  optional string size = 16;

  // +optional
  optional string sshKey = 17;

  optional string storageType = 18;

  // +optional
  map<string, string> tags = 19;

  // +optional
  optional string uniqueIdentifier = 20;

  optional string username = 21;
}

message DevTestLinuxVirtualMachineSpecGalleryImageReference {
  optional string offer = 1;

  optional string publisher = 2;

  optional string sku = 3;

  optional string version = 4;
}

message DevTestLinuxVirtualMachineSpecInboundNATRule {
  optional int64 backendPort = 1;

  // +optional
  optional int64 frontendPort = 2;

  optional string protocol = 3;
}

message DevTestLinuxVirtualMachineStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional DevTestLinuxVirtualMachineSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message DevTestPolicy {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional DevTestPolicySpec spec = 2;

  optional DevTestPolicyStatus status = 3;
}

// DevTestPolicyList is a list of DevTestPolicys
message DevTestPolicyList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of DevTestPolicy CRD objects
  repeated DevTestPolicy items = 2;
}

message DevTestPolicySpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  optional string description = 3;

  optional string evaluatorType = 4;

  // +optional
  optional string factData = 5;

  optional string labName = 6;

  optional string name = 7;

  optional string policySetName = 8;

  optional string resourceGroupName = 9;

  // +optional
  map<string, string> tags = 10;

  optional string threshold = 11;
}

message DevTestPolicyStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional DevTestPolicySpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message DevTestVirtualNetwork {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional DevTestVirtualNetworkSpec spec = 2;

  optional DevTestVirtualNetworkStatus status = 3;
}

// DevTestVirtualNetworkList is a list of DevTestVirtualNetworks
message DevTestVirtualNetworkList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of DevTestVirtualNetwork CRD objects
  repeated DevTestVirtualNetwork items = 2;
}

message DevTestVirtualNetworkSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  optional string description = 3;

  optional string labName = 4;

  optional string name = 5;

  optional string resourceGroupName = 6;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated DevTestVirtualNetworkSpecSubnet subnet = 7;

  // +optional
  map<string, string> tags = 8;

  // +optional
  optional string uniqueIdentifier = 9;
}

message DevTestVirtualNetworkSpecSubnet {
  // +optional
  optional string name = 1;

  // +optional
  optional string useInVirtualMachineCreation = 2;

  // +optional
  optional string usePublicIPAddress = 3;
}

message DevTestVirtualNetworkStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional DevTestVirtualNetworkSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message DevTestWindowsVirtualMachine {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional DevTestWindowsVirtualMachineSpec spec = 2;

  optional DevTestWindowsVirtualMachineStatus status = 3;
}

// DevTestWindowsVirtualMachineList is a list of DevTestWindowsVirtualMachines
message DevTestWindowsVirtualMachineList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of DevTestWindowsVirtualMachine CRD objects
  repeated DevTestWindowsVirtualMachine items = 2;
}

message DevTestWindowsVirtualMachineSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  optional bool allowClaim = 3;

  // +optional
  optional bool disallowPublicIPAddress = 4;

  // +optional
  optional string fqdn = 5;

  // +kubebuilder:validation:MaxItems=1
  repeated DevTestWindowsVirtualMachineSpecGalleryImageReference galleryImageReference = 6;

  // +optional
  repeated DevTestWindowsVirtualMachineSpecInboundNATRule inboundNATRule = 7;

  optional string labName = 8;

  optional string labSubnetName = 9;

  optional string labVirtualNetworkID = 10;

  optional string location = 11;

  optional string name = 12;

  // +optional
  optional string notes = 13;

  optional string password = 14;

  optional string resourceGroupName = 15;

  optional string size = 16;

  optional string storageType = 17;

  // +optional
  map<string, string> tags = 18;

  // +optional
  optional string uniqueIdentifier = 19;

  optional string username = 20;
}

message DevTestWindowsVirtualMachineSpecGalleryImageReference {
  optional string offer = 1;

  optional string publisher = 2;

  optional string sku = 3;

  optional string version = 4;
}

message DevTestWindowsVirtualMachineSpecInboundNATRule {
  optional int64 backendPort = 1;

  // +optional
  optional int64 frontendPort = 2;

  optional string protocol = 3;
}

message DevTestWindowsVirtualMachineStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional DevTestWindowsVirtualMachineSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message DevspaceController {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional DevspaceControllerSpec spec = 2;

  optional DevspaceControllerStatus status = 3;
}

// DevspaceControllerList is a list of DevspaceControllers
message DevspaceControllerList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of DevspaceController CRD objects
  repeated DevspaceController items = 2;
}

message DevspaceControllerSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional k8s.io.api.core.v1.LocalObjectReference secretRef = 3;

  // +optional
  optional string dataPlaneFqdn = 4;

  optional string hostSuffix = 5;

  optional string location = 6;

  optional string name = 7;

  optional string resourceGroupName = 8;

  // +kubebuilder:validation:MaxItems=1
  repeated DevspaceControllerSpecSku sku = 9;

  // +optional
  map<string, string> tags = 10;

  optional string targetContainerHostResourceID = 11;
}

message DevspaceControllerSpecSku {
  optional string name = 1;

  optional string tier = 2;
}

message DevspaceControllerStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional DevspaceControllerSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message DnsARecord {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional DnsARecordSpec spec = 2;

  optional DnsARecordStatus status = 3;
}

// DnsARecordList is a list of DnsARecords
message DnsARecordList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of DnsARecord CRD objects
  repeated DnsARecord items = 2;
}

message DnsARecordSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string name = 3;

  repeated string records = 4;

  optional string resourceGroupName = 5;

  // +optional
  map<string, string> tags = 6;

  optional int64 ttl = 7;

  optional string zoneName = 8;
}

message DnsARecordStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional DnsARecordSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message DnsAaaaRecord {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional DnsAaaaRecordSpec spec = 2;

  optional DnsAaaaRecordStatus status = 3;
}

// DnsAaaaRecordList is a list of DnsAaaaRecords
message DnsAaaaRecordList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of DnsAaaaRecord CRD objects
  repeated DnsAaaaRecord items = 2;
}

message DnsAaaaRecordSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string name = 3;

  repeated string records = 4;

  optional string resourceGroupName = 5;

  // +optional
  map<string, string> tags = 6;

  optional int64 ttl = 7;

  optional string zoneName = 8;
}

message DnsAaaaRecordStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional DnsAaaaRecordSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message DnsCaaRecord {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional DnsCaaRecordSpec spec = 2;

  optional DnsCaaRecordStatus status = 3;
}

// DnsCaaRecordList is a list of DnsCaaRecords
message DnsCaaRecordList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of DnsCaaRecord CRD objects
  repeated DnsCaaRecord items = 2;
}

message DnsCaaRecordSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string name = 3;

  repeated DnsCaaRecordSpecRecord record = 4;

  optional string resourceGroupName = 5;

  // +optional
  map<string, string> tags = 6;

  optional int64 ttl = 7;

  optional string zoneName = 8;
}

message DnsCaaRecordSpecRecord {
  optional int64 flags = 1;

  optional string tag = 2;

  optional string value = 3;
}

message DnsCaaRecordStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional DnsCaaRecordSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message DnsCnameRecord {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional DnsCnameRecordSpec spec = 2;

  optional DnsCnameRecordStatus status = 3;
}

// DnsCnameRecordList is a list of DnsCnameRecords
message DnsCnameRecordList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of DnsCnameRecord CRD objects
  repeated DnsCnameRecord items = 2;
}

message DnsCnameRecordSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string name = 3;

  optional string record = 4;

  optional string resourceGroupName = 5;

  // +optional
  map<string, string> tags = 6;

  optional int64 ttl = 7;

  optional string zoneName = 8;
}

message DnsCnameRecordStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional DnsCnameRecordSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message DnsMxRecord {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional DnsMxRecordSpec spec = 2;

  optional DnsMxRecordStatus status = 3;
}

// DnsMxRecordList is a list of DnsMxRecords
message DnsMxRecordList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of DnsMxRecord CRD objects
  repeated DnsMxRecord items = 2;
}

message DnsMxRecordSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string name = 3;

  repeated DnsMxRecordSpecRecord record = 4;

  optional string resourceGroupName = 5;

  // +optional
  map<string, string> tags = 6;

  optional int64 ttl = 7;

  optional string zoneName = 8;
}

message DnsMxRecordSpecRecord {
  optional string exchange = 1;

  optional string preference = 2;
}

message DnsMxRecordStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional DnsMxRecordSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message DnsNsRecord {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional DnsNsRecordSpec spec = 2;

  optional DnsNsRecordStatus status = 3;
}

// DnsNsRecordList is a list of DnsNsRecords
message DnsNsRecordList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of DnsNsRecord CRD objects
  repeated DnsNsRecord items = 2;
}

message DnsNsRecordSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string name = 3;

  // +optional
  // Deprecated
  repeated DnsNsRecordSpecRecord record = 4;

  // +optional
  repeated string records = 5;

  optional string resourceGroupName = 6;

  // +optional
  map<string, string> tags = 7;

  optional int64 ttl = 8;

  optional string zoneName = 9;
}

message DnsNsRecordSpecRecord {
  optional string nsdname = 1;
}

message DnsNsRecordStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional DnsNsRecordSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message DnsPtrRecord {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional DnsPtrRecordSpec spec = 2;

  optional DnsPtrRecordStatus status = 3;
}

// DnsPtrRecordList is a list of DnsPtrRecords
message DnsPtrRecordList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of DnsPtrRecord CRD objects
  repeated DnsPtrRecord items = 2;
}

message DnsPtrRecordSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string name = 3;

  repeated string records = 4;

  optional string resourceGroupName = 5;

  // +optional
  map<string, string> tags = 6;

  optional int64 ttl = 7;

  optional string zoneName = 8;
}

message DnsPtrRecordStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional DnsPtrRecordSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message DnsSrvRecord {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional DnsSrvRecordSpec spec = 2;

  optional DnsSrvRecordStatus status = 3;
}

// DnsSrvRecordList is a list of DnsSrvRecords
message DnsSrvRecordList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of DnsSrvRecord CRD objects
  repeated DnsSrvRecord items = 2;
}

message DnsSrvRecordSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string name = 3;

  repeated DnsSrvRecordSpecRecord record = 4;

  optional string resourceGroupName = 5;

  // +optional
  map<string, string> tags = 6;

  optional int64 ttl = 7;

  optional string zoneName = 8;
}

message DnsSrvRecordSpecRecord {
  optional int64 port = 1;

  optional int64 priority = 2;

  optional string target = 3;

  optional int64 weight = 4;
}

message DnsSrvRecordStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional DnsSrvRecordSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message DnsTxtRecord {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional DnsTxtRecordSpec spec = 2;

  optional DnsTxtRecordStatus status = 3;
}

// DnsTxtRecordList is a list of DnsTxtRecords
message DnsTxtRecordList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of DnsTxtRecord CRD objects
  repeated DnsTxtRecord items = 2;
}

message DnsTxtRecordSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string name = 3;

  repeated DnsTxtRecordSpecRecord record = 4;

  optional string resourceGroupName = 5;

  // +optional
  map<string, string> tags = 6;

  optional int64 ttl = 7;

  optional string zoneName = 8;
}

message DnsTxtRecordSpecRecord {
  optional string value = 1;
}

message DnsTxtRecordStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional DnsTxtRecordSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message DnsZone {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional DnsZoneSpec spec = 2;

  optional DnsZoneStatus status = 3;
}

// DnsZoneList is a list of DnsZones
message DnsZoneList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of DnsZone CRD objects
  repeated DnsZone items = 2;
}

message DnsZoneSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  optional int64 maxNumberOfRecordSets = 3;

  optional string name = 4;

  // +optional
  repeated string nameServers = 5;

  // +optional
  optional int64 numberOfRecordSets = 6;

  // +optional
  repeated string registrationVirtualNetworkIDS = 7;

  // +optional
  repeated string resolutionVirtualNetworkIDS = 8;

  optional string resourceGroupName = 9;

  // +optional
  map<string, string> tags = 10;

  // +optional
  optional string zoneType = 11;
}

message DnsZoneStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional DnsZoneSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message EventgridDomain {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional EventgridDomainSpec spec = 2;

  optional EventgridDomainStatus status = 3;
}

// EventgridDomainList is a list of EventgridDomains
message EventgridDomainList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of EventgridDomain CRD objects
  repeated EventgridDomain items = 2;
}

message EventgridDomainSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  optional string endpoint = 3;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated EventgridDomainSpecInputMappingDefaultValues inputMappingDefaultValues = 4;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated EventgridDomainSpecInputMappingFields inputMappingFields = 5;

  // +optional
  optional string inputSchema = 6;

  optional string location = 7;

  optional string name = 8;

  optional string resourceGroupName = 9;

  // +optional
  map<string, string> tags = 10;
}

message EventgridDomainSpecInputMappingDefaultValues {
  // +optional
  optional string dataVersion = 1;

  // +optional
  optional string eventType = 2;

  // +optional
  optional string subject = 3;
}

message EventgridDomainSpecInputMappingFields {
  // +optional
  optional string dataVersion = 1;

  // +optional
  optional string eventTime = 2;

  // +optional
  optional string eventType = 3;

  // +optional
  optional string ID = 4;

  // +optional
  optional string subject = 5;

  // +optional
  optional string topic = 6;
}

message EventgridDomainStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional EventgridDomainSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message EventgridEventSubscription {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional EventgridEventSubscriptionSpec spec = 2;

  optional EventgridEventSubscriptionStatus status = 3;
}

// EventgridEventSubscriptionList is a list of EventgridEventSubscriptions
message EventgridEventSubscriptionList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of EventgridEventSubscription CRD objects
  repeated EventgridEventSubscription items = 2;
}

message EventgridEventSubscriptionSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  optional string eventDeliverySchema = 3;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated EventgridEventSubscriptionSpecEventhubEndpoint eventhubEndpoint = 4;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated EventgridEventSubscriptionSpecHybridConnectionEndpoint hybridConnectionEndpoint = 5;

  // +optional
  repeated string includedEventTypes = 6;

  // +optional
  repeated string labels = 7;

  optional string name = 8;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated EventgridEventSubscriptionSpecRetryPolicy retryPolicy = 9;

  optional string scope = 10;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated EventgridEventSubscriptionSpecStorageBlobDeadLetterDestination storageBlobDeadLetterDestination = 11;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated EventgridEventSubscriptionSpecStorageQueueEndpoint storageQueueEndpoint = 12;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated EventgridEventSubscriptionSpecSubjectFilter subjectFilter = 13;

  // +optional
  optional string topicName = 14;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated EventgridEventSubscriptionSpecWebhookEndpoint webhookEndpoint = 15;
}

message EventgridEventSubscriptionSpecEventhubEndpoint {
  optional string eventhubID = 1;
}

message EventgridEventSubscriptionSpecHybridConnectionEndpoint {
  optional string hybridConnectionID = 1;
}

message EventgridEventSubscriptionSpecRetryPolicy {
  optional int64 eventTimeToLive = 1;

  optional int64 maxDeliveryAttempts = 2;
}

message EventgridEventSubscriptionSpecStorageBlobDeadLetterDestination {
  optional string storageAccountID = 1;

  optional string storageBlobContainerName = 2;
}

message EventgridEventSubscriptionSpecStorageQueueEndpoint {
  optional string queueName = 1;

  optional string storageAccountID = 2;
}

message EventgridEventSubscriptionSpecSubjectFilter {
  // +optional
  optional bool caseSensitive = 1;

  // +optional
  optional string subjectBeginsWith = 2;

  // +optional
  optional string subjectEndsWith = 3;
}

message EventgridEventSubscriptionSpecWebhookEndpoint {
  optional string url = 1;
}

message EventgridEventSubscriptionStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional EventgridEventSubscriptionSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message EventgridTopic {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional EventgridTopicSpec spec = 2;

  optional EventgridTopicStatus status = 3;
}

// EventgridTopicList is a list of EventgridTopics
message EventgridTopicList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of EventgridTopic CRD objects
  repeated EventgridTopic items = 2;
}

message EventgridTopicSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional k8s.io.api.core.v1.LocalObjectReference secretRef = 3;

  // +optional
  optional string endpoint = 4;

  optional string location = 5;

  optional string name = 6;

  optional string resourceGroupName = 7;

  // +optional
  map<string, string> tags = 8;
}

message EventgridTopicStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional EventgridTopicSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message Eventhub {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional EventhubSpec spec = 2;

  optional EventhubStatus status = 3;
}

message EventhubAuthorizationRule {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional EventhubAuthorizationRuleSpec spec = 2;

  optional EventhubAuthorizationRuleStatus status = 3;
}

// EventhubAuthorizationRuleList is a list of EventhubAuthorizationRules
message EventhubAuthorizationRuleList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of EventhubAuthorizationRule CRD objects
  repeated EventhubAuthorizationRule items = 2;
}

message EventhubAuthorizationRuleSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional k8s.io.api.core.v1.LocalObjectReference secretRef = 3;

  optional string eventhubName = 4;

  // +optional
  optional bool listen = 5;

  // +optional
  // Deprecated
  optional string location = 6;

  // +optional
  optional bool manage = 7;

  optional string name = 8;

  optional string namespaceName = 9;

  optional string resourceGroupName = 10;

  // +optional
  optional bool send = 11;
}

message EventhubAuthorizationRuleStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional EventhubAuthorizationRuleSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message EventhubConsumerGroup {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional EventhubConsumerGroupSpec spec = 2;

  optional EventhubConsumerGroupStatus status = 3;
}

// EventhubConsumerGroupList is a list of EventhubConsumerGroups
message EventhubConsumerGroupList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of EventhubConsumerGroup CRD objects
  repeated EventhubConsumerGroup items = 2;
}

message EventhubConsumerGroupSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string eventhubName = 3;

  // +optional
  // Deprecated
  optional string location = 4;

  optional string name = 5;

  optional string namespaceName = 6;

  optional string resourceGroupName = 7;

  // +optional
  optional string userMetadata = 8;
}

message EventhubConsumerGroupStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional EventhubConsumerGroupSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

// EventhubList is a list of Eventhubs
message EventhubList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of Eventhub CRD objects
  repeated Eventhub items = 2;
}

message EventhubNamespaceAuthorizationRule {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional EventhubNamespaceAuthorizationRuleSpec spec = 2;

  optional EventhubNamespaceAuthorizationRuleStatus status = 3;
}

// EventhubNamespaceAuthorizationRuleList is a list of EventhubNamespaceAuthorizationRules
message EventhubNamespaceAuthorizationRuleList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of EventhubNamespaceAuthorizationRule CRD objects
  repeated EventhubNamespaceAuthorizationRule items = 2;
}

message EventhubNamespaceAuthorizationRuleSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional k8s.io.api.core.v1.LocalObjectReference secretRef = 3;

  // +optional
  optional bool listen = 4;

  // +optional
  // Deprecated
  optional string location = 5;

  // +optional
  optional bool manage = 6;

  optional string name = 7;

  optional string namespaceName = 8;

  optional string resourceGroupName = 9;

  // +optional
  optional bool send = 10;
}

message EventhubNamespaceAuthorizationRuleStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional EventhubNamespaceAuthorizationRuleSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message EventhubNamespace_ {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional EventhubNamespace_Spec spec = 2;

  optional EventhubNamespace_Status status = 3;
}

// EventhubNamespace_List is a list of EventhubNamespace_s
message EventhubNamespace_List {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of EventhubNamespace_ CRD objects
  repeated EventhubNamespace_ items = 2;
}

message EventhubNamespace_Spec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional k8s.io.api.core.v1.LocalObjectReference secretRef = 3;

  // +optional
  optional bool autoInflateEnabled = 4;

  // +optional
  optional int64 capacity = 5;

  // +optional
  optional bool kafkaEnabled = 6;

  optional string location = 7;

  // +optional
  optional int64 maximumThroughputUnits = 8;

  optional string name = 9;

  optional string resourceGroupName = 10;

  optional string sku = 11;

  // +optional
  map<string, string> tags = 12;
}

message EventhubNamespace_Status {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional EventhubNamespace_Spec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message EventhubSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated EventhubSpecCaptureDescription captureDescription = 3;

  // +optional
  // Deprecated
  optional string location = 4;

  optional int64 messageRetention = 5;

  optional string name = 6;

  optional string namespaceName = 7;

  optional int64 partitionCount = 8;

  // +optional
  repeated string partitionIDS = 9;

  optional string resourceGroupName = 10;
}

message EventhubSpecCaptureDescription {
  // +kubebuilder:validation:MaxItems=1
  repeated EventhubSpecCaptureDescriptionDestination destination = 1;

  optional bool enabled = 2;

  optional string encoding = 3;

  // +optional
  optional int64 intervalInSeconds = 4;

  // +optional
  optional int64 sizeLimitInBytes = 5;

  // +optional
  optional bool skipEmptyArchives = 6;
}

message EventhubSpecCaptureDescriptionDestination {
  optional string archiveNameFormat = 1;

  optional string blobContainerName = 2;

  optional string name = 3;

  optional string storageAccountID = 4;
}

message EventhubStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional EventhubSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message ExpressRouteCircuit {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional ExpressRouteCircuitSpec spec = 2;

  optional ExpressRouteCircuitStatus status = 3;
}

message ExpressRouteCircuitAuthorization {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional ExpressRouteCircuitAuthorizationSpec spec = 2;

  optional ExpressRouteCircuitAuthorizationStatus status = 3;
}

// ExpressRouteCircuitAuthorizationList is a list of ExpressRouteCircuitAuthorizations
message ExpressRouteCircuitAuthorizationList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of ExpressRouteCircuitAuthorization CRD objects
  repeated ExpressRouteCircuitAuthorization items = 2;
}

message ExpressRouteCircuitAuthorizationSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional k8s.io.api.core.v1.LocalObjectReference secretRef = 3;

  // +optional
  optional string authorizationUseStatus = 4;

  optional string expressRouteCircuitName = 5;

  optional string name = 6;

  optional string resourceGroupName = 7;
}

message ExpressRouteCircuitAuthorizationStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional ExpressRouteCircuitAuthorizationSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

// ExpressRouteCircuitList is a list of ExpressRouteCircuits
message ExpressRouteCircuitList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of ExpressRouteCircuit CRD objects
  repeated ExpressRouteCircuit items = 2;
}

message ExpressRouteCircuitPeering {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional ExpressRouteCircuitPeeringSpec spec = 2;

  optional ExpressRouteCircuitPeeringStatus status = 3;
}

// ExpressRouteCircuitPeeringList is a list of ExpressRouteCircuitPeerings
message ExpressRouteCircuitPeeringList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of ExpressRouteCircuitPeering CRD objects
  repeated ExpressRouteCircuitPeering items = 2;
}

message ExpressRouteCircuitPeeringSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional k8s.io.api.core.v1.LocalObjectReference secretRef = 3;

  // +optional
  optional int64 azureAsn = 4;

  optional string expressRouteCircuitName = 5;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated ExpressRouteCircuitPeeringSpecMicrosoftPeeringConfig microsoftPeeringConfig = 6;

  // +optional
  optional int64 peerAsn = 7;

  optional string peeringType = 8;

  // +optional
  optional string primaryAzurePort = 9;

  optional string primaryPeerAddressPrefix = 10;

  optional string resourceGroupName = 11;

  // +optional
  optional string secondaryAzurePort = 12;

  optional string secondaryPeerAddressPrefix = 13;

  optional int64 vlanID = 14;
}

message ExpressRouteCircuitPeeringSpecMicrosoftPeeringConfig {
  repeated string advertisedPublicPrefixes = 1;
}

message ExpressRouteCircuitPeeringStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional ExpressRouteCircuitPeeringSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message ExpressRouteCircuitSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional k8s.io.api.core.v1.LocalObjectReference secretRef = 3;

  // +optional
  optional bool allowClassicOperations = 4;

  optional int64 bandwidthInMbps = 5;

  optional string location = 6;

  optional string name = 7;

  optional string peeringLocation = 8;

  optional string resourceGroupName = 9;

  optional string serviceProviderName = 10;

  // +optional
  optional string serviceProviderProvisioningState = 11;

  // +kubebuilder:validation:MaxItems=1
  repeated ExpressRouteCircuitSpecSku sku = 12;

  // +optional
  map<string, string> tags = 13;
}

message ExpressRouteCircuitSpecSku {
  optional string family = 1;

  optional string tier = 2;
}

message ExpressRouteCircuitStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional ExpressRouteCircuitSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message Firewall {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional FirewallSpec spec = 2;

  optional FirewallStatus status = 3;
}

message FirewallApplicationRuleCollection {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional FirewallApplicationRuleCollectionSpec spec = 2;

  optional FirewallApplicationRuleCollectionStatus status = 3;
}

// FirewallApplicationRuleCollectionList is a list of FirewallApplicationRuleCollections
message FirewallApplicationRuleCollectionList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of FirewallApplicationRuleCollection CRD objects
  repeated FirewallApplicationRuleCollection items = 2;
}

message FirewallApplicationRuleCollectionSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string action = 3;

  optional string azureFirewallName = 4;

  optional string name = 5;

  optional int64 priority = 6;

  optional string resourceGroupName = 7;

  // +kubebuilder:validation:MinItems=1
  repeated FirewallApplicationRuleCollectionSpecRule rule = 8;
}

message FirewallApplicationRuleCollectionSpecRule {
  // +optional
  optional string description = 1;

  // +optional
  repeated string fqdnTags = 2;

  optional string name = 3;

  // +optional
  // +kubebuilder:validation:MinItems=1
  repeated FirewallApplicationRuleCollectionSpecRuleProtocol protocol = 4;

  repeated string sourceAddresses = 5;

  // +optional
  repeated string targetFqdns = 6;
}

message FirewallApplicationRuleCollectionSpecRuleProtocol {
  // +optional
  optional int64 port = 1;

  optional string type = 2;
}

message FirewallApplicationRuleCollectionStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional FirewallApplicationRuleCollectionSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

// FirewallList is a list of Firewalls
message FirewallList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of Firewall CRD objects
  repeated Firewall items = 2;
}

message FirewallNATRuleCollection {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional FirewallNATRuleCollectionSpec spec = 2;

  optional FirewallNATRuleCollectionStatus status = 3;
}

// FirewallNATRuleCollectionList is a list of FirewallNATRuleCollections
message FirewallNATRuleCollectionList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of FirewallNATRuleCollection CRD objects
  repeated FirewallNATRuleCollection items = 2;
}

message FirewallNATRuleCollectionSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string action = 3;

  optional string azureFirewallName = 4;

  optional string name = 5;

  optional int64 priority = 6;

  optional string resourceGroupName = 7;

  // +kubebuilder:validation:MinItems=1
  repeated FirewallNATRuleCollectionSpecRule rule = 8;
}

message FirewallNATRuleCollectionSpecRule {
  // +optional
  optional string description = 1;

  repeated string destinationAddresses = 2;

  repeated string destinationPorts = 3;

  optional string name = 4;

  repeated string protocols = 5;

  repeated string sourceAddresses = 6;

  optional string translatedAddress = 7;

  optional string translatedPort = 8;
}

message FirewallNATRuleCollectionStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional FirewallNATRuleCollectionSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message FirewallNetworkRuleCollection {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional FirewallNetworkRuleCollectionSpec spec = 2;

  optional FirewallNetworkRuleCollectionStatus status = 3;
}

// FirewallNetworkRuleCollectionList is a list of FirewallNetworkRuleCollections
message FirewallNetworkRuleCollectionList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of FirewallNetworkRuleCollection CRD objects
  repeated FirewallNetworkRuleCollection items = 2;
}

message FirewallNetworkRuleCollectionSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string action = 3;

  optional string azureFirewallName = 4;

  optional string name = 5;

  optional int64 priority = 6;

  optional string resourceGroupName = 7;

  // +kubebuilder:validation:MinItems=1
  repeated FirewallNetworkRuleCollectionSpecRule rule = 8;
}

message FirewallNetworkRuleCollectionSpecRule {
  // +optional
  optional string description = 1;

  repeated string destinationAddresses = 2;

  repeated string destinationPorts = 3;

  optional string name = 4;

  repeated string protocols = 5;

  repeated string sourceAddresses = 6;
}

message FirewallNetworkRuleCollectionStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional FirewallNetworkRuleCollectionSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message FirewallSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +kubebuilder:validation:MaxItems=1
  repeated FirewallSpecIpConfiguration ipConfiguration = 3;

  optional string location = 4;

  optional string name = 5;

  optional string resourceGroupName = 6;

  // +optional
  map<string, string> tags = 7;
}

message FirewallSpecIpConfiguration {
  // +optional
  // Deprecated
  optional string internalPublicIPAddressID = 1;

  optional string name = 2;

  // +optional
  optional string privateIPAddress = 3;

  // +optional
  optional string publicIPAddressID = 4;

  optional string subnetID = 5;
}

message FirewallStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional FirewallSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message FunctionApp {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional FunctionAppSpec spec = 2;

  optional FunctionAppStatus status = 3;
}

// FunctionAppList is a list of FunctionApps
message FunctionAppList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of FunctionApp CRD objects
  repeated FunctionApp items = 2;
}

message FunctionAppSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional k8s.io.api.core.v1.LocalObjectReference secretRef = 3;

  optional string appServicePlanID = 4;

  // +optional
  map<string, string> appSettings = 5;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated FunctionAppSpecAuthSettings authSettings = 6;

  // +optional
  optional bool clientAffinityEnabled = 7;

  // +optional
  repeated FunctionAppSpecConnectionString connectionString = 8;

  // +optional
  optional string defaultHostname = 9;

  // +optional
  optional bool enableBuiltinLogging = 10;

  // +optional
  optional bool enabled = 11;

  // +optional
  optional bool httpsOnly = 12;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated FunctionAppSpecIdentity identity = 13;

  // +optional
  optional string kind = 14;

  optional string location = 15;

  optional string name = 16;

  // +optional
  optional string outboundIPAddresses = 17;

  // +optional
  optional string possibleOutboundIPAddresses = 18;

  optional string resourceGroupName = 19;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated FunctionAppSpecSiteConfig siteConfig = 20;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated FunctionAppSpecSiteCredential siteCredential = 21;

  // +optional
  map<string, string> tags = 22;

  // +optional
  optional string version = 23;
}

message FunctionAppSpecAuthSettings {
  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated FunctionAppSpecAuthSettingsActiveDirectory activeDirectory = 1;

  // +optional
  map<string, string> additionalLoginParams = 2;

  // +optional
  repeated string allowedExternalRedirectUrls = 3;

  // +optional
  optional string defaultProvider = 4;

  optional bool enabled = 5;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated FunctionAppSpecAuthSettingsFacebook facebook = 6;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated FunctionAppSpecAuthSettingsGoogle google = 7;

  // +optional
  optional string issuer = 8;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated FunctionAppSpecAuthSettingsMicrosoft microsoft = 9;

  // +optional
  optional string runtimeVersion = 10;

  // +optional
  optional double tokenRefreshExtensionHours = 11;

  // +optional
  optional bool tokenStoreEnabled = 12;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated FunctionAppSpecAuthSettingsTwitter twitter = 13;

  // +optional
  optional string unauthenticatedClientAction = 14;
}

message FunctionAppSpecAuthSettingsActiveDirectory {
  // +optional
  repeated string allowedAudiences = 1;

  optional string clientID = 2;
}

message FunctionAppSpecAuthSettingsFacebook {
  optional string appID = 1;

  // +optional
  repeated string oauthScopes = 2;
}

message FunctionAppSpecAuthSettingsGoogle {
  optional string clientID = 1;

  // +optional
  repeated string oauthScopes = 2;
}

message FunctionAppSpecAuthSettingsMicrosoft {
  optional string clientID = 1;

  // +optional
  repeated string oauthScopes = 2;
}

message FunctionAppSpecAuthSettingsTwitter {
  optional string consumerKey = 1;
}

message FunctionAppSpecConnectionString {
  optional string name = 1;

  optional string type = 2;
}

message FunctionAppSpecIdentity {
  // +optional
  optional string principalID = 1;

  // +optional
  optional string tenantID = 2;

  optional string type = 3;
}

message FunctionAppSpecSiteConfig {
  // +optional
  optional bool alwaysOn = 1;

  // +optional
  optional string linuxFxVersion = 2;

  // +optional
  optional bool use32BitWorkerProcess = 3;

  // +optional
  optional bool websocketsEnabled = 4;
}

message FunctionAppSpecSiteCredential {
  // +optional
  optional string username = 1;
}

message FunctionAppStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional FunctionAppSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message HdinsightHadoopCluster {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional HdinsightHadoopClusterSpec spec = 2;

  optional HdinsightHadoopClusterStatus status = 3;
}

// HdinsightHadoopClusterList is a list of HdinsightHadoopClusters
message HdinsightHadoopClusterList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of HdinsightHadoopCluster CRD objects
  repeated HdinsightHadoopCluster items = 2;
}

message HdinsightHadoopClusterSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional k8s.io.api.core.v1.LocalObjectReference secretRef = 3;

  optional string clusterVersion = 4;

  // +kubebuilder:validation:MaxItems=1
  repeated HdinsightHadoopClusterSpecComponentVersion componentVersion = 5;

  // +kubebuilder:validation:MaxItems=1
  repeated HdinsightHadoopClusterSpecGateway gateway = 6;

  // +optional
  optional string httpsEndpoint = 7;

  optional string location = 8;

  optional string name = 9;

  optional string resourceGroupName = 10;

  // +kubebuilder:validation:MaxItems=1
  repeated HdinsightHadoopClusterSpecRoles roles = 11;

  // +optional
  optional string sshEndpoint = 12;

  repeated HdinsightHadoopClusterSpecStorageAccount storageAccount = 13;

  // +optional
  map<string, string> tags = 14;

  optional string tier = 15;
}

message HdinsightHadoopClusterSpecComponentVersion {
  optional string hadoop = 1;
}

message HdinsightHadoopClusterSpecGateway {
  optional bool enabled = 1;

  optional string username = 2;
}

message HdinsightHadoopClusterSpecRoles {
  // +kubebuilder:validation:MaxItems=1
  repeated HdinsightHadoopClusterSpecRolesHeadNode headNode = 1;

  // +kubebuilder:validation:MaxItems=1
  repeated HdinsightHadoopClusterSpecRolesWorkerNode workerNode = 2;

  // +kubebuilder:validation:MaxItems=1
  repeated HdinsightHadoopClusterSpecRolesZookeeperNode zookeeperNode = 3;
}

message HdinsightHadoopClusterSpecRolesHeadNode {
  // +optional
  repeated string sshKeys = 1;

  // +optional
  optional string subnetID = 2;

  optional string username = 3;

  // +optional
  optional string virtualNetworkID = 4;

  optional string vmSize = 5;
}

message HdinsightHadoopClusterSpecRolesWorkerNode {
  // +optional
  optional int64 minInstanceCount = 1;

  // +optional
  repeated string sshKeys = 2;

  // +optional
  optional string subnetID = 3;

  optional int64 targetInstanceCount = 4;

  optional string username = 5;

  // +optional
  optional string virtualNetworkID = 6;

  optional string vmSize = 7;
}

message HdinsightHadoopClusterSpecRolesZookeeperNode {
  // +optional
  repeated string sshKeys = 1;

  // +optional
  optional string subnetID = 2;

  optional string username = 3;

  // +optional
  optional string virtualNetworkID = 4;

  optional string vmSize = 5;
}

message HdinsightHadoopClusterSpecStorageAccount {
  optional bool isDefault = 1;

  optional string storageContainerID = 2;
}

message HdinsightHadoopClusterStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional HdinsightHadoopClusterSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message HdinsightHbaseCluster {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional HdinsightHbaseClusterSpec spec = 2;

  optional HdinsightHbaseClusterStatus status = 3;
}

// HdinsightHbaseClusterList is a list of HdinsightHbaseClusters
message HdinsightHbaseClusterList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of HdinsightHbaseCluster CRD objects
  repeated HdinsightHbaseCluster items = 2;
}

message HdinsightHbaseClusterSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional k8s.io.api.core.v1.LocalObjectReference secretRef = 3;

  optional string clusterVersion = 4;

  // +kubebuilder:validation:MaxItems=1
  repeated HdinsightHbaseClusterSpecComponentVersion componentVersion = 5;

  // +kubebuilder:validation:MaxItems=1
  repeated HdinsightHbaseClusterSpecGateway gateway = 6;

  // +optional
  optional string httpsEndpoint = 7;

  optional string location = 8;

  optional string name = 9;

  optional string resourceGroupName = 10;

  // +kubebuilder:validation:MaxItems=1
  repeated HdinsightHbaseClusterSpecRoles roles = 11;

  // +optional
  optional string sshEndpoint = 12;

  repeated HdinsightHbaseClusterSpecStorageAccount storageAccount = 13;

  // +optional
  map<string, string> tags = 14;

  optional string tier = 15;
}

message HdinsightHbaseClusterSpecComponentVersion {
  optional string hbase = 1;
}

message HdinsightHbaseClusterSpecGateway {
  optional bool enabled = 1;

  optional string username = 2;
}

message HdinsightHbaseClusterSpecRoles {
  // +kubebuilder:validation:MaxItems=1
  repeated HdinsightHbaseClusterSpecRolesHeadNode headNode = 1;

  // +kubebuilder:validation:MaxItems=1
  repeated HdinsightHbaseClusterSpecRolesWorkerNode workerNode = 2;

  // +kubebuilder:validation:MaxItems=1
  repeated HdinsightHbaseClusterSpecRolesZookeeperNode zookeeperNode = 3;
}

message HdinsightHbaseClusterSpecRolesHeadNode {
  // +optional
  repeated string sshKeys = 1;

  // +optional
  optional string subnetID = 2;

  optional string username = 3;

  // +optional
  optional string virtualNetworkID = 4;

  optional string vmSize = 5;
}

message HdinsightHbaseClusterSpecRolesWorkerNode {
  // +optional
  optional int64 minInstanceCount = 1;

  // +optional
  repeated string sshKeys = 2;

  // +optional
  optional string subnetID = 3;

  optional int64 targetInstanceCount = 4;

  optional string username = 5;

  // +optional
  optional string virtualNetworkID = 6;

  optional string vmSize = 7;
}

message HdinsightHbaseClusterSpecRolesZookeeperNode {
  // +optional
  repeated string sshKeys = 1;

  // +optional
  optional string subnetID = 2;

  optional string username = 3;

  // +optional
  optional string virtualNetworkID = 4;

  optional string vmSize = 5;
}

message HdinsightHbaseClusterSpecStorageAccount {
  optional bool isDefault = 1;

  optional string storageContainerID = 2;
}

message HdinsightHbaseClusterStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional HdinsightHbaseClusterSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message HdinsightInteractiveQueryCluster {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional HdinsightInteractiveQueryClusterSpec spec = 2;

  optional HdinsightInteractiveQueryClusterStatus status = 3;
}

// HdinsightInteractiveQueryClusterList is a list of HdinsightInteractiveQueryClusters
message HdinsightInteractiveQueryClusterList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of HdinsightInteractiveQueryCluster CRD objects
  repeated HdinsightInteractiveQueryCluster items = 2;
}

message HdinsightInteractiveQueryClusterSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional k8s.io.api.core.v1.LocalObjectReference secretRef = 3;

  optional string clusterVersion = 4;

  // +kubebuilder:validation:MaxItems=1
  repeated HdinsightInteractiveQueryClusterSpecComponentVersion componentVersion = 5;

  // +kubebuilder:validation:MaxItems=1
  repeated HdinsightInteractiveQueryClusterSpecGateway gateway = 6;

  // +optional
  optional string httpsEndpoint = 7;

  optional string location = 8;

  optional string name = 9;

  optional string resourceGroupName = 10;

  // +kubebuilder:validation:MaxItems=1
  repeated HdinsightInteractiveQueryClusterSpecRoles roles = 11;

  // +optional
  optional string sshEndpoint = 12;

  repeated HdinsightInteractiveQueryClusterSpecStorageAccount storageAccount = 13;

  // +optional
  map<string, string> tags = 14;

  optional string tier = 15;
}

message HdinsightInteractiveQueryClusterSpecComponentVersion {
  optional string interactiveHive = 1;
}

message HdinsightInteractiveQueryClusterSpecGateway {
  optional bool enabled = 1;

  optional string username = 2;
}

message HdinsightInteractiveQueryClusterSpecRoles {
  // +kubebuilder:validation:MaxItems=1
  repeated HdinsightInteractiveQueryClusterSpecRolesHeadNode headNode = 1;

  // +kubebuilder:validation:MaxItems=1
  repeated HdinsightInteractiveQueryClusterSpecRolesWorkerNode workerNode = 2;

  // +kubebuilder:validation:MaxItems=1
  repeated HdinsightInteractiveQueryClusterSpecRolesZookeeperNode zookeeperNode = 3;
}

message HdinsightInteractiveQueryClusterSpecRolesHeadNode {
  // +optional
  repeated string sshKeys = 1;

  // +optional
  optional string subnetID = 2;

  optional string username = 3;

  // +optional
  optional string virtualNetworkID = 4;

  optional string vmSize = 5;
}

message HdinsightInteractiveQueryClusterSpecRolesWorkerNode {
  // +optional
  optional int64 minInstanceCount = 1;

  // +optional
  repeated string sshKeys = 2;

  // +optional
  optional string subnetID = 3;

  optional int64 targetInstanceCount = 4;

  optional string username = 5;

  // +optional
  optional string virtualNetworkID = 6;

  optional string vmSize = 7;
}

message HdinsightInteractiveQueryClusterSpecRolesZookeeperNode {
  // +optional
  repeated string sshKeys = 1;

  // +optional
  optional string subnetID = 2;

  optional string username = 3;

  // +optional
  optional string virtualNetworkID = 4;

  optional string vmSize = 5;
}

message HdinsightInteractiveQueryClusterSpecStorageAccount {
  optional bool isDefault = 1;

  optional string storageContainerID = 2;
}

message HdinsightInteractiveQueryClusterStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional HdinsightInteractiveQueryClusterSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message HdinsightKafkaCluster {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional HdinsightKafkaClusterSpec spec = 2;

  optional HdinsightKafkaClusterStatus status = 3;
}

// HdinsightKafkaClusterList is a list of HdinsightKafkaClusters
message HdinsightKafkaClusterList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of HdinsightKafkaCluster CRD objects
  repeated HdinsightKafkaCluster items = 2;
}

message HdinsightKafkaClusterSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional k8s.io.api.core.v1.LocalObjectReference secretRef = 3;

  optional string clusterVersion = 4;

  // +kubebuilder:validation:MaxItems=1
  repeated HdinsightKafkaClusterSpecComponentVersion componentVersion = 5;

  // +kubebuilder:validation:MaxItems=1
  repeated HdinsightKafkaClusterSpecGateway gateway = 6;

  // +optional
  optional string httpsEndpoint = 7;

  optional string location = 8;

  optional string name = 9;

  optional string resourceGroupName = 10;

  // +kubebuilder:validation:MaxItems=1
  repeated HdinsightKafkaClusterSpecRoles roles = 11;

  // +optional
  optional string sshEndpoint = 12;

  repeated HdinsightKafkaClusterSpecStorageAccount storageAccount = 13;

  // +optional
  map<string, string> tags = 14;

  optional string tier = 15;
}

message HdinsightKafkaClusterSpecComponentVersion {
  optional string kafka = 1;
}

message HdinsightKafkaClusterSpecGateway {
  optional bool enabled = 1;

  optional string username = 2;
}

message HdinsightKafkaClusterSpecRoles {
  // +kubebuilder:validation:MaxItems=1
  repeated HdinsightKafkaClusterSpecRolesHeadNode headNode = 1;

  // +kubebuilder:validation:MaxItems=1
  repeated HdinsightKafkaClusterSpecRolesWorkerNode workerNode = 2;

  // +kubebuilder:validation:MaxItems=1
  repeated HdinsightKafkaClusterSpecRolesZookeeperNode zookeeperNode = 3;
}

message HdinsightKafkaClusterSpecRolesHeadNode {
  // +optional
  repeated string sshKeys = 1;

  // +optional
  optional string subnetID = 2;

  optional string username = 3;

  // +optional
  optional string virtualNetworkID = 4;

  optional string vmSize = 5;
}

message HdinsightKafkaClusterSpecRolesWorkerNode {
  // +optional
  optional int64 minInstanceCount = 1;

  optional int64 numberOfDisksPerNode = 2;

  // +optional
  repeated string sshKeys = 3;

  // +optional
  optional string subnetID = 4;

  optional int64 targetInstanceCount = 5;

  optional string username = 6;

  // +optional
  optional string virtualNetworkID = 7;

  optional string vmSize = 8;
}

message HdinsightKafkaClusterSpecRolesZookeeperNode {
  // +optional
  repeated string sshKeys = 1;

  // +optional
  optional string subnetID = 2;

  optional string username = 3;

  // +optional
  optional string virtualNetworkID = 4;

  optional string vmSize = 5;
}

message HdinsightKafkaClusterSpecStorageAccount {
  optional bool isDefault = 1;

  optional string storageContainerID = 2;
}

message HdinsightKafkaClusterStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional HdinsightKafkaClusterSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message HdinsightMlServicesCluster {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional HdinsightMlServicesClusterSpec spec = 2;

  optional HdinsightMlServicesClusterStatus status = 3;
}

// HdinsightMlServicesClusterList is a list of HdinsightMlServicesClusters
message HdinsightMlServicesClusterList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of HdinsightMlServicesCluster CRD objects
  repeated HdinsightMlServicesCluster items = 2;
}

message HdinsightMlServicesClusterSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional k8s.io.api.core.v1.LocalObjectReference secretRef = 3;

  optional string clusterVersion = 4;

  // +optional
  optional string edgeSSHEndpoint = 5;

  // +kubebuilder:validation:MaxItems=1
  repeated HdinsightMlServicesClusterSpecGateway gateway = 6;

  // +optional
  optional string httpsEndpoint = 7;

  optional string location = 8;

  optional string name = 9;

  optional string resourceGroupName = 10;

  // +kubebuilder:validation:MaxItems=1
  repeated HdinsightMlServicesClusterSpecRoles roles = 11;

  optional bool rstudio = 12;

  // +optional
  optional string sshEndpoint = 13;

  repeated HdinsightMlServicesClusterSpecStorageAccount storageAccount = 14;

  // +optional
  map<string, string> tags = 15;

  optional string tier = 16;
}

message HdinsightMlServicesClusterSpecGateway {
  optional bool enabled = 1;

  optional string username = 2;
}

message HdinsightMlServicesClusterSpecRoles {
  // +kubebuilder:validation:MaxItems=1
  repeated HdinsightMlServicesClusterSpecRolesEdgeNode edgeNode = 1;

  // +kubebuilder:validation:MaxItems=1
  repeated HdinsightMlServicesClusterSpecRolesHeadNode headNode = 2;

  // +kubebuilder:validation:MaxItems=1
  repeated HdinsightMlServicesClusterSpecRolesWorkerNode workerNode = 3;

  // +kubebuilder:validation:MaxItems=1
  repeated HdinsightMlServicesClusterSpecRolesZookeeperNode zookeeperNode = 4;
}

message HdinsightMlServicesClusterSpecRolesEdgeNode {
  // +optional
  repeated string sshKeys = 1;

  // +optional
  optional string subnetID = 2;

  optional string username = 3;

  // +optional
  optional string virtualNetworkID = 4;

  optional string vmSize = 5;
}

message HdinsightMlServicesClusterSpecRolesHeadNode {
  // +optional
  repeated string sshKeys = 1;

  // +optional
  optional string subnetID = 2;

  optional string username = 3;

  // +optional
  optional string virtualNetworkID = 4;

  optional string vmSize = 5;
}

message HdinsightMlServicesClusterSpecRolesWorkerNode {
  // +optional
  optional int64 minInstanceCount = 1;

  // +optional
  repeated string sshKeys = 2;

  // +optional
  optional string subnetID = 3;

  optional int64 targetInstanceCount = 4;

  optional string username = 5;

  // +optional
  optional string virtualNetworkID = 6;

  optional string vmSize = 7;
}

message HdinsightMlServicesClusterSpecRolesZookeeperNode {
  // +optional
  repeated string sshKeys = 1;

  // +optional
  optional string subnetID = 2;

  optional string username = 3;

  // +optional
  optional string virtualNetworkID = 4;

  optional string vmSize = 5;
}

message HdinsightMlServicesClusterSpecStorageAccount {
  optional bool isDefault = 1;

  optional string storageContainerID = 2;
}

message HdinsightMlServicesClusterStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional HdinsightMlServicesClusterSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message HdinsightRserverCluster {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional HdinsightRserverClusterSpec spec = 2;

  optional HdinsightRserverClusterStatus status = 3;
}

// HdinsightRserverClusterList is a list of HdinsightRserverClusters
message HdinsightRserverClusterList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of HdinsightRserverCluster CRD objects
  repeated HdinsightRserverCluster items = 2;
}

message HdinsightRserverClusterSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional k8s.io.api.core.v1.LocalObjectReference secretRef = 3;

  optional string clusterVersion = 4;

  // +optional
  optional string edgeSSHEndpoint = 5;

  // +kubebuilder:validation:MaxItems=1
  repeated HdinsightRserverClusterSpecGateway gateway = 6;

  // +optional
  optional string httpsEndpoint = 7;

  optional string location = 8;

  optional string name = 9;

  optional string resourceGroupName = 10;

  // +kubebuilder:validation:MaxItems=1
  repeated HdinsightRserverClusterSpecRoles roles = 11;

  optional bool rstudio = 12;

  // +optional
  optional string sshEndpoint = 13;

  repeated HdinsightRserverClusterSpecStorageAccount storageAccount = 14;

  // +optional
  map<string, string> tags = 15;

  optional string tier = 16;
}

message HdinsightRserverClusterSpecGateway {
  optional bool enabled = 1;

  optional string username = 2;
}

message HdinsightRserverClusterSpecRoles {
  // +kubebuilder:validation:MaxItems=1
  repeated HdinsightRserverClusterSpecRolesEdgeNode edgeNode = 1;

  // +kubebuilder:validation:MaxItems=1
  repeated HdinsightRserverClusterSpecRolesHeadNode headNode = 2;

  // +kubebuilder:validation:MaxItems=1
  repeated HdinsightRserverClusterSpecRolesWorkerNode workerNode = 3;

  // +kubebuilder:validation:MaxItems=1
  repeated HdinsightRserverClusterSpecRolesZookeeperNode zookeeperNode = 4;
}

message HdinsightRserverClusterSpecRolesEdgeNode {
  // +optional
  repeated string sshKeys = 1;

  // +optional
  optional string subnetID = 2;

  optional string username = 3;

  // +optional
  optional string virtualNetworkID = 4;

  optional string vmSize = 5;
}

message HdinsightRserverClusterSpecRolesHeadNode {
  // +optional
  repeated string sshKeys = 1;

  // +optional
  optional string subnetID = 2;

  optional string username = 3;

  // +optional
  optional string virtualNetworkID = 4;

  optional string vmSize = 5;
}

message HdinsightRserverClusterSpecRolesWorkerNode {
  // +optional
  optional int64 minInstanceCount = 1;

  // +optional
  repeated string sshKeys = 2;

  // +optional
  optional string subnetID = 3;

  optional int64 targetInstanceCount = 4;

  optional string username = 5;

  // +optional
  optional string virtualNetworkID = 6;

  optional string vmSize = 7;
}

message HdinsightRserverClusterSpecRolesZookeeperNode {
  // +optional
  repeated string sshKeys = 1;

  // +optional
  optional string subnetID = 2;

  optional string username = 3;

  // +optional
  optional string virtualNetworkID = 4;

  optional string vmSize = 5;
}

message HdinsightRserverClusterSpecStorageAccount {
  optional bool isDefault = 1;

  optional string storageContainerID = 2;
}

message HdinsightRserverClusterStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional HdinsightRserverClusterSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message HdinsightSparkCluster {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional HdinsightSparkClusterSpec spec = 2;

  optional HdinsightSparkClusterStatus status = 3;
}

// HdinsightSparkClusterList is a list of HdinsightSparkClusters
message HdinsightSparkClusterList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of HdinsightSparkCluster CRD objects
  repeated HdinsightSparkCluster items = 2;
}

message HdinsightSparkClusterSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional k8s.io.api.core.v1.LocalObjectReference secretRef = 3;

  optional string clusterVersion = 4;

  // +kubebuilder:validation:MaxItems=1
  repeated HdinsightSparkClusterSpecComponentVersion componentVersion = 5;

  // +kubebuilder:validation:MaxItems=1
  repeated HdinsightSparkClusterSpecGateway gateway = 6;

  // +optional
  optional string httpsEndpoint = 7;

  optional string location = 8;

  optional string name = 9;

  optional string resourceGroupName = 10;

  // +kubebuilder:validation:MaxItems=1
  repeated HdinsightSparkClusterSpecRoles roles = 11;

  // +optional
  optional string sshEndpoint = 12;

  repeated HdinsightSparkClusterSpecStorageAccount storageAccount = 13;

  // +optional
  map<string, string> tags = 14;

  optional string tier = 15;
}

message HdinsightSparkClusterSpecComponentVersion {
  optional string spark = 1;
}

message HdinsightSparkClusterSpecGateway {
  optional bool enabled = 1;

  optional string username = 2;
}

message HdinsightSparkClusterSpecRoles {
  // +kubebuilder:validation:MaxItems=1
  repeated HdinsightSparkClusterSpecRolesHeadNode headNode = 1;

  // +kubebuilder:validation:MaxItems=1
  repeated HdinsightSparkClusterSpecRolesWorkerNode workerNode = 2;

  // +kubebuilder:validation:MaxItems=1
  repeated HdinsightSparkClusterSpecRolesZookeeperNode zookeeperNode = 3;
}

message HdinsightSparkClusterSpecRolesHeadNode {
  // +optional
  repeated string sshKeys = 1;

  // +optional
  optional string subnetID = 2;

  optional string username = 3;

  // +optional
  optional string virtualNetworkID = 4;

  optional string vmSize = 5;
}

message HdinsightSparkClusterSpecRolesWorkerNode {
  // +optional
  optional int64 minInstanceCount = 1;

  // +optional
  repeated string sshKeys = 2;

  // +optional
  optional string subnetID = 3;

  optional int64 targetInstanceCount = 4;

  optional string username = 5;

  // +optional
  optional string virtualNetworkID = 6;

  optional string vmSize = 7;
}

message HdinsightSparkClusterSpecRolesZookeeperNode {
  // +optional
  repeated string sshKeys = 1;

  // +optional
  optional string subnetID = 2;

  optional string username = 3;

  // +optional
  optional string virtualNetworkID = 4;

  optional string vmSize = 5;
}

message HdinsightSparkClusterSpecStorageAccount {
  optional bool isDefault = 1;

  optional string storageContainerID = 2;
}

message HdinsightSparkClusterStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional HdinsightSparkClusterSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message HdinsightStormCluster {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional HdinsightStormClusterSpec spec = 2;

  optional HdinsightStormClusterStatus status = 3;
}

// HdinsightStormClusterList is a list of HdinsightStormClusters
message HdinsightStormClusterList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of HdinsightStormCluster CRD objects
  repeated HdinsightStormCluster items = 2;
}

message HdinsightStormClusterSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional k8s.io.api.core.v1.LocalObjectReference secretRef = 3;

  optional string clusterVersion = 4;

  // +kubebuilder:validation:MaxItems=1
  repeated HdinsightStormClusterSpecComponentVersion componentVersion = 5;

  // +kubebuilder:validation:MaxItems=1
  repeated HdinsightStormClusterSpecGateway gateway = 6;

  // +optional
  optional string httpsEndpoint = 7;

  optional string location = 8;

  optional string name = 9;

  optional string resourceGroupName = 10;

  // +kubebuilder:validation:MaxItems=1
  repeated HdinsightStormClusterSpecRoles roles = 11;

  // +optional
  optional string sshEndpoint = 12;

  repeated HdinsightStormClusterSpecStorageAccount storageAccount = 13;

  // +optional
  map<string, string> tags = 14;

  optional string tier = 15;
}

message HdinsightStormClusterSpecComponentVersion {
  optional string storm = 1;
}

message HdinsightStormClusterSpecGateway {
  optional bool enabled = 1;

  optional string username = 2;
}

message HdinsightStormClusterSpecRoles {
  // +kubebuilder:validation:MaxItems=1
  repeated HdinsightStormClusterSpecRolesHeadNode headNode = 1;

  // +kubebuilder:validation:MaxItems=1
  repeated HdinsightStormClusterSpecRolesWorkerNode workerNode = 2;

  // +kubebuilder:validation:MaxItems=1
  repeated HdinsightStormClusterSpecRolesZookeeperNode zookeeperNode = 3;
}

message HdinsightStormClusterSpecRolesHeadNode {
  // +optional
  repeated string sshKeys = 1;

  // +optional
  optional string subnetID = 2;

  optional string username = 3;

  // +optional
  optional string virtualNetworkID = 4;

  optional string vmSize = 5;
}

message HdinsightStormClusterSpecRolesWorkerNode {
  // +optional
  optional int64 minInstanceCount = 1;

  // +optional
  repeated string sshKeys = 2;

  // +optional
  optional string subnetID = 3;

  optional int64 targetInstanceCount = 4;

  optional string username = 5;

  // +optional
  optional string virtualNetworkID = 6;

  optional string vmSize = 7;
}

message HdinsightStormClusterSpecRolesZookeeperNode {
  // +optional
  repeated string sshKeys = 1;

  // +optional
  optional string subnetID = 2;

  optional string username = 3;

  // +optional
  optional string virtualNetworkID = 4;

  optional string vmSize = 5;
}

message HdinsightStormClusterSpecStorageAccount {
  optional bool isDefault = 1;

  optional string storageContainerID = 2;
}

message HdinsightStormClusterStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional HdinsightStormClusterSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message Image {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional ImageSpec spec = 2;

  optional ImageStatus status = 3;
}

// ImageList is a list of Images
message ImageList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of Image CRD objects
  repeated Image items = 2;
}

message ImageSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  repeated ImageSpecDataDisk dataDisk = 3;

  optional string location = 4;

  optional string name = 5;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated ImageSpecOsDisk osDisk = 6;

  optional string resourceGroupName = 7;

  // +optional
  optional string sourceVirtualMachineID = 8;

  // +optional
  map<string, string> tags = 9;

  // +optional
  optional bool zoneResilient = 10;
}

message ImageSpecDataDisk {
  // +optional
  optional string blobURI = 1;

  // +optional
  optional string caching = 2;

  // +optional
  optional int64 lun = 3;

  // +optional
  optional string managedDiskID = 4;

  // +optional
  optional int64 sizeGb = 5;
}

message ImageSpecOsDisk {
  // +optional
  optional string blobURI = 1;

  // +optional
  optional string caching = 2;

  // +optional
  optional string managedDiskID = 3;

  // +optional
  optional string osState = 4;

  // +optional
  optional string osType = 5;

  // +optional
  optional int64 sizeGb = 6;
}

message ImageStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional ImageSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message IotDps {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional IotDpsSpec spec = 2;

  optional IotDpsStatus status = 3;
}

message IotDpsCertificate {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional IotDpsCertificateSpec spec = 2;

  optional IotDpsCertificateStatus status = 3;
}

// IotDpsCertificateList is a list of IotDpsCertificates
message IotDpsCertificateList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of IotDpsCertificate CRD objects
  repeated IotDpsCertificate items = 2;
}

message IotDpsCertificateSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional k8s.io.api.core.v1.LocalObjectReference secretRef = 3;

  optional string iotDpsName = 4;

  optional string name = 5;

  optional string resourceGroupName = 6;
}

message IotDpsCertificateStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional IotDpsCertificateSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

// IotDpsList is a list of IotDpss
message IotDpsList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of IotDps CRD objects
  repeated IotDps items = 2;
}

message IotDpsSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string location = 3;

  optional string name = 4;

  optional string resourceGroupName = 5;

  // +kubebuilder:validation:MaxItems=1
  repeated IotDpsSpecSku sku = 6;

  // +optional
  map<string, string> tags = 7;
}

message IotDpsSpecSku {
  optional int64 capacity = 1;

  optional string name = 2;

  optional string tier = 3;
}

message IotDpsStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional IotDpsSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message Iothub {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional IothubSpec spec = 2;

  optional IothubStatus status = 3;
}

message IothubConsumerGroup {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional IothubConsumerGroupSpec spec = 2;

  optional IothubConsumerGroupStatus status = 3;
}

// IothubConsumerGroupList is a list of IothubConsumerGroups
message IothubConsumerGroupList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of IothubConsumerGroup CRD objects
  repeated IothubConsumerGroup items = 2;
}

message IothubConsumerGroupSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string eventhubEndpointName = 3;

  optional string iothubName = 4;

  optional string name = 5;

  optional string resourceGroupName = 6;
}

message IothubConsumerGroupStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional IothubConsumerGroupSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

// IothubList is a list of Iothubs
message IothubList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of Iothub CRD objects
  repeated Iothub items = 2;
}

message IothubSharedAccessPolicy {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional IothubSharedAccessPolicySpec spec = 2;

  optional IothubSharedAccessPolicyStatus status = 3;
}

// IothubSharedAccessPolicyList is a list of IothubSharedAccessPolicys
message IothubSharedAccessPolicyList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of IothubSharedAccessPolicy CRD objects
  repeated IothubSharedAccessPolicy items = 2;
}

message IothubSharedAccessPolicySpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional k8s.io.api.core.v1.LocalObjectReference secretRef = 3;

  // +optional
  optional bool deviceConnect = 4;

  optional string iothubName = 5;

  optional string name = 6;

  // +optional
  optional bool registryRead = 7;

  // +optional
  optional bool registryWrite = 8;

  optional string resourceGroupName = 9;

  // +optional
  optional bool serviceConnect = 10;
}

message IothubSharedAccessPolicyStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional IothubSharedAccessPolicySpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message IothubSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional k8s.io.api.core.v1.LocalObjectReference secretRef = 3;

  // +optional
  repeated IothubSpecEndpoint endpoint = 4;

  // +optional
  optional string eventHubEventsEndpoint = 5;

  // +optional
  optional string eventHubEventsPath = 6;

  // +optional
  optional string eventHubOperationsEndpoint = 7;

  // +optional
  optional string eventHubOperationsPath = 8;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated IothubSpecFallbackRoute fallbackRoute = 9;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated IothubSpecFileUpload fileUpload = 10;

  // +optional
  optional string hostname = 11;

  // +optional
  repeated IothubSpecIpFilterRule ipFilterRule = 12;

  optional string location = 13;

  optional string name = 14;

  optional string resourceGroupName = 15;

  // +optional
  repeated IothubSpecRoute route = 16;

  // +optional
  repeated IothubSpecSharedAccessPolicy sharedAccessPolicy = 17;

  // +kubebuilder:validation:MaxItems=1
  repeated IothubSpecSku sku = 18;

  // +optional
  map<string, string> tags = 19;

  // +optional
  optional string type = 20;
}

message IothubSpecEndpoint {
  // +optional
  optional int64 batchFrequencyInSeconds = 1;

  // +optional
  optional string containerName = 2;

  // +optional
  optional string encoding = 3;

  // +optional
  optional string fileNameFormat = 4;

  // +optional
  optional int64 maxChunkSizeInBytes = 5;

  optional string name = 6;

  optional string type = 7;
}

message IothubSpecFallbackRoute {
  // +optional
  optional string condition = 1;

  // +optional
  optional bool enabled = 2;

  // +optional
  repeated string endpointNames = 3;

  // +optional
  optional string source = 4;
}

message IothubSpecFileUpload {
  optional string containerName = 1;

  // +optional
  optional string defaultTtl = 2;

  // +optional
  optional string lockDuration = 3;

  // +optional
  optional int64 maxDeliveryCount = 4;

  // +optional
  optional bool notifications = 5;

  // +optional
  optional string sasTtl = 6;
}

message IothubSpecIpFilterRule {
  optional string action = 1;

  optional string ipMask = 2;

  optional string name = 3;
}

message IothubSpecRoute {
  // +optional
  optional string condition = 1;

  optional bool enabled = 2;

  repeated string endpointNames = 3;

  optional string name = 4;

  optional string source = 5;
}

message IothubSpecSharedAccessPolicy {
  // +optional
  optional string keyName = 1;

  // +optional
  optional string permissions = 2;
}

message IothubSpecSku {
  optional int64 capacity = 1;

  optional string name = 2;

  optional string tier = 3;
}

message IothubStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional IothubSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message KeyVault {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional KeyVaultSpec spec = 2;

  optional KeyVaultStatus status = 3;
}

message KeyVaultAccessPolicy {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional KeyVaultAccessPolicySpec spec = 2;

  optional KeyVaultAccessPolicyStatus status = 3;
}

// KeyVaultAccessPolicyList is a list of KeyVaultAccessPolicys
message KeyVaultAccessPolicyList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of KeyVaultAccessPolicy CRD objects
  repeated KeyVaultAccessPolicy items = 2;
}

message KeyVaultAccessPolicySpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  optional string applicationID = 3;

  // +optional
  repeated string certificatePermissions = 4;

  // +optional
  repeated string keyPermissions = 5;

  // +optional
  optional string keyVaultID = 6;

  optional string objectID = 7;

  // +optional
  // Deprecated
  optional string resourceGroupName = 8;

  // +optional
  repeated string secretPermissions = 9;

  // +optional
  repeated string storagePermissions = 10;

  optional string tenantID = 11;

  // +optional
  // Deprecated
  optional string vaultName = 12;
}

message KeyVaultAccessPolicyStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional KeyVaultAccessPolicySpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message KeyVaultCertificate {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional KeyVaultCertificateSpec spec = 2;

  optional KeyVaultCertificateStatus status = 3;
}

// KeyVaultCertificateList is a list of KeyVaultCertificates
message KeyVaultCertificateList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of KeyVaultCertificate CRD objects
  repeated KeyVaultCertificate items = 2;
}

message KeyVaultCertificateSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional k8s.io.api.core.v1.LocalObjectReference secretRef = 3;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated KeyVaultCertificateSpecCertificate certificate = 4;

  // +optional
  optional string certificateData = 5;

  // +kubebuilder:validation:MaxItems=1
  repeated KeyVaultCertificateSpecCertificatePolicy certificatePolicy = 6;

  // +optional
  optional string keyVaultID = 7;

  optional string name = 8;

  // +optional
  optional string secretID = 9;

  // +optional
  map<string, string> tags = 10;

  // +optional
  optional string thumbprint = 11;

  // +optional
  // Deprecated
  optional string vaultURI = 12;

  // +optional
  optional string version = 13;
}

message KeyVaultCertificateSpecCertificate {
}

message KeyVaultCertificateSpecCertificatePolicy {
  // +kubebuilder:validation:MaxItems=1
  repeated KeyVaultCertificateSpecCertificatePolicyIssuerParameters issuerParameters = 1;

  // +kubebuilder:validation:MaxItems=1
  repeated KeyVaultCertificateSpecCertificatePolicyKeyProperties keyProperties = 2;

  // +optional
  repeated KeyVaultCertificateSpecCertificatePolicyLifetimeAction lifetimeAction = 3;

  // +kubebuilder:validation:MaxItems=1
  repeated KeyVaultCertificateSpecCertificatePolicySecretProperties secretProperties = 4;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated KeyVaultCertificateSpecCertificatePolicyX509CertificateProperties x509CertificateProperties = 5;
}

message KeyVaultCertificateSpecCertificatePolicyIssuerParameters {
  optional string name = 1;
}

message KeyVaultCertificateSpecCertificatePolicyKeyProperties {
  optional bool exportable = 1;

  optional int64 keySize = 2;

  optional string keyType = 3;

  optional bool reuseKey = 4;
}

message KeyVaultCertificateSpecCertificatePolicyLifetimeAction {
  // +kubebuilder:validation:MaxItems=1
  repeated KeyVaultCertificateSpecCertificatePolicyLifetimeActionAction action = 1;

  // +kubebuilder:validation:MaxItems=1
  repeated KeyVaultCertificateSpecCertificatePolicyLifetimeActionTrigger trigger = 2;
}

message KeyVaultCertificateSpecCertificatePolicyLifetimeActionAction {
  optional string actionType = 1;
}

message KeyVaultCertificateSpecCertificatePolicyLifetimeActionTrigger {
  // +optional
  optional int64 daysBeforeExpiry = 1;

  // +optional
  optional int64 lifetimePercentage = 2;
}

message KeyVaultCertificateSpecCertificatePolicySecretProperties {
  optional string contentType = 1;
}

message KeyVaultCertificateSpecCertificatePolicyX509CertificateProperties {
  // +optional
  repeated string extendedKeyUsage = 1;

  repeated string keyUsage = 2;

  optional string subject = 3;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated KeyVaultCertificateSpecCertificatePolicyX509CertificatePropertiesSubjectAlternativeNames subjectAlternativeNames = 4;

  optional int64 validityInMonths = 5;
}

message KeyVaultCertificateSpecCertificatePolicyX509CertificatePropertiesSubjectAlternativeNames {
  // +optional
  repeated string dnsNames = 1;

  // +optional
  repeated string emails = 2;

  // +optional
  repeated string upns = 3;
}

message KeyVaultCertificateStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional KeyVaultCertificateSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message KeyVaultKey {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional KeyVaultKeySpec spec = 2;

  optional KeyVaultKeyStatus status = 3;
}

// KeyVaultKeyList is a list of KeyVaultKeys
message KeyVaultKeyList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of KeyVaultKey CRD objects
  repeated KeyVaultKey items = 2;
}

message KeyVaultKeySpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  optional string curve = 3;

  // +optional
  optional string e = 4;

  repeated string keyOpts = 5;

  // +optional
  optional int64 keySize = 6;

  optional string keyType = 7;

  // +optional
  optional string keyVaultID = 8;

  // +optional
  optional string n = 9;

  optional string name = 10;

  // +optional
  map<string, string> tags = 11;

  // +optional
  // Deprecated
  optional string vaultURI = 12;

  // +optional
  optional string version = 13;

  // +optional
  optional string x = 14;

  // +optional
  optional string y = 15;
}

message KeyVaultKeyStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional KeyVaultKeySpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

// KeyVaultList is a list of KeyVaults
message KeyVaultList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of KeyVault CRD objects
  repeated KeyVault items = 2;
}

message KeyVaultSecret {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional KeyVaultSecretSpec spec = 2;

  optional KeyVaultSecretStatus status = 3;
}

// KeyVaultSecretList is a list of KeyVaultSecrets
message KeyVaultSecretList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of KeyVaultSecret CRD objects
  repeated KeyVaultSecret items = 2;
}

message KeyVaultSecretSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional k8s.io.api.core.v1.LocalObjectReference secretRef = 3;

  // +optional
  optional string contentType = 4;

  // +optional
  optional string keyVaultID = 5;

  optional string name = 6;

  // +optional
  map<string, string> tags = 7;

  // +optional
  // Deprecated
  optional string vaultURI = 8;

  // +optional
  optional string version = 9;
}

message KeyVaultSecretStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional KeyVaultSecretSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message KeyVaultSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  // +kubebuilder:validation:MaxItems=1024
  repeated KeyVaultSpecAccessPolicy accessPolicy = 3;

  // +optional
  optional bool enabledForDeployment = 4;

  // +optional
  optional bool enabledForDiskEncryption = 5;

  // +optional
  optional bool enabledForTemplateDeployment = 6;

  optional string location = 7;

  optional string name = 8;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated KeyVaultSpecNetworkAcls networkAcls = 9;

  optional string resourceGroupName = 10;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  // Deprecated
  repeated KeyVaultSpecSku sku = 11;

  // +optional
  optional string skuName = 12;

  // +optional
  map<string, string> tags = 13;

  optional string tenantID = 14;

  // +optional
  optional string vaultURI = 15;
}

message KeyVaultSpecAccessPolicy {
  // +optional
  optional string applicationID = 1;

  // +optional
  repeated string certificatePermissions = 2;

  // +optional
  repeated string keyPermissions = 3;

  optional string objectID = 4;

  // +optional
  repeated string secretPermissions = 5;

  // +optional
  repeated string storagePermissions = 6;

  optional string tenantID = 7;
}

message KeyVaultSpecNetworkAcls {
  optional string bypass = 1;

  optional string defaultAction = 2;

  // +optional
  repeated string ipRules = 3;

  // +optional
  repeated string virtualNetworkSubnetIDS = 4;
}

message KeyVaultSpecSku {
  // +optional
  optional string name = 1;
}

message KeyVaultStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional KeyVaultSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message KubernetesCluster {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional KubernetesClusterSpec spec = 2;

  optional KubernetesClusterStatus status = 3;
}

// KubernetesClusterList is a list of KubernetesClusters
message KubernetesClusterList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of KubernetesCluster CRD objects
  repeated KubernetesCluster items = 2;
}

message KubernetesClusterSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional k8s.io.api.core.v1.LocalObjectReference secretRef = 3;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated KubernetesClusterSpecAddonProfile addonProfile = 4;

  repeated KubernetesClusterSpecAgentPoolProfile agentPoolProfile = 5;

  // +optional
  repeated string apiServerAuthorizedIPRanges = 6;

  optional string dnsPrefix = 7;

  // +optional
  optional string fqdn = 8;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated KubernetesClusterSpecKubeAdminConfig kubeAdminConfig = 9;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated KubernetesClusterSpecKubeConfig kubeConfig = 10;

  // +optional
  optional string kubernetesVersion = 11;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated KubernetesClusterSpecLinuxProfile linuxProfile = 12;

  optional string location = 13;

  optional string name = 14;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated KubernetesClusterSpecNetworkProfile networkProfile = 15;

  // +optional
  optional string nodeResourceGroup = 16;

  optional string resourceGroupName = 17;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated KubernetesClusterSpecRoleBasedAccessControl roleBasedAccessControl = 18;

  // +kubebuilder:validation:MaxItems=1
  repeated KubernetesClusterSpecServicePrincipal servicePrincipal = 19;

  // +optional
  map<string, string> tags = 20;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated KubernetesClusterSpecWindowsProfile windowsProfile = 21;
}

message KubernetesClusterSpecAddonProfile {
  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated KubernetesClusterSpecAddonProfileAciConnectorLinux aciConnectorLinux = 1;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated KubernetesClusterSpecAddonProfileHttpApplicationRouting httpApplicationRouting = 2;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated KubernetesClusterSpecAddonProfileOmsAgent omsAgent = 3;
}

message KubernetesClusterSpecAddonProfileAciConnectorLinux {
  optional bool enabled = 1;

  optional string subnetName = 2;
}

message KubernetesClusterSpecAddonProfileHttpApplicationRouting {
  optional bool enabled = 1;

  // +optional
  optional string httpApplicationRoutingZoneName = 2;
}

message KubernetesClusterSpecAddonProfileOmsAgent {
  optional bool enabled = 1;

  optional string logAnalyticsWorkspaceID = 2;
}

message KubernetesClusterSpecAgentPoolProfile {
  // +optional
  repeated string availabilityZones = 1;

  // +optional
  optional int64 count = 2;

  // +optional
  // Deprecated
  optional string dnsPrefix = 3;

  // +optional
  optional bool enableAutoScaling = 4;

  // +optional
  // Deprecated
  optional string fqdn = 5;

  // +optional
  optional int64 maxCount = 6;

  // +optional
  optional int64 maxPods = 7;

  // +optional
  optional int64 minCount = 8;

  optional string name = 9;

  // +optional
  repeated string nodeTaints = 10;

  // +optional
  optional int64 osDiskSizeGb = 11;

  // +optional
  optional string osType = 12;

  // +optional
  optional string type = 13;

  optional string vmSize = 14;

  // +optional
  optional string vnetSubnetID = 15;
}

message KubernetesClusterSpecKubeAdminConfig {
  // +optional
  optional string clientCertificate = 1;

  // +optional
  optional string clusterCaCertificate = 2;

  // +optional
  optional string host = 3;

  // +optional
  optional string username = 4;
}

message KubernetesClusterSpecKubeConfig {
  // +optional
  optional string clientCertificate = 1;

  // +optional
  optional string clusterCaCertificate = 2;

  // +optional
  optional string host = 3;

  // +optional
  optional string username = 4;
}

message KubernetesClusterSpecLinuxProfile {
  optional string adminUsername = 1;

  // +kubebuilder:validation:MaxItems=1
  repeated KubernetesClusterSpecLinuxProfileSshKey sshKey = 2;
}

message KubernetesClusterSpecLinuxProfileSshKey {
  optional string keyData = 1;
}

message KubernetesClusterSpecNetworkProfile {
  // +optional
  optional string dnsServiceIP = 1;

  // +optional
  optional string dockerBridgeCIDR = 2;

  // +optional
  optional string loadBalancerSku = 3;

  optional string networkPlugin = 4;

  // +optional
  optional string networkPolicy = 5;

  // +optional
  optional string podCIDR = 6;

  // +optional
  optional string serviceCIDR = 7;
}

message KubernetesClusterSpecRoleBasedAccessControl {
  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated KubernetesClusterSpecRoleBasedAccessControlAzureActiveDirectory azureActiveDirectory = 1;

  optional bool enabled = 2;
}

message KubernetesClusterSpecRoleBasedAccessControlAzureActiveDirectory {
  optional string clientAppID = 1;

  optional string serverAppID = 2;

  // +optional
  optional string tenantID = 3;
}

message KubernetesClusterSpecServicePrincipal {
  optional string clientID = 1;
}

message KubernetesClusterSpecWindowsProfile {
  optional string adminUsername = 1;
}

message KubernetesClusterStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional KubernetesClusterSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message Lb {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional LbSpec spec = 2;

  optional LbStatus status = 3;
}

message LbBackendAddressPool {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional LbBackendAddressPoolSpec spec = 2;

  optional LbBackendAddressPoolStatus status = 3;
}

// LbBackendAddressPoolList is a list of LbBackendAddressPools
message LbBackendAddressPoolList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of LbBackendAddressPool CRD objects
  repeated LbBackendAddressPool items = 2;
}

message LbBackendAddressPoolSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  repeated string backendIPConfigurations = 3;

  // +optional
  repeated string loadBalancingRules = 4;

  optional string loadbalancerID = 5;

  // +optional
  // Deprecated
  optional string location = 6;

  optional string name = 7;

  optional string resourceGroupName = 8;
}

message LbBackendAddressPoolStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional LbBackendAddressPoolSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

// LbList is a list of Lbs
message LbList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of Lb CRD objects
  repeated Lb items = 2;
}

message LbNATPool {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional LbNATPoolSpec spec = 2;

  optional LbNATPoolStatus status = 3;
}

// LbNATPoolList is a list of LbNATPools
message LbNATPoolList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of LbNATPool CRD objects
  repeated LbNATPool items = 2;
}

message LbNATPoolSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional int64 backendPort = 3;

  // +optional
  optional string frontendIPConfigurationID = 4;

  optional string frontendIPConfigurationName = 5;

  optional int64 frontendPortEnd = 6;

  optional int64 frontendPortStart = 7;

  optional string loadbalancerID = 8;

  // +optional
  // Deprecated
  optional string location = 9;

  optional string name = 10;

  optional string protocol = 11;

  optional string resourceGroupName = 12;
}

message LbNATPoolStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional LbNATPoolSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message LbNATRule {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional LbNATRuleSpec spec = 2;

  optional LbNATRuleStatus status = 3;
}

// LbNATRuleList is a list of LbNATRules
message LbNATRuleList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of LbNATRule CRD objects
  repeated LbNATRule items = 2;
}

message LbNATRuleSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  optional string backendIPConfigurationID = 3;

  optional int64 backendPort = 4;

  // +optional
  optional bool enableFloatingIP = 5;

  // +optional
  optional string frontendIPConfigurationID = 6;

  optional string frontendIPConfigurationName = 7;

  optional int64 frontendPort = 8;

  optional string loadbalancerID = 9;

  // +optional
  // Deprecated
  optional string location = 10;

  optional string name = 11;

  optional string protocol = 12;

  optional string resourceGroupName = 13;
}

message LbNATRuleStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional LbNATRuleSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message LbOutboundRule {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional LbOutboundRuleSpec spec = 2;

  optional LbOutboundRuleStatus status = 3;
}

// LbOutboundRuleList is a list of LbOutboundRules
message LbOutboundRuleList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of LbOutboundRule CRD objects
  repeated LbOutboundRule items = 2;
}

message LbOutboundRuleSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  optional int64 allocatedOutboundPorts = 3;

  optional string backendAddressPoolID = 4;

  // +optional
  optional bool enableTcpReset = 5;

  // +optional
  // +kubebuilder:validation:MinItems=1
  repeated LbOutboundRuleSpecFrontendIPConfiguration frontendIPConfiguration = 6;

  // +optional
  optional int64 idleTimeoutInMinutes = 7;

  optional string loadbalancerID = 8;

  optional string name = 9;

  optional string protocol = 10;

  optional string resourceGroupName = 11;
}

message LbOutboundRuleSpecFrontendIPConfiguration {
  // +optional
  optional string ID = 1;

  optional string name = 2;
}

message LbOutboundRuleStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional LbOutboundRuleSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message LbProbe {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional LbProbeSpec spec = 2;

  optional LbProbeStatus status = 3;
}

// LbProbeList is a list of LbProbes
message LbProbeList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of LbProbe CRD objects
  repeated LbProbe items = 2;
}

message LbProbeSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  optional int64 intervalInSeconds = 3;

  // +optional
  repeated string loadBalancerRules = 4;

  optional string loadbalancerID = 5;

  // +optional
  // Deprecated
  optional string location = 6;

  optional string name = 7;

  // +optional
  optional int64 numberOfProbes = 8;

  optional int64 port = 9;

  // +optional
  optional string protocol = 10;

  // +optional
  optional string requestPath = 11;

  optional string resourceGroupName = 12;
}

message LbProbeStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional LbProbeSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message LbRule {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional LbRuleSpec spec = 2;

  optional LbRuleStatus status = 3;
}

// LbRuleList is a list of LbRules
message LbRuleList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of LbRule CRD objects
  repeated LbRule items = 2;
}

message LbRuleSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  optional string backendAddressPoolID = 3;

  optional int64 backendPort = 4;

  // +optional
  optional bool disableOutboundSnat = 5;

  // +optional
  optional bool enableFloatingIP = 6;

  // +optional
  optional string frontendIPConfigurationID = 7;

  optional string frontendIPConfigurationName = 8;

  optional int64 frontendPort = 9;

  // +optional
  optional int64 idleTimeoutInMinutes = 10;

  // +optional
  optional string loadDistribution = 11;

  optional string loadbalancerID = 12;

  // +optional
  // Deprecated
  optional string location = 13;

  optional string name = 14;

  // +optional
  optional string probeID = 15;

  optional string protocol = 16;

  optional string resourceGroupName = 17;
}

message LbRuleStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional LbRuleSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message LbSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  // +kubebuilder:validation:MinItems=1
  repeated LbSpecFrontendIPConfiguration frontendIPConfiguration = 3;

  optional string location = 4;

  optional string name = 5;

  // +optional
  optional string privateIPAddress = 6;

  // +optional
  repeated string privateIPAddresses = 7;

  optional string resourceGroupName = 8;

  // +optional
  optional string sku = 9;

  // +optional
  map<string, string> tags = 10;
}

message LbSpecFrontendIPConfiguration {
  // +optional
  repeated string inboundNATRules = 1;

  // +optional
  repeated string loadBalancerRules = 2;

  optional string name = 3;

  // +optional
  repeated string outboundRules = 4;

  // +optional
  optional string privateIPAddress = 5;

  // +optional
  optional string privateIPAddressAllocation = 6;

  // +optional
  optional string publicIPAddressID = 7;

  // +optional
  optional string publicIPPrefixID = 8;

  // +optional
  optional string subnetID = 9;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated string zones = 10;
}

message LbStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional LbSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message LocalNetworkGateway {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional LocalNetworkGatewaySpec spec = 2;

  optional LocalNetworkGatewayStatus status = 3;
}

// LocalNetworkGatewayList is a list of LocalNetworkGateways
message LocalNetworkGatewayList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of LocalNetworkGateway CRD objects
  repeated LocalNetworkGateway items = 2;
}

message LocalNetworkGatewaySpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  repeated string addressSpace = 3;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated LocalNetworkGatewaySpecBgpSettings bgpSettings = 4;

  optional string gatewayAddress = 5;

  optional string location = 6;

  optional string name = 7;

  optional string resourceGroupName = 8;

  // +optional
  map<string, string> tags = 9;
}

message LocalNetworkGatewaySpecBgpSettings {
  optional int64 asn = 1;

  optional string bgpPeeringAddress = 2;

  // +optional
  optional int64 peerWeight = 3;
}

message LocalNetworkGatewayStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional LocalNetworkGatewaySpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message LogAnalyticsLinkedService {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional LogAnalyticsLinkedServiceSpec spec = 2;

  optional LogAnalyticsLinkedServiceStatus status = 3;
}

// LogAnalyticsLinkedServiceList is a list of LogAnalyticsLinkedServices
message LogAnalyticsLinkedServiceList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of LogAnalyticsLinkedService CRD objects
  repeated LogAnalyticsLinkedService items = 2;
}

message LogAnalyticsLinkedServiceSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  optional string linkedServiceName = 3;

  // +optional
  repeated LogAnalyticsLinkedServiceSpecLinkedServiceProperties linkedServiceProperties = 4;

  // +optional
  optional string name = 5;

  optional string resourceGroupName = 6;

  // +optional
  optional string resourceID = 7;

  // +optional
  map<string, string> tags = 8;

  optional string workspaceName = 9;
}

message LogAnalyticsLinkedServiceSpecLinkedServiceProperties {
  optional string resourceID = 1;
}

message LogAnalyticsLinkedServiceStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional LogAnalyticsLinkedServiceSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message LogAnalyticsSolution {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional LogAnalyticsSolutionSpec spec = 2;

  optional LogAnalyticsSolutionStatus status = 3;
}

// LogAnalyticsSolutionList is a list of LogAnalyticsSolutions
message LogAnalyticsSolutionList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of LogAnalyticsSolution CRD objects
  repeated LogAnalyticsSolution items = 2;
}

message LogAnalyticsSolutionSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string location = 3;

  // +kubebuilder:validation:MaxItems=1
  repeated LogAnalyticsSolutionSpecPlan plan = 4;

  optional string resourceGroupName = 5;

  optional string solutionName = 6;

  optional string workspaceName = 7;

  optional string workspaceResourceID = 8;
}

message LogAnalyticsSolutionSpecPlan {
  // +optional
  optional string name = 1;

  optional string product = 2;

  // +optional
  optional string promotionCode = 3;

  optional string publisher = 4;
}

message LogAnalyticsSolutionStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional LogAnalyticsSolutionSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message LogAnalyticsWorkspace {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional LogAnalyticsWorkspaceSpec spec = 2;

  optional LogAnalyticsWorkspaceStatus status = 3;
}

message LogAnalyticsWorkspaceLinkedService {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional LogAnalyticsWorkspaceLinkedServiceSpec spec = 2;

  optional LogAnalyticsWorkspaceLinkedServiceStatus status = 3;
}

// LogAnalyticsWorkspaceLinkedServiceList is a list of LogAnalyticsWorkspaceLinkedServices
message LogAnalyticsWorkspaceLinkedServiceList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of LogAnalyticsWorkspaceLinkedService CRD objects
  repeated LogAnalyticsWorkspaceLinkedService items = 2;
}

message LogAnalyticsWorkspaceLinkedServiceSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  optional string linkedServiceName = 3;

  // +optional
  repeated LogAnalyticsWorkspaceLinkedServiceSpecLinkedServiceProperties linkedServiceProperties = 4;

  // +optional
  optional string name = 5;

  optional string resourceGroupName = 6;

  // +optional
  optional string resourceID = 7;

  // +optional
  map<string, string> tags = 8;

  optional string workspaceName = 9;
}

message LogAnalyticsWorkspaceLinkedServiceSpecLinkedServiceProperties {
  optional string resourceID = 1;
}

message LogAnalyticsWorkspaceLinkedServiceStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional LogAnalyticsWorkspaceLinkedServiceSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

// LogAnalyticsWorkspaceList is a list of LogAnalyticsWorkspaces
message LogAnalyticsWorkspaceList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of LogAnalyticsWorkspace CRD objects
  repeated LogAnalyticsWorkspace items = 2;
}

message LogAnalyticsWorkspaceSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional k8s.io.api.core.v1.LocalObjectReference secretRef = 3;

  optional string location = 4;

  optional string name = 5;

  // +optional
  optional string portalURL = 6;

  optional string resourceGroupName = 7;

  // +optional
  optional int64 retentionInDays = 8;

  optional string sku = 9;

  // +optional
  map<string, string> tags = 10;

  // +optional
  optional string workspaceID = 11;
}

message LogAnalyticsWorkspaceStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional LogAnalyticsWorkspaceSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message LogicAppActionCustom {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional LogicAppActionCustomSpec spec = 2;

  optional LogicAppActionCustomStatus status = 3;
}

// LogicAppActionCustomList is a list of LogicAppActionCustoms
message LogicAppActionCustomList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of LogicAppActionCustom CRD objects
  repeated LogicAppActionCustom items = 2;
}

message LogicAppActionCustomSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string body = 3;

  optional string logicAppID = 4;

  optional string name = 5;
}

message LogicAppActionCustomStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional LogicAppActionCustomSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message LogicAppActionHTTP {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional LogicAppActionHTTPSpec spec = 2;

  optional LogicAppActionHTTPStatus status = 3;
}

// LogicAppActionHTTPList is a list of LogicAppActionHTTPs
message LogicAppActionHTTPList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of LogicAppActionHTTP CRD objects
  repeated LogicAppActionHTTP items = 2;
}

message LogicAppActionHTTPSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  optional string body = 3;

  // +optional
  map<string, string> headers = 4;

  optional string logicAppID = 5;

  optional string method = 6;

  optional string name = 7;

  optional string uri = 8;
}

message LogicAppActionHTTPStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional LogicAppActionHTTPSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message LogicAppTriggerCustom {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional LogicAppTriggerCustomSpec spec = 2;

  optional LogicAppTriggerCustomStatus status = 3;
}

// LogicAppTriggerCustomList is a list of LogicAppTriggerCustoms
message LogicAppTriggerCustomList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of LogicAppTriggerCustom CRD objects
  repeated LogicAppTriggerCustom items = 2;
}

message LogicAppTriggerCustomSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string body = 3;

  optional string logicAppID = 4;

  optional string name = 5;
}

message LogicAppTriggerCustomStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional LogicAppTriggerCustomSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message LogicAppTriggerHTTPRequest {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional LogicAppTriggerHTTPRequestSpec spec = 2;

  optional LogicAppTriggerHTTPRequestStatus status = 3;
}

// LogicAppTriggerHTTPRequestList is a list of LogicAppTriggerHTTPRequests
message LogicAppTriggerHTTPRequestList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of LogicAppTriggerHTTPRequest CRD objects
  repeated LogicAppTriggerHTTPRequest items = 2;
}

message LogicAppTriggerHTTPRequestSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string logicAppID = 3;

  // +optional
  optional string method = 4;

  optional string name = 5;

  // +optional
  optional string relativePath = 6;

  optional string schema = 7;
}

message LogicAppTriggerHTTPRequestStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional LogicAppTriggerHTTPRequestSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message LogicAppTriggerRecurrence {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional LogicAppTriggerRecurrenceSpec spec = 2;

  optional LogicAppTriggerRecurrenceStatus status = 3;
}

// LogicAppTriggerRecurrenceList is a list of LogicAppTriggerRecurrences
message LogicAppTriggerRecurrenceList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of LogicAppTriggerRecurrence CRD objects
  repeated LogicAppTriggerRecurrence items = 2;
}

message LogicAppTriggerRecurrenceSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string frequency = 3;

  optional int64 interval = 4;

  optional string logicAppID = 5;

  optional string name = 6;
}

message LogicAppTriggerRecurrenceStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional LogicAppTriggerRecurrenceSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message LogicAppWorkflow {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional LogicAppWorkflowSpec spec = 2;

  optional LogicAppWorkflowStatus status = 3;
}

// LogicAppWorkflowList is a list of LogicAppWorkflows
message LogicAppWorkflowList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of LogicAppWorkflow CRD objects
  repeated LogicAppWorkflow items = 2;
}

message LogicAppWorkflowSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  optional string accessEndpoint = 3;

  optional string location = 4;

  optional string name = 5;

  // +optional
  map<string, string> parameters = 6;

  optional string resourceGroupName = 7;

  // +optional
  map<string, string> tags = 8;

  // +optional
  optional string workflowSchema = 9;

  // +optional
  optional string workflowVersion = 10;
}

message LogicAppWorkflowStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional LogicAppWorkflowSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message ManagedDisk {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional ManagedDiskSpec spec = 2;

  optional ManagedDiskStatus status = 3;
}

// ManagedDiskList is a list of ManagedDisks
message ManagedDiskList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of ManagedDisk CRD objects
  repeated ManagedDisk items = 2;
}

message ManagedDiskSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string createOption = 3;

  // +optional
  optional int64 diskSizeGb = 4;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated ManagedDiskSpecEncryptionSettings encryptionSettings = 5;

  // +optional
  optional string imageReferenceID = 6;

  optional string location = 7;

  optional string name = 8;

  // +optional
  optional string osType = 9;

  optional string resourceGroupName = 10;

  // +optional
  optional string sourceResourceID = 11;

  // +optional
  optional string sourceURI = 12;

  optional string storageAccountType = 13;

  // +optional
  map<string, string> tags = 14;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated string zones = 15;
}

message ManagedDiskSpecEncryptionSettings {
  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated ManagedDiskSpecEncryptionSettingsDiskEncryptionKey diskEncryptionKey = 1;

  optional bool enabled = 2;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated ManagedDiskSpecEncryptionSettingsKeyEncryptionKey keyEncryptionKey = 3;
}

message ManagedDiskSpecEncryptionSettingsDiskEncryptionKey {
  optional string secretURL = 1;

  optional string sourceVaultID = 2;
}

message ManagedDiskSpecEncryptionSettingsKeyEncryptionKey {
  optional string keyURL = 1;

  optional string sourceVaultID = 2;
}

message ManagedDiskStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional ManagedDiskSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message ManagementGroup {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional ManagementGroupSpec spec = 2;

  optional ManagementGroupStatus status = 3;
}

// ManagementGroupList is a list of ManagementGroups
message ManagementGroupList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of ManagementGroup CRD objects
  repeated ManagementGroup items = 2;
}

message ManagementGroupSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  optional string displayName = 3;

  // +optional
  optional string groupID = 4;

  // +optional
  optional string parentManagementGroupID = 5;

  // +optional
  repeated string subscriptionIDS = 6;
}

message ManagementGroupStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional ManagementGroupSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message ManagementLock {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional ManagementLockSpec spec = 2;

  optional ManagementLockStatus status = 3;
}

// ManagementLockList is a list of ManagementLocks
message ManagementLockList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of ManagementLock CRD objects
  repeated ManagementLock items = 2;
}

message ManagementLockSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string lockLevel = 3;

  optional string name = 4;

  // +optional
  optional string notes = 5;

  optional string scope = 6;
}

message ManagementLockStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional ManagementLockSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message MapsAccount {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional MapsAccountSpec spec = 2;

  optional MapsAccountStatus status = 3;
}

// MapsAccountList is a list of MapsAccounts
message MapsAccountList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of MapsAccount CRD objects
  repeated MapsAccount items = 2;
}

message MapsAccountSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional k8s.io.api.core.v1.LocalObjectReference secretRef = 3;

  optional string name = 4;

  optional string resourceGroupName = 5;

  optional string skuName = 6;

  // +optional
  map<string, string> tags = 7;

  // +optional
  optional string xMsClientID = 8;
}

message MapsAccountStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional MapsAccountSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message MariadbDatabase {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional MariadbDatabaseSpec spec = 2;

  optional MariadbDatabaseStatus status = 3;
}

// MariadbDatabaseList is a list of MariadbDatabases
message MariadbDatabaseList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of MariadbDatabase CRD objects
  repeated MariadbDatabase items = 2;
}

message MariadbDatabaseSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string charset = 3;

  optional string collation = 4;

  optional string name = 5;

  optional string resourceGroupName = 6;

  optional string serverName = 7;
}

message MariadbDatabaseStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional MariadbDatabaseSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message MariadbFirewallRule {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional MariadbFirewallRuleSpec spec = 2;

  optional MariadbFirewallRuleStatus status = 3;
}

// MariadbFirewallRuleList is a list of MariadbFirewallRules
message MariadbFirewallRuleList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of MariadbFirewallRule CRD objects
  repeated MariadbFirewallRule items = 2;
}

message MariadbFirewallRuleSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string endIPAddress = 3;

  optional string name = 4;

  optional string resourceGroupName = 5;

  optional string serverName = 6;

  optional string startIPAddress = 7;
}

message MariadbFirewallRuleStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional MariadbFirewallRuleSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message MariadbServer {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional MariadbServerSpec spec = 2;

  optional MariadbServerStatus status = 3;
}

// MariadbServerList is a list of MariadbServers
message MariadbServerList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of MariadbServer CRD objects
  repeated MariadbServer items = 2;
}

message MariadbServerSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional k8s.io.api.core.v1.LocalObjectReference secretRef = 3;

  optional string administratorLogin = 4;

  // +optional
  optional string fqdn = 5;

  optional string location = 6;

  optional string name = 7;

  optional string resourceGroupName = 8;

  // +kubebuilder:validation:MaxItems=1
  repeated MariadbServerSpecSku sku = 9;

  optional string sslEnforcement = 10;

  // +kubebuilder:validation:MaxItems=1
  repeated MariadbServerSpecStorageProfile storageProfile = 11;

  // +optional
  map<string, string> tags = 12;

  optional string version = 13;
}

message MariadbServerSpecSku {
  optional int64 capacity = 1;

  optional string family = 2;

  optional string name = 3;

  optional string tier = 4;
}

message MariadbServerSpecStorageProfile {
  // +optional
  optional int64 backupRetentionDays = 1;

  // +optional
  optional string geoRedundantBackup = 2;

  optional int64 storageMb = 3;
}

message MariadbServerStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional MariadbServerSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message MediaServicesAccount {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional MediaServicesAccountSpec spec = 2;

  optional MediaServicesAccountStatus status = 3;
}

// MediaServicesAccountList is a list of MediaServicesAccounts
message MediaServicesAccountList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of MediaServicesAccount CRD objects
  repeated MediaServicesAccount items = 2;
}

message MediaServicesAccountSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string location = 3;

  optional string name = 4;

  optional string resourceGroupName = 5;

  repeated MediaServicesAccountSpecStorageAccount storageAccount = 6;
}

message MediaServicesAccountSpecStorageAccount {
  optional string ID = 1;

  // +optional
  optional bool isPrimary = 2;
}

message MediaServicesAccountStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional MediaServicesAccountSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message MetricAlertrule {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional MetricAlertruleSpec spec = 2;

  optional MetricAlertruleStatus status = 3;
}

// MetricAlertruleList is a list of MetricAlertrules
message MetricAlertruleList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of MetricAlertrule CRD objects
  repeated MetricAlertrule items = 2;
}

message MetricAlertruleSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string aggregation = 3;

  // +optional
  optional string description = 4;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated MetricAlertruleSpecEmailAction emailAction = 5;

  // +optional
  optional bool enabled = 6;

  optional string location = 7;

  optional string metricName = 8;

  optional string name = 9;

  optional string operator = 10;

  optional string period = 11;

  optional string resourceGroupName = 12;

  optional string resourceID = 13;

  // +optional
  map<string, string> tags = 14;

  optional double threshold = 15;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated MetricAlertruleSpecWebhookAction webhookAction = 16;
}

message MetricAlertruleSpecEmailAction {
  // +optional
  repeated string customEmails = 1;

  // +optional
  optional bool sendToServiceOwners = 2;
}

message MetricAlertruleSpecWebhookAction {
  // +optional
  map<string, string> properties = 1;

  optional string serviceURI = 2;
}

message MetricAlertruleStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional MetricAlertruleSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message MonitorActionGroup {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional MonitorActionGroupSpec spec = 2;

  optional MonitorActionGroupStatus status = 3;
}

// MonitorActionGroupList is a list of MonitorActionGroups
message MonitorActionGroupList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of MonitorActionGroup CRD objects
  repeated MonitorActionGroup items = 2;
}

message MonitorActionGroupSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  repeated MonitorActionGroupSpecEmailReceiver emailReceiver = 3;

  // +optional
  optional bool enabled = 4;

  optional string name = 5;

  optional string resourceGroupName = 6;

  optional string shortName = 7;

  // +optional
  repeated MonitorActionGroupSpecSmsReceiver smsReceiver = 8;

  // +optional
  map<string, string> tags = 9;

  // +optional
  repeated MonitorActionGroupSpecWebhookReceiver webhookReceiver = 10;
}

message MonitorActionGroupSpecEmailReceiver {
  optional string emailAddress = 1;

  optional string name = 2;
}

message MonitorActionGroupSpecSmsReceiver {
  optional string countryCode = 1;

  optional string name = 2;

  optional string phoneNumber = 3;
}

message MonitorActionGroupSpecWebhookReceiver {
  optional string name = 1;

  optional string serviceURI = 2;
}

message MonitorActionGroupStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional MonitorActionGroupSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message MonitorActivityLogAlert {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional MonitorActivityLogAlertSpec spec = 2;

  optional MonitorActivityLogAlertStatus status = 3;
}

// MonitorActivityLogAlertList is a list of MonitorActivityLogAlerts
message MonitorActivityLogAlertList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of MonitorActivityLogAlert CRD objects
  repeated MonitorActivityLogAlert items = 2;
}

message MonitorActivityLogAlertSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  repeated MonitorActivityLogAlertSpecAction action = 3;

  // +kubebuilder:validation:MaxItems=1
  repeated MonitorActivityLogAlertSpecCriteria criteria = 4;

  // +optional
  optional string description = 5;

  // +optional
  optional bool enabled = 6;

  optional string name = 7;

  optional string resourceGroupName = 8;

  // +kubebuilder:validation:MinItems=1
  repeated string scopes = 9;

  // +optional
  map<string, string> tags = 10;
}

message MonitorActivityLogAlertSpecAction {
  optional string actionGroupID = 1;

  // +optional
  map<string, string> webhookProperties = 2;
}

message MonitorActivityLogAlertSpecCriteria {
  // +optional
  optional string caller = 1;

  optional string category = 2;

  // +optional
  optional string level = 3;

  // +optional
  optional string operationName = 4;

  // +optional
  optional string resourceGroup = 5;

  // +optional
  optional string resourceID = 6;

  // +optional
  optional string resourceProvider = 7;

  // +optional
  optional string resourceType = 8;

  // +optional
  optional string status = 9;

  // +optional
  optional string subStatus = 10;
}

message MonitorActivityLogAlertStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional MonitorActivityLogAlertSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message MonitorAutoscaleSetting {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional MonitorAutoscaleSettingSpec spec = 2;

  optional MonitorAutoscaleSettingStatus status = 3;
}

// MonitorAutoscaleSettingList is a list of MonitorAutoscaleSettings
message MonitorAutoscaleSettingList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of MonitorAutoscaleSetting CRD objects
  repeated MonitorAutoscaleSetting items = 2;
}

message MonitorAutoscaleSettingSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  optional bool enabled = 3;

  optional string location = 4;

  optional string name = 5;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated MonitorAutoscaleSettingSpecNotification notification = 6;

  // +kubebuilder:validation:MaxItems=20
  repeated MonitorAutoscaleSettingSpecProfile profile = 7;

  optional string resourceGroupName = 8;

  // +optional
  map<string, string> tags = 9;

  optional string targetResourceID = 10;
}

message MonitorAutoscaleSettingSpecNotification {
  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated MonitorAutoscaleSettingSpecNotificationEmail email = 1;

  // +optional
  repeated MonitorAutoscaleSettingSpecNotificationWebhook webhook = 2;
}

message MonitorAutoscaleSettingSpecNotificationEmail {
  // +optional
  repeated string customEmails = 1;

  // +optional
  optional bool sendToSubscriptionAdministrator = 2;

  // +optional
  optional bool sendToSubscriptionCoAdministrator = 3;
}

message MonitorAutoscaleSettingSpecNotificationWebhook {
  // +optional
  map<string, string> properties = 1;

  optional string serviceURI = 2;
}

message MonitorAutoscaleSettingSpecProfile {
  // +kubebuilder:validation:MaxItems=1
  repeated MonitorAutoscaleSettingSpecProfileCapacity capacity = 1;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated MonitorAutoscaleSettingSpecProfileFixedDate fixedDate = 2;

  optional string name = 3;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated MonitorAutoscaleSettingSpecProfileRecurrence recurrence = 4;

  // +optional
  // +kubebuilder:validation:MaxItems=10
  repeated MonitorAutoscaleSettingSpecProfileRule rule = 5;
}

message MonitorAutoscaleSettingSpecProfileCapacity {
  optional int64 default = 1;

  optional int64 maximum = 2;

  optional int64 minimum = 3;
}

message MonitorAutoscaleSettingSpecProfileFixedDate {
  optional string end = 1;

  optional string start = 2;

  // +optional
  optional string timezone = 3;
}

message MonitorAutoscaleSettingSpecProfileRecurrence {
  repeated string days = 1;

  // +kubebuilder:validation:MaxItems=1
  repeated int64 hours = 2;

  // +kubebuilder:validation:MaxItems=1
  repeated int64 minutes = 3;

  // +optional
  optional string timezone = 4;
}

message MonitorAutoscaleSettingSpecProfileRule {
  // +kubebuilder:validation:MaxItems=1
  repeated MonitorAutoscaleSettingSpecProfileRuleMetricTrigger metricTrigger = 1;

  // +kubebuilder:validation:MaxItems=1
  repeated MonitorAutoscaleSettingSpecProfileRuleScaleAction scaleAction = 2;
}

message MonitorAutoscaleSettingSpecProfileRuleMetricTrigger {
  optional string metricName = 1;

  optional string metricResourceID = 2;

  optional string operator = 3;

  optional string statistic = 4;

  optional double threshold = 5;

  optional string timeAggregation = 6;

  optional string timeGrain = 7;

  optional string timeWindow = 8;
}

message MonitorAutoscaleSettingSpecProfileRuleScaleAction {
  optional string cooldown = 1;

  optional string direction = 2;

  optional string type = 3;

  optional int64 value = 4;
}

message MonitorAutoscaleSettingStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional MonitorAutoscaleSettingSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message MonitorDiagnosticSetting {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional MonitorDiagnosticSettingSpec spec = 2;

  optional MonitorDiagnosticSettingStatus status = 3;
}

// MonitorDiagnosticSettingList is a list of MonitorDiagnosticSettings
message MonitorDiagnosticSettingList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of MonitorDiagnosticSetting CRD objects
  repeated MonitorDiagnosticSetting items = 2;
}

message MonitorDiagnosticSettingSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  optional string eventhubAuthorizationRuleID = 3;

  // +optional
  optional string eventhubName = 4;

  // +optional
  repeated MonitorDiagnosticSettingSpecLog log = 5;

  // +optional
  optional string logAnalyticsWorkspaceID = 6;

  // +optional
  repeated MonitorDiagnosticSettingSpecMetric metric = 7;

  optional string name = 8;

  // +optional
  optional string storageAccountID = 9;

  optional string targetResourceID = 10;
}

message MonitorDiagnosticSettingSpecLog {
  optional string category = 1;

  // +optional
  optional bool enabled = 2;

  // +kubebuilder:validation:MaxItems=1
  repeated MonitorDiagnosticSettingSpecLogRetentionPolicy retentionPolicy = 3;
}

message MonitorDiagnosticSettingSpecLogRetentionPolicy {
  // +optional
  optional int64 days = 1;

  optional bool enabled = 2;
}

message MonitorDiagnosticSettingSpecMetric {
  optional string category = 1;

  // +optional
  optional bool enabled = 2;

  // +kubebuilder:validation:MaxItems=1
  repeated MonitorDiagnosticSettingSpecMetricRetentionPolicy retentionPolicy = 3;
}

message MonitorDiagnosticSettingSpecMetricRetentionPolicy {
  // +optional
  optional int64 days = 1;

  optional bool enabled = 2;
}

message MonitorDiagnosticSettingStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional MonitorDiagnosticSettingSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message MonitorLogProfile {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional MonitorLogProfileSpec spec = 2;

  optional MonitorLogProfileStatus status = 3;
}

// MonitorLogProfileList is a list of MonitorLogProfiles
message MonitorLogProfileList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of MonitorLogProfile CRD objects
  repeated MonitorLogProfile items = 2;
}

message MonitorLogProfileSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +kubebuilder:validation:MinItems=1
  repeated string categories = 3;

  // +kubebuilder:validation:MinItems=1
  repeated string locations = 4;

  optional string name = 5;

  // +kubebuilder:validation:MaxItems=1
  repeated MonitorLogProfileSpecRetentionPolicy retentionPolicy = 6;

  // +optional
  optional string servicebusRuleID = 7;

  // +optional
  optional string storageAccountID = 8;
}

message MonitorLogProfileSpecRetentionPolicy {
  // +optional
  optional int64 days = 1;

  optional bool enabled = 2;
}

message MonitorLogProfileStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional MonitorLogProfileSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message MonitorMetricAlert {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional MonitorMetricAlertSpec spec = 2;

  optional MonitorMetricAlertStatus status = 3;
}

// MonitorMetricAlertList is a list of MonitorMetricAlerts
message MonitorMetricAlertList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of MonitorMetricAlert CRD objects
  repeated MonitorMetricAlert items = 2;
}

message MonitorMetricAlertSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  repeated MonitorMetricAlertSpecAction action = 3;

  // +optional
  optional bool autoMitigate = 4;

  // +kubebuilder:validation:MinItems=1
  repeated MonitorMetricAlertSpecCriteria criteria = 5;

  // +optional
  optional string description = 6;

  // +optional
  optional bool enabled = 7;

  // +optional
  optional string frequency = 8;

  optional string name = 9;

  optional string resourceGroupName = 10;

  // +kubebuilder:validation:MaxItems=1
  // +kubebuilder:validation:MinItems=1
  repeated string scopes = 11;

  // +optional
  optional int64 severity = 12;

  // +optional
  map<string, string> tags = 13;

  // +optional
  optional string windowSize = 14;
}

message MonitorMetricAlertSpecAction {
  optional string actionGroupID = 1;

  // +optional
  map<string, string> webhookProperties = 2;
}

message MonitorMetricAlertSpecCriteria {
  optional string aggregation = 1;

  // +optional
  repeated MonitorMetricAlertSpecCriteriaDimension dimension = 2;

  optional string metricName = 3;

  optional string metricNamespace = 4;

  optional string operator = 5;

  optional double threshold = 6;
}

message MonitorMetricAlertSpecCriteriaDimension {
  optional string name = 1;

  optional string operator = 2;

  // +kubebuilder:validation:MinItems=1
  repeated string values = 3;
}

message MonitorMetricAlertStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional MonitorMetricAlertSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message MonitorMetricAlertrule {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional MonitorMetricAlertruleSpec spec = 2;

  optional MonitorMetricAlertruleStatus status = 3;
}

// MonitorMetricAlertruleList is a list of MonitorMetricAlertrules
message MonitorMetricAlertruleList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of MonitorMetricAlertrule CRD objects
  repeated MonitorMetricAlertrule items = 2;
}

message MonitorMetricAlertruleSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string aggregation = 3;

  // +optional
  optional string description = 4;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated MonitorMetricAlertruleSpecEmailAction emailAction = 5;

  // +optional
  optional bool enabled = 6;

  optional string location = 7;

  optional string metricName = 8;

  optional string name = 9;

  optional string operator = 10;

  optional string period = 11;

  optional string resourceGroupName = 12;

  optional string resourceID = 13;

  // +optional
  map<string, string> tags = 14;

  optional double threshold = 15;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated MonitorMetricAlertruleSpecWebhookAction webhookAction = 16;
}

message MonitorMetricAlertruleSpecEmailAction {
  // +optional
  repeated string customEmails = 1;

  // +optional
  optional bool sendToServiceOwners = 2;
}

message MonitorMetricAlertruleSpecWebhookAction {
  // +optional
  map<string, string> properties = 1;

  optional string serviceURI = 2;
}

message MonitorMetricAlertruleStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional MonitorMetricAlertruleSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message MssqlElasticpool {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional MssqlElasticpoolSpec spec = 2;

  optional MssqlElasticpoolStatus status = 3;
}

// MssqlElasticpoolList is a list of MssqlElasticpools
message MssqlElasticpoolList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of MssqlElasticpool CRD objects
  repeated MssqlElasticpool items = 2;
}

message MssqlElasticpoolSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  // Deprecated
  repeated MssqlElasticpoolSpecElasticPoolProperties elasticPoolProperties = 3;

  optional string location = 4;

  // +optional
  optional int64 maxSizeBytes = 5;

  // +optional
  optional double maxSizeGb = 6;

  optional string name = 7;

  // +kubebuilder:validation:MaxItems=1
  repeated MssqlElasticpoolSpecPerDatabaseSettings perDatabaseSettings = 8;

  optional string resourceGroupName = 9;

  optional string serverName = 10;

  // +kubebuilder:validation:MaxItems=1
  repeated MssqlElasticpoolSpecSku sku = 11;

  // +optional
  map<string, string> tags = 12;

  // +optional
  optional bool zoneRedundant = 13;
}

message MssqlElasticpoolSpecElasticPoolProperties {
  // +optional
  // Deprecated
  optional string creationDate = 1;

  // +optional
  // Deprecated
  optional string licenseType = 2;

  // +optional
  // Deprecated
  optional int64 maxSizeBytes = 3;

  // +optional
  // Deprecated
  optional string state = 4;

  // +optional
  // Deprecated
  optional bool zoneRedundant = 5;
}

message MssqlElasticpoolSpecPerDatabaseSettings {
  optional double maxCapacity = 1;

  optional double minCapacity = 2;
}

message MssqlElasticpoolSpecSku {
  optional int64 capacity = 1;

  // +optional
  optional string family = 2;

  optional string name = 3;

  optional string tier = 4;
}

message MssqlElasticpoolStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional MssqlElasticpoolSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message MysqlConfiguration {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional MysqlConfigurationSpec spec = 2;

  optional MysqlConfigurationStatus status = 3;
}

// MysqlConfigurationList is a list of MysqlConfigurations
message MysqlConfigurationList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of MysqlConfiguration CRD objects
  repeated MysqlConfiguration items = 2;
}

message MysqlConfigurationSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string name = 3;

  optional string resourceGroupName = 4;

  optional string serverName = 5;

  optional string value = 6;
}

message MysqlConfigurationStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional MysqlConfigurationSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message MysqlDatabase {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional MysqlDatabaseSpec spec = 2;

  optional MysqlDatabaseStatus status = 3;
}

// MysqlDatabaseList is a list of MysqlDatabases
message MysqlDatabaseList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of MysqlDatabase CRD objects
  repeated MysqlDatabase items = 2;
}

message MysqlDatabaseSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string charset = 3;

  optional string collation = 4;

  optional string name = 5;

  optional string resourceGroupName = 6;

  optional string serverName = 7;
}

message MysqlDatabaseStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional MysqlDatabaseSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message MysqlFirewallRule {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional MysqlFirewallRuleSpec spec = 2;

  optional MysqlFirewallRuleStatus status = 3;
}

// MysqlFirewallRuleList is a list of MysqlFirewallRules
message MysqlFirewallRuleList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of MysqlFirewallRule CRD objects
  repeated MysqlFirewallRule items = 2;
}

message MysqlFirewallRuleSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string endIPAddress = 3;

  optional string name = 4;

  optional string resourceGroupName = 5;

  optional string serverName = 6;

  optional string startIPAddress = 7;
}

message MysqlFirewallRuleStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional MysqlFirewallRuleSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message MysqlServer {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional MysqlServerSpec spec = 2;

  optional MysqlServerStatus status = 3;
}

// MysqlServerList is a list of MysqlServers
message MysqlServerList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of MysqlServer CRD objects
  repeated MysqlServer items = 2;
}

message MysqlServerSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional k8s.io.api.core.v1.LocalObjectReference secretRef = 3;

  optional string administratorLogin = 4;

  // +optional
  optional string fqdn = 5;

  optional string location = 6;

  optional string name = 7;

  optional string resourceGroupName = 8;

  // +kubebuilder:validation:MaxItems=1
  repeated MysqlServerSpecSku sku = 9;

  optional string sslEnforcement = 10;

  // +kubebuilder:validation:MaxItems=1
  repeated MysqlServerSpecStorageProfile storageProfile = 11;

  // +optional
  map<string, string> tags = 12;

  optional string version = 13;
}

message MysqlServerSpecSku {
  optional int64 capacity = 1;

  optional string family = 2;

  optional string name = 3;

  optional string tier = 4;
}

message MysqlServerSpecStorageProfile {
  // +optional
  optional int64 backupRetentionDays = 1;

  // +optional
  optional string geoRedundantBackup = 2;

  optional int64 storageMb = 3;
}

message MysqlServerStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional MysqlServerSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message MysqlVirtualNetworkRule {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional MysqlVirtualNetworkRuleSpec spec = 2;

  optional MysqlVirtualNetworkRuleStatus status = 3;
}

// MysqlVirtualNetworkRuleList is a list of MysqlVirtualNetworkRules
message MysqlVirtualNetworkRuleList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of MysqlVirtualNetworkRule CRD objects
  repeated MysqlVirtualNetworkRule items = 2;
}

message MysqlVirtualNetworkRuleSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string name = 3;

  optional string resourceGroupName = 4;

  optional string serverName = 5;

  optional string subnetID = 6;
}

message MysqlVirtualNetworkRuleStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional MysqlVirtualNetworkRuleSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message NetworkConnectionMonitor {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional NetworkConnectionMonitorSpec spec = 2;

  optional NetworkConnectionMonitorStatus status = 3;
}

// NetworkConnectionMonitorList is a list of NetworkConnectionMonitors
message NetworkConnectionMonitorList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of NetworkConnectionMonitor CRD objects
  repeated NetworkConnectionMonitor items = 2;
}

message NetworkConnectionMonitorSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  optional bool autoStart = 3;

  // +kubebuilder:validation:MaxItems=1
  repeated NetworkConnectionMonitorSpecDestination destination = 4;

  // +optional
  optional int64 intervalInSeconds = 5;

  optional string location = 6;

  optional string name = 7;

  optional string networkWatcherName = 8;

  optional string resourceGroupName = 9;

  // +kubebuilder:validation:MaxItems=1
  repeated NetworkConnectionMonitorSpecSource source = 10;

  // +optional
  map<string, string> tags = 11;
}

message NetworkConnectionMonitorSpecDestination {
  // +optional
  optional string address = 1;

  optional int64 port = 2;

  // +optional
  optional string virtualMachineID = 3;
}

message NetworkConnectionMonitorSpecSource {
  // +optional
  optional int64 port = 1;

  optional string virtualMachineID = 2;
}

message NetworkConnectionMonitorStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional NetworkConnectionMonitorSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message NetworkDdosProtectionPlan {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional NetworkDdosProtectionPlanSpec spec = 2;

  optional NetworkDdosProtectionPlanStatus status = 3;
}

// NetworkDdosProtectionPlanList is a list of NetworkDdosProtectionPlans
message NetworkDdosProtectionPlanList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of NetworkDdosProtectionPlan CRD objects
  repeated NetworkDdosProtectionPlan items = 2;
}

message NetworkDdosProtectionPlanSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string location = 3;

  optional string name = 4;

  optional string resourceGroupName = 5;

  // +optional
  map<string, string> tags = 6;

  // +optional
  repeated string virtualNetworkIDS = 7;
}

message NetworkDdosProtectionPlanStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional NetworkDdosProtectionPlanSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message NetworkInterface {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional NetworkInterfaceSpec spec = 2;

  optional NetworkInterfaceStatus status = 3;
}

message NetworkInterfaceApplicationGatewayBackendAddressPoolAssociation {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional NetworkInterfaceApplicationGatewayBackendAddressPoolAssociationSpec spec = 2;

  optional NetworkInterfaceApplicationGatewayBackendAddressPoolAssociationStatus status = 3;
}

// NetworkInterfaceApplicationGatewayBackendAddressPoolAssociationList is a list of NetworkInterfaceApplicationGatewayBackendAddressPoolAssociations
message NetworkInterfaceApplicationGatewayBackendAddressPoolAssociationList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of NetworkInterfaceApplicationGatewayBackendAddressPoolAssociation CRD objects
  repeated NetworkInterfaceApplicationGatewayBackendAddressPoolAssociation items = 2;
}

message NetworkInterfaceApplicationGatewayBackendAddressPoolAssociationSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string backendAddressPoolID = 3;

  optional string ipConfigurationName = 4;

  optional string networkInterfaceID = 5;
}

message NetworkInterfaceApplicationGatewayBackendAddressPoolAssociationStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional NetworkInterfaceApplicationGatewayBackendAddressPoolAssociationSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message NetworkInterfaceApplicationSecurityGroupAssociation {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional NetworkInterfaceApplicationSecurityGroupAssociationSpec spec = 2;

  optional NetworkInterfaceApplicationSecurityGroupAssociationStatus status = 3;
}

// NetworkInterfaceApplicationSecurityGroupAssociationList is a list of NetworkInterfaceApplicationSecurityGroupAssociations
message NetworkInterfaceApplicationSecurityGroupAssociationList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of NetworkInterfaceApplicationSecurityGroupAssociation CRD objects
  repeated NetworkInterfaceApplicationSecurityGroupAssociation items = 2;
}

message NetworkInterfaceApplicationSecurityGroupAssociationSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string applicationSecurityGroupID = 3;

  optional string ipConfigurationName = 4;

  optional string networkInterfaceID = 5;
}

message NetworkInterfaceApplicationSecurityGroupAssociationStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional NetworkInterfaceApplicationSecurityGroupAssociationSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message NetworkInterfaceBackendAddressPoolAssociation {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional NetworkInterfaceBackendAddressPoolAssociationSpec spec = 2;

  optional NetworkInterfaceBackendAddressPoolAssociationStatus status = 3;
}

// NetworkInterfaceBackendAddressPoolAssociationList is a list of NetworkInterfaceBackendAddressPoolAssociations
message NetworkInterfaceBackendAddressPoolAssociationList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of NetworkInterfaceBackendAddressPoolAssociation CRD objects
  repeated NetworkInterfaceBackendAddressPoolAssociation items = 2;
}

message NetworkInterfaceBackendAddressPoolAssociationSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string backendAddressPoolID = 3;

  optional string ipConfigurationName = 4;

  optional string networkInterfaceID = 5;
}

message NetworkInterfaceBackendAddressPoolAssociationStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional NetworkInterfaceBackendAddressPoolAssociationSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

// NetworkInterfaceList is a list of NetworkInterfaces
message NetworkInterfaceList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of NetworkInterface CRD objects
  repeated NetworkInterface items = 2;
}

message NetworkInterfaceNATRuleAssociation {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional NetworkInterfaceNATRuleAssociationSpec spec = 2;

  optional NetworkInterfaceNATRuleAssociationStatus status = 3;
}

// NetworkInterfaceNATRuleAssociationList is a list of NetworkInterfaceNATRuleAssociations
message NetworkInterfaceNATRuleAssociationList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of NetworkInterfaceNATRuleAssociation CRD objects
  repeated NetworkInterfaceNATRuleAssociation items = 2;
}

message NetworkInterfaceNATRuleAssociationSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string ipConfigurationName = 3;

  optional string natRuleID = 4;

  optional string networkInterfaceID = 5;
}

message NetworkInterfaceNATRuleAssociationStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional NetworkInterfaceNATRuleAssociationSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message NetworkInterfaceSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  repeated string appliedDNSServers = 3;

  // +optional
  repeated string dnsServers = 4;

  // +optional
  optional bool enableAcceleratedNetworking = 5;

  // +optional
  optional bool enableIPForwarding = 6;

  // +optional
  optional string internalDNSNameLabel = 7;

  // +optional
  // Deprecated
  optional string internalFqdn = 8;

  repeated NetworkInterfaceSpecIpConfiguration ipConfiguration = 9;

  optional string location = 10;

  // +optional
  optional string macAddress = 11;

  optional string name = 12;

  // +optional
  optional string networkSecurityGroupID = 13;

  // +optional
  optional string privateIPAddress = 14;

  // +optional
  repeated string privateIPAddresses = 15;

  optional string resourceGroupName = 16;

  // +optional
  map<string, string> tags = 17;

  // +optional
  optional string virtualMachineID = 18;
}

message NetworkInterfaceSpecIpConfiguration {
  // +optional
  // Deprecated
  repeated string applicationGatewayBackendAddressPoolsIDS = 1;

  // +optional
  // Deprecated
  repeated string applicationSecurityGroupIDS = 2;

  // +optional
  // Deprecated
  repeated string loadBalancerBackendAddressPoolsIDS = 3;

  // +optional
  // Deprecated
  repeated string loadBalancerInboundNATRulesIDS = 4;

  optional string name = 5;

  // +optional
  optional bool primary = 6;

  // +optional
  optional string privateIPAddress = 7;

  optional string privateIPAddressAllocation = 8;

  // +optional
  optional string privateIPAddressVersion = 9;

  // +optional
  optional string publicIPAddressID = 10;

  // +optional
  optional string subnetID = 11;
}

message NetworkInterfaceStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional NetworkInterfaceSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message NetworkPacketCapture {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional NetworkPacketCaptureSpec spec = 2;

  optional NetworkPacketCaptureStatus status = 3;
}

// NetworkPacketCaptureList is a list of NetworkPacketCaptures
message NetworkPacketCaptureList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of NetworkPacketCapture CRD objects
  repeated NetworkPacketCapture items = 2;
}

message NetworkPacketCaptureSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  repeated NetworkPacketCaptureSpecFilter filter = 3;

  // +optional
  optional int64 maximumBytesPerPacket = 4;

  // +optional
  optional int64 maximumBytesPerSession = 5;

  // +optional
  optional int64 maximumCaptureDuration = 6;

  optional string name = 7;

  optional string networkWatcherName = 8;

  optional string resourceGroupName = 9;

  // +kubebuilder:validation:MaxItems=1
  repeated NetworkPacketCaptureSpecStorageLocation storageLocation = 10;

  optional string targetResourceID = 11;
}

message NetworkPacketCaptureSpecFilter {
  // +optional
  optional string localIPAddress = 1;

  // +optional
  optional string localPort = 2;

  optional string protocol = 3;

  // +optional
  optional string remoteIPAddress = 4;

  // +optional
  optional string remotePort = 5;
}

message NetworkPacketCaptureSpecStorageLocation {
  // +optional
  optional string filePath = 1;

  // +optional
  optional string storageAccountID = 2;

  // +optional
  optional string storagePath = 3;
}

message NetworkPacketCaptureStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional NetworkPacketCaptureSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message NetworkProfile {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional NetworkProfileSpec spec = 2;

  optional NetworkProfileStatus status = 3;
}

// NetworkProfileList is a list of NetworkProfiles
message NetworkProfileList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of NetworkProfile CRD objects
  repeated NetworkProfile items = 2;
}

message NetworkProfileSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +kubebuilder:validation:MaxItems=1
  repeated NetworkProfileSpecContainerNetworkInterface containerNetworkInterface = 3;

  // +optional
  repeated string containerNetworkInterfaceIDS = 4;

  optional string location = 5;

  optional string name = 6;

  optional string resourceGroupName = 7;

  // +optional
  map<string, string> tags = 8;
}

message NetworkProfileSpecContainerNetworkInterface {
  repeated NetworkProfileSpecContainerNetworkInterfaceIpConfiguration ipConfiguration = 1;

  optional string name = 2;
}

message NetworkProfileSpecContainerNetworkInterfaceIpConfiguration {
  optional string name = 1;

  optional string subnetID = 2;
}

message NetworkProfileStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional NetworkProfileSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message NetworkSecurityGroup {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional NetworkSecurityGroupSpec spec = 2;

  optional NetworkSecurityGroupStatus status = 3;
}

// NetworkSecurityGroupList is a list of NetworkSecurityGroups
message NetworkSecurityGroupList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of NetworkSecurityGroup CRD objects
  repeated NetworkSecurityGroup items = 2;
}

message NetworkSecurityGroupSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string location = 3;

  optional string name = 4;

  optional string resourceGroupName = 5;

  // +optional
  repeated NetworkSecurityGroupSpecSecurityRule securityRule = 6;

  // +optional
  map<string, string> tags = 7;
}

message NetworkSecurityGroupSpecSecurityRule {
  optional string access = 1;

  // +optional
  optional string description = 2;

  // +optional
  optional string destinationAddressPrefix = 3;

  // +optional
  repeated string destinationAddressPrefixes = 4;

  // +optional
  repeated string destinationApplicationSecurityGroupIDS = 5;

  // +optional
  optional string destinationPortRange = 6;

  // +optional
  repeated string destinationPortRanges = 7;

  optional string direction = 8;

  optional string name = 9;

  optional int64 priority = 10;

  optional string protocol = 11;

  // +optional
  optional string sourceAddressPrefix = 12;

  // +optional
  repeated string sourceAddressPrefixes = 13;

  // +optional
  repeated string sourceApplicationSecurityGroupIDS = 14;

  // +optional
  optional string sourcePortRange = 15;

  // +optional
  repeated string sourcePortRanges = 16;
}

message NetworkSecurityGroupStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional NetworkSecurityGroupSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message NetworkSecurityRule {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional NetworkSecurityRuleSpec spec = 2;

  optional NetworkSecurityRuleStatus status = 3;
}

// NetworkSecurityRuleList is a list of NetworkSecurityRules
message NetworkSecurityRuleList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of NetworkSecurityRule CRD objects
  repeated NetworkSecurityRule items = 2;
}

message NetworkSecurityRuleSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string access = 3;

  // +optional
  optional string description = 4;

  // +optional
  optional string destinationAddressPrefix = 5;

  // +optional
  repeated string destinationAddressPrefixes = 6;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated string destinationApplicationSecurityGroupIDS = 7;

  // +optional
  optional string destinationPortRange = 8;

  // +optional
  repeated string destinationPortRanges = 9;

  optional string direction = 10;

  optional string name = 11;

  optional string networkSecurityGroupName = 12;

  optional int64 priority = 13;

  optional string protocol = 14;

  optional string resourceGroupName = 15;

  // +optional
  optional string sourceAddressPrefix = 16;

  // +optional
  repeated string sourceAddressPrefixes = 17;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated string sourceApplicationSecurityGroupIDS = 18;

  // +optional
  optional string sourcePortRange = 19;

  // +optional
  repeated string sourcePortRanges = 20;
}

message NetworkSecurityRuleStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional NetworkSecurityRuleSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message NetworkWatcher {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional NetworkWatcherSpec spec = 2;

  optional NetworkWatcherStatus status = 3;
}

// NetworkWatcherList is a list of NetworkWatchers
message NetworkWatcherList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of NetworkWatcher CRD objects
  repeated NetworkWatcher items = 2;
}

message NetworkWatcherSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string location = 3;

  optional string name = 4;

  optional string resourceGroupName = 5;

  // +optional
  map<string, string> tags = 6;
}

message NetworkWatcherStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional NetworkWatcherSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message NotificationHub {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional NotificationHubSpec spec = 2;

  optional NotificationHubStatus status = 3;
}

message NotificationHubAuthorizationRule {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional NotificationHubAuthorizationRuleSpec spec = 2;

  optional NotificationHubAuthorizationRuleStatus status = 3;
}

// NotificationHubAuthorizationRuleList is a list of NotificationHubAuthorizationRules
message NotificationHubAuthorizationRuleList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of NotificationHubAuthorizationRule CRD objects
  repeated NotificationHubAuthorizationRule items = 2;
}

message NotificationHubAuthorizationRuleSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  optional bool listen = 3;

  // +optional
  optional bool manage = 4;

  optional string name = 5;

  optional string namespaceName = 6;

  optional string notificationHubName = 7;

  // +optional
  optional string primaryAccessKey = 8;

  optional string resourceGroupName = 9;

  // +optional
  optional string secondaryAccessKey = 10;

  // +optional
  optional bool send = 11;
}

message NotificationHubAuthorizationRuleStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional NotificationHubAuthorizationRuleSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

// NotificationHubList is a list of NotificationHubs
message NotificationHubList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of NotificationHub CRD objects
  repeated NotificationHub items = 2;
}

message NotificationHubNamespace_ {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional NotificationHubNamespace_Spec spec = 2;

  optional NotificationHubNamespace_Status status = 3;
}

// NotificationHubNamespace_List is a list of NotificationHubNamespace_s
message NotificationHubNamespace_List {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of NotificationHubNamespace_ CRD objects
  repeated NotificationHubNamespace_ items = 2;
}

message NotificationHubNamespace_Spec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  optional bool enabled = 3;

  optional string location = 4;

  optional string name = 5;

  optional string namespaceType = 6;

  optional string resourceGroupName = 7;

  // +optional
  optional string servicebusEndpoint = 8;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  // Deprecated
  repeated NotificationHubNamespace_SpecSku sku = 9;

  // +optional
  optional string skuName = 10;
}

message NotificationHubNamespace_SpecSku {
  optional string name = 1;
}

message NotificationHubNamespace_Status {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional NotificationHubNamespace_Spec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message NotificationHubSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional k8s.io.api.core.v1.LocalObjectReference secretRef = 3;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated NotificationHubSpecApnsCredential apnsCredential = 4;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated NotificationHubSpecGcmCredential gcmCredential = 5;

  optional string location = 6;

  optional string name = 7;

  optional string namespaceName = 8;

  optional string resourceGroupName = 9;
}

message NotificationHubSpecApnsCredential {
  optional string applicationMode = 1;

  optional string bundleID = 2;

  optional string keyID = 3;

  optional string teamID = 4;
}

message NotificationHubSpecGcmCredential {
}

message NotificationHubStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional NotificationHubSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message PacketCapture {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional PacketCaptureSpec spec = 2;

  optional PacketCaptureStatus status = 3;
}

// PacketCaptureList is a list of PacketCaptures
message PacketCaptureList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of PacketCapture CRD objects
  repeated PacketCapture items = 2;
}

message PacketCaptureSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  repeated PacketCaptureSpecFilter filter = 3;

  // +optional
  optional int64 maximumBytesPerPacket = 4;

  // +optional
  optional int64 maximumBytesPerSession = 5;

  // +optional
  optional int64 maximumCaptureDuration = 6;

  optional string name = 7;

  optional string networkWatcherName = 8;

  optional string resourceGroupName = 9;

  // +kubebuilder:validation:MaxItems=1
  repeated PacketCaptureSpecStorageLocation storageLocation = 10;

  optional string targetResourceID = 11;
}

message PacketCaptureSpecFilter {
  // +optional
  optional string localIPAddress = 1;

  // +optional
  optional string localPort = 2;

  optional string protocol = 3;

  // +optional
  optional string remoteIPAddress = 4;

  // +optional
  optional string remotePort = 5;
}

message PacketCaptureSpecStorageLocation {
  // +optional
  optional string filePath = 1;

  // +optional
  optional string storageAccountID = 2;

  // +optional
  optional string storagePath = 3;
}

message PacketCaptureStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional PacketCaptureSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message PolicyAssignment {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional PolicyAssignmentSpec spec = 2;

  optional PolicyAssignmentStatus status = 3;
}

// PolicyAssignmentList is a list of PolicyAssignments
message PolicyAssignmentList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of PolicyAssignment CRD objects
  repeated PolicyAssignment items = 2;
}

message PolicyAssignmentSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  optional string description = 3;

  // +optional
  optional string displayName = 4;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated PolicyAssignmentSpecIdentity identity = 5;

  // +optional
  optional string location = 6;

  optional string name = 7;

  // +optional
  repeated string notScopes = 8;

  // +optional
  optional string parameters = 9;

  optional string policyDefinitionID = 10;

  optional string scope = 11;
}

message PolicyAssignmentSpecIdentity {
  // +optional
  optional string principalID = 1;

  // +optional
  optional string tenantID = 2;

  // +optional
  optional string type = 3;
}

message PolicyAssignmentStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional PolicyAssignmentSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message PolicyDefinition {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional PolicyDefinitionSpec spec = 2;

  optional PolicyDefinitionStatus status = 3;
}

// PolicyDefinitionList is a list of PolicyDefinitions
message PolicyDefinitionList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of PolicyDefinition CRD objects
  repeated PolicyDefinition items = 2;
}

message PolicyDefinitionSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  optional string description = 3;

  optional string displayName = 4;

  // +optional
  optional string managementGroupID = 5;

  // +optional
  optional string metadata = 6;

  optional string mode = 7;

  optional string name = 8;

  // +optional
  optional string parameters = 9;

  // +optional
  optional string policyRule = 10;

  optional string policyType = 11;
}

message PolicyDefinitionStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional PolicyDefinitionSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message PolicySetDefinition {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional PolicySetDefinitionSpec spec = 2;

  optional PolicySetDefinitionStatus status = 3;
}

// PolicySetDefinitionList is a list of PolicySetDefinitions
message PolicySetDefinitionList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of PolicySetDefinition CRD objects
  repeated PolicySetDefinition items = 2;
}

message PolicySetDefinitionSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  optional string description = 3;

  optional string displayName = 4;

  // +optional
  optional string managementGroupID = 5;

  // +optional
  optional string metadata = 6;

  optional string name = 7;

  // +optional
  optional string parameters = 8;

  // +optional
  optional string policyDefinitions = 9;

  optional string policyType = 10;
}

message PolicySetDefinitionStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional PolicySetDefinitionSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message PostgresqlConfiguration {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional PostgresqlConfigurationSpec spec = 2;

  optional PostgresqlConfigurationStatus status = 3;
}

// PostgresqlConfigurationList is a list of PostgresqlConfigurations
message PostgresqlConfigurationList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of PostgresqlConfiguration CRD objects
  repeated PostgresqlConfiguration items = 2;
}

message PostgresqlConfigurationSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string name = 3;

  optional string resourceGroupName = 4;

  optional string serverName = 5;

  optional string value = 6;
}

message PostgresqlConfigurationStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional PostgresqlConfigurationSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message PostgresqlDatabase {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional PostgresqlDatabaseSpec spec = 2;

  optional PostgresqlDatabaseStatus status = 3;
}

// PostgresqlDatabaseList is a list of PostgresqlDatabases
message PostgresqlDatabaseList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of PostgresqlDatabase CRD objects
  repeated PostgresqlDatabase items = 2;
}

message PostgresqlDatabaseSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string charset = 3;

  optional string collation = 4;

  optional string name = 5;

  optional string resourceGroupName = 6;

  optional string serverName = 7;
}

message PostgresqlDatabaseStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional PostgresqlDatabaseSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message PostgresqlFirewallRule {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional PostgresqlFirewallRuleSpec spec = 2;

  optional PostgresqlFirewallRuleStatus status = 3;
}

// PostgresqlFirewallRuleList is a list of PostgresqlFirewallRules
message PostgresqlFirewallRuleList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of PostgresqlFirewallRule CRD objects
  repeated PostgresqlFirewallRule items = 2;
}

message PostgresqlFirewallRuleSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string endIPAddress = 3;

  optional string name = 4;

  optional string resourceGroupName = 5;

  optional string serverName = 6;

  optional string startIPAddress = 7;
}

message PostgresqlFirewallRuleStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional PostgresqlFirewallRuleSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message PostgresqlServer {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional PostgresqlServerSpec spec = 2;

  optional PostgresqlServerStatus status = 3;
}

// PostgresqlServerList is a list of PostgresqlServers
message PostgresqlServerList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of PostgresqlServer CRD objects
  repeated PostgresqlServer items = 2;
}

message PostgresqlServerSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional k8s.io.api.core.v1.LocalObjectReference secretRef = 3;

  optional string administratorLogin = 4;

  // +optional
  optional string fqdn = 5;

  optional string location = 6;

  optional string name = 7;

  optional string resourceGroupName = 8;

  // +kubebuilder:validation:MaxItems=1
  repeated PostgresqlServerSpecSku sku = 9;

  optional string sslEnforcement = 10;

  // +kubebuilder:validation:MaxItems=1
  repeated PostgresqlServerSpecStorageProfile storageProfile = 11;

  // +optional
  map<string, string> tags = 12;

  optional string version = 13;
}

message PostgresqlServerSpecSku {
  optional int64 capacity = 1;

  optional string family = 2;

  optional string name = 3;

  optional string tier = 4;
}

message PostgresqlServerSpecStorageProfile {
  // +optional
  optional int64 backupRetentionDays = 1;

  // +optional
  optional string geoRedundantBackup = 2;

  optional int64 storageMb = 3;
}

message PostgresqlServerStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional PostgresqlServerSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message PostgresqlVirtualNetworkRule {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional PostgresqlVirtualNetworkRuleSpec spec = 2;

  optional PostgresqlVirtualNetworkRuleStatus status = 3;
}

// PostgresqlVirtualNetworkRuleList is a list of PostgresqlVirtualNetworkRules
message PostgresqlVirtualNetworkRuleList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of PostgresqlVirtualNetworkRule CRD objects
  repeated PostgresqlVirtualNetworkRule items = 2;
}

message PostgresqlVirtualNetworkRuleSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  optional bool ignoreMissingVnetServiceEndpoint = 3;

  optional string name = 4;

  optional string resourceGroupName = 5;

  optional string serverName = 6;

  optional string subnetID = 7;
}

message PostgresqlVirtualNetworkRuleStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional PostgresqlVirtualNetworkRuleSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message PrivateDNSARecord {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional PrivateDNSARecordSpec spec = 2;

  optional PrivateDNSARecordStatus status = 3;
}

// PrivateDNSARecordList is a list of PrivateDNSARecords
message PrivateDNSARecordList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of PrivateDNSARecord CRD objects
  repeated PrivateDNSARecord items = 2;
}

message PrivateDNSARecordSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string name = 3;

  repeated string records = 4;

  optional string resourceGroupName = 5;

  // +optional
  map<string, string> tags = 6;

  optional int64 ttl = 7;

  optional string zoneName = 8;
}

message PrivateDNSARecordStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional PrivateDNSARecordSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message PrivateDNSZone {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional PrivateDNSZoneSpec spec = 2;

  optional PrivateDNSZoneStatus status = 3;
}

// PrivateDNSZoneList is a list of PrivateDNSZones
message PrivateDNSZoneList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of PrivateDNSZone CRD objects
  repeated PrivateDNSZone items = 2;
}

message PrivateDNSZoneSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  optional int64 maxNumberOfRecordSets = 3;

  // +optional
  optional int64 maxNumberOfVirtualNetworkLinks = 4;

  // +optional
  optional int64 maxNumberOfVirtualNetworkLinksWithRegistration = 5;

  optional string name = 6;

  // +optional
  optional int64 numberOfRecordSets = 7;

  optional string resourceGroupName = 8;

  // +optional
  map<string, string> tags = 9;
}

message PrivateDNSZoneStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional PrivateDNSZoneSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message PublicIP {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional PublicIPSpec spec = 2;

  optional PublicIPStatus status = 3;
}

// PublicIPList is a list of PublicIPs
message PublicIPList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of PublicIP CRD objects
  repeated PublicIP items = 2;
}

message PublicIPPrefix {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional PublicIPPrefixSpec spec = 2;

  optional PublicIPPrefixStatus status = 3;
}

// PublicIPPrefixList is a list of PublicIPPrefixs
message PublicIPPrefixList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of PublicIPPrefix CRD objects
  repeated PublicIPPrefix items = 2;
}

message PublicIPPrefixSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  optional string ipPrefix = 3;

  optional string location = 4;

  optional string name = 5;

  // +optional
  optional int64 prefixLength = 6;

  optional string resourceGroupName = 7;

  // +optional
  optional string sku = 8;

  // +optional
  map<string, string> tags = 9;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated string zones = 10;
}

message PublicIPPrefixStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional PublicIPPrefixSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message PublicIPSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  optional string allocationMethod = 3;

  // +optional
  optional string domainNameLabel = 4;

  // +optional
  optional string fqdn = 5;

  // +optional
  optional int64 idleTimeoutInMinutes = 6;

  // +optional
  optional string ipAddress = 7;

  // +optional
  optional string ipVersion = 8;

  optional string location = 9;

  optional string name = 10;

  // +optional
  // Deprecated
  optional string publicIPAddressAllocation = 11;

  // +optional
  optional string publicIPPrefixID = 12;

  optional string resourceGroupName = 13;

  // +optional
  optional string reverseFqdn = 14;

  // +optional
  optional string sku = 15;

  // +optional
  map<string, string> tags = 16;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated string zones = 17;
}

message PublicIPStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional PublicIPSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message RecoveryServicesProtectedVm {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional RecoveryServicesProtectedVmSpec spec = 2;

  optional RecoveryServicesProtectedVmStatus status = 3;
}

// RecoveryServicesProtectedVmList is a list of RecoveryServicesProtectedVms
message RecoveryServicesProtectedVmList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of RecoveryServicesProtectedVm CRD objects
  repeated RecoveryServicesProtectedVm items = 2;
}

message RecoveryServicesProtectedVmSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string backupPolicyID = 3;

  optional string recoveryVaultName = 4;

  optional string resourceGroupName = 5;

  optional string sourceVmID = 6;

  // +optional
  map<string, string> tags = 7;
}

message RecoveryServicesProtectedVmStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional RecoveryServicesProtectedVmSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message RecoveryServicesProtectionPolicyVm {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional RecoveryServicesProtectionPolicyVmSpec spec = 2;

  optional RecoveryServicesProtectionPolicyVmStatus status = 3;
}

// RecoveryServicesProtectionPolicyVmList is a list of RecoveryServicesProtectionPolicyVms
message RecoveryServicesProtectionPolicyVmList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of RecoveryServicesProtectionPolicyVm CRD objects
  repeated RecoveryServicesProtectionPolicyVm items = 2;
}

message RecoveryServicesProtectionPolicyVmSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +kubebuilder:validation:MaxItems=1
  repeated RecoveryServicesProtectionPolicyVmSpecBackup backup = 3;

  optional string name = 4;

  optional string recoveryVaultName = 5;

  optional string resourceGroupName = 6;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated RecoveryServicesProtectionPolicyVmSpecRetentionDaily retentionDaily = 7;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated RecoveryServicesProtectionPolicyVmSpecRetentionMonthly retentionMonthly = 8;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated RecoveryServicesProtectionPolicyVmSpecRetentionWeekly retentionWeekly = 9;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated RecoveryServicesProtectionPolicyVmSpecRetentionYearly retentionYearly = 10;

  // +optional
  map<string, string> tags = 11;

  // +optional
  optional string timezone = 12;
}

message RecoveryServicesProtectionPolicyVmSpecBackup {
  optional string frequency = 1;

  optional string time = 2;

  // +optional
  repeated string weekdays = 3;
}

message RecoveryServicesProtectionPolicyVmSpecRetentionDaily {
  optional int64 count = 1;
}

message RecoveryServicesProtectionPolicyVmSpecRetentionMonthly {
  optional int64 count = 1;

  repeated string weekdays = 2;

  repeated string weeks = 3;
}

message RecoveryServicesProtectionPolicyVmSpecRetentionWeekly {
  optional int64 count = 1;

  repeated string weekdays = 2;
}

message RecoveryServicesProtectionPolicyVmSpecRetentionYearly {
  optional int64 count = 1;

  repeated string months = 2;

  repeated string weekdays = 3;

  repeated string weeks = 4;
}

message RecoveryServicesProtectionPolicyVmStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional RecoveryServicesProtectionPolicyVmSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message RecoveryServicesVault {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional RecoveryServicesVaultSpec spec = 2;

  optional RecoveryServicesVaultStatus status = 3;
}

// RecoveryServicesVaultList is a list of RecoveryServicesVaults
message RecoveryServicesVaultList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of RecoveryServicesVault CRD objects
  repeated RecoveryServicesVault items = 2;
}

message RecoveryServicesVaultSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string location = 3;

  optional string name = 4;

  optional string resourceGroupName = 5;

  optional string sku = 6;

  // +optional
  map<string, string> tags = 7;
}

message RecoveryServicesVaultStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional RecoveryServicesVaultSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message RedisCache {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional RedisCacheSpec spec = 2;

  optional RedisCacheStatus status = 3;
}

// RedisCacheList is a list of RedisCaches
message RedisCacheList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of RedisCache CRD objects
  repeated RedisCache items = 2;
}

message RedisCacheSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional k8s.io.api.core.v1.LocalObjectReference secretRef = 3;

  optional int64 capacity = 4;

  // +optional
  optional bool enableNonSSLPort = 5;

  optional string family = 6;

  // +optional
  optional string hostname = 7;

  optional string location = 8;

  // +optional
  optional string minimumTLSVersion = 9;

  optional string name = 10;

  // +optional
  repeated RedisCacheSpecPatchSchedule patchSchedule = 11;

  // +optional
  optional int64 port = 12;

  // +optional
  optional string privateStaticIPAddress = 13;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated RedisCacheSpecRedisConfiguration redisConfiguration = 14;

  optional string resourceGroupName = 15;

  // +optional
  optional int64 shardCount = 16;

  optional string skuName = 17;

  // +optional
  optional int64 sslPort = 18;

  // +optional
  optional string subnetID = 19;

  // +optional
  map<string, string> tags = 20;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated string zones = 21;
}

message RedisCacheSpecPatchSchedule {
  optional string dayOfWeek = 1;

  // +optional
  optional int64 startHourUtc = 2;
}

message RedisCacheSpecRedisConfiguration {
  // +optional
  optional bool aofBackupEnabled = 1;

  // +optional
  optional bool enableAuthentication = 2;

  // +optional
  optional int64 maxclients = 3;

  // +optional
  optional int64 maxfragmentationmemoryReserved = 4;

  // +optional
  optional int64 maxmemoryDelta = 5;

  // +optional
  optional string maxmemoryPolicy = 6;

  // +optional
  optional int64 maxmemoryReserved = 7;

  // +optional
  optional string notifyKeyspaceEvents = 8;

  // +optional
  optional bool rdbBackupEnabled = 9;

  // +optional
  optional int64 rdbBackupFrequency = 10;

  // +optional
  optional int64 rdbBackupMaxSnapshotCount = 11;
}

message RedisCacheStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional RedisCacheSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message RedisFirewallRule {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional RedisFirewallRuleSpec spec = 2;

  optional RedisFirewallRuleStatus status = 3;
}

// RedisFirewallRuleList is a list of RedisFirewallRules
message RedisFirewallRuleList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of RedisFirewallRule CRD objects
  repeated RedisFirewallRule items = 2;
}

message RedisFirewallRuleSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string endIP = 3;

  optional string name = 4;

  optional string redisCacheName = 5;

  optional string resourceGroupName = 6;

  optional string startIP = 7;
}

message RedisFirewallRuleStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional RedisFirewallRuleSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message RelayNamespace {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional RelayNamespaceSpec spec = 2;

  optional RelayNamespaceStatus status = 3;
}

// RelayNamespaceList is a list of RelayNamespaces
message RelayNamespaceList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of RelayNamespace CRD objects
  repeated RelayNamespace items = 2;
}

message RelayNamespaceSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional k8s.io.api.core.v1.LocalObjectReference secretRef = 3;

  optional string location = 4;

  // +optional
  optional string metricID = 5;

  optional string name = 6;

  optional string resourceGroupName = 7;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  // Deprecated
  repeated RelayNamespaceSpecSku sku = 8;

  // +optional
  optional string skuName = 9;

  // +optional
  map<string, string> tags = 10;
}

message RelayNamespaceSpecSku {
  optional string name = 1;
}

message RelayNamespaceStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional RelayNamespaceSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message ResourceGroup {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional ResourceGroupSpec spec = 2;

  optional ResourceGroupStatus status = 3;
}

// ResourceGroupList is a list of ResourceGroups
message ResourceGroupList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of ResourceGroup CRD objects
  repeated ResourceGroup items = 2;
}

message ResourceGroupSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string location = 3;

  optional string name = 4;

  // +optional
  map<string, string> tags = 5;
}

message ResourceGroupStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional ResourceGroupSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message RoleAssignment {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional RoleAssignmentSpec spec = 2;

  optional RoleAssignmentStatus status = 3;
}

// RoleAssignmentList is a list of RoleAssignments
message RoleAssignmentList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of RoleAssignment CRD objects
  repeated RoleAssignment items = 2;
}

message RoleAssignmentSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  optional string name = 3;

  optional string principalID = 4;

  // +optional
  optional string roleDefinitionID = 5;

  // +optional
  optional string roleDefinitionName = 6;

  optional string scope = 7;
}

message RoleAssignmentStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional RoleAssignmentSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message RoleDefinition {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional RoleDefinitionSpec spec = 2;

  optional RoleDefinitionStatus status = 3;
}

// RoleDefinitionList is a list of RoleDefinitions
message RoleDefinitionList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of RoleDefinition CRD objects
  repeated RoleDefinition items = 2;
}

message RoleDefinitionSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  repeated string assignableScopes = 3;

  // +optional
  optional string description = 4;

  optional string name = 5;

  repeated RoleDefinitionSpecPermissions permissions = 6;

  // +optional
  optional string roleDefinitionID = 7;

  optional string scope = 8;
}

message RoleDefinitionSpecPermissions {
  // +optional
  repeated string actions = 1;

  // +optional
  repeated string dataActions = 2;

  // +optional
  repeated string notActions = 3;

  // +optional
  repeated string notDataActions = 4;
}

message RoleDefinitionStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional RoleDefinitionSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message Route {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional RouteSpec spec = 2;

  optional RouteStatus status = 3;
}

// RouteList is a list of Routes
message RouteList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of Route CRD objects
  repeated Route items = 2;
}

message RouteSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string addressPrefix = 3;

  optional string name = 4;

  // +optional
  optional string nextHopInIPAddress = 5;

  optional string nextHopType = 6;

  optional string resourceGroupName = 7;

  optional string routeTableName = 8;
}

message RouteStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional RouteSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message RouteTable {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional RouteTableSpec spec = 2;

  optional RouteTableStatus status = 3;
}

// RouteTableList is a list of RouteTables
message RouteTableList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of RouteTable CRD objects
  repeated RouteTable items = 2;
}

message RouteTableSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  optional bool disableBGPRoutePropagation = 3;

  optional string location = 4;

  optional string name = 5;

  optional string resourceGroupName = 6;

  // +optional
  repeated RouteTableSpecRoute route = 7;

  // +optional
  repeated string subnets = 8;

  // +optional
  map<string, string> tags = 9;
}

message RouteTableSpecRoute {
  optional string addressPrefix = 1;

  optional string name = 2;

  // +optional
  optional string nextHopInIPAddress = 3;

  optional string nextHopType = 4;
}

message RouteTableStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional RouteTableSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message SchedulerJob {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional SchedulerJobSpec spec = 2;

  optional SchedulerJobStatus status = 3;
}

message SchedulerJobCollection {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional SchedulerJobCollectionSpec spec = 2;

  optional SchedulerJobCollectionStatus status = 3;
}

// SchedulerJobCollectionList is a list of SchedulerJobCollections
message SchedulerJobCollectionList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of SchedulerJobCollection CRD objects
  repeated SchedulerJobCollection items = 2;
}

message SchedulerJobCollectionSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string location = 3;

  optional string name = 4;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated SchedulerJobCollectionSpecQuota quota = 5;

  optional string resourceGroupName = 6;

  optional string sku = 7;

  // +optional
  optional string state = 8;

  // +optional
  map<string, string> tags = 9;
}

message SchedulerJobCollectionSpecQuota {
  // +optional
  optional int64 maxJobCount = 1;

  optional string maxRecurrenceFrequency = 2;

  // +optional
  optional int64 maxRecurrenceInterval = 3;

  // +optional
  // Deprecated
  optional int64 maxRetryInterval = 4;
}

message SchedulerJobCollectionStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional SchedulerJobCollectionSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

// SchedulerJobList is a list of SchedulerJobs
message SchedulerJobList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of SchedulerJob CRD objects
  repeated SchedulerJob items = 2;
}

message SchedulerJobSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional k8s.io.api.core.v1.LocalObjectReference secretRef = 3;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated SchedulerJobSpecActionStorageQueue actionStorageQueue = 4;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated SchedulerJobSpecActionWeb actionWeb = 5;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated SchedulerJobSpecErrorActionStorageQueue errorActionStorageQueue = 6;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated SchedulerJobSpecErrorActionWeb errorActionWeb = 7;

  optional string jobCollectionName = 8;

  optional string name = 9;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  // +kubebuilder:validation:MinItems=1
  repeated SchedulerJobSpecRecurrence recurrence = 10;

  optional string resourceGroupName = 11;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated SchedulerJobSpecRetry retry = 12;

  // +optional
  optional string startTime = 13;

  // +optional
  optional string state = 14;
}

message SchedulerJobSpecActionStorageQueue {
  optional string message = 1;

  optional string sasToken = 2;

  optional string storageAccountName = 3;

  optional string storageQueueName = 4;
}

message SchedulerJobSpecActionWeb {
  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated SchedulerJobSpecActionWebAuthenticationActiveDirectory authenticationActiveDirectory = 1;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated SchedulerJobSpecActionWebAuthenticationBasic authenticationBasic = 2;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated SchedulerJobSpecActionWebAuthenticationCertificate authenticationCertificate = 3;

  // +optional
  optional string body = 4;

  // +optional
  map<string, string> headers = 5;

  optional string method = 6;

  optional string url = 7;
}

message SchedulerJobSpecActionWebAuthenticationActiveDirectory {
  // +optional
  optional string audience = 1;

  optional string clientID = 2;

  optional string tenantID = 3;
}

message SchedulerJobSpecActionWebAuthenticationBasic {
  optional string username = 1;
}

message SchedulerJobSpecActionWebAuthenticationCertificate {
  // +optional
  optional string expiration = 1;

  // +optional
  optional string subjectName = 2;

  // +optional
  optional string thumbprint = 3;
}

message SchedulerJobSpecErrorActionStorageQueue {
  optional string message = 1;

  optional string sasToken = 2;

  optional string storageAccountName = 3;

  optional string storageQueueName = 4;
}

message SchedulerJobSpecErrorActionWeb {
  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated SchedulerJobSpecErrorActionWebAuthenticationActiveDirectory authenticationActiveDirectory = 1;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated SchedulerJobSpecErrorActionWebAuthenticationBasic authenticationBasic = 2;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated SchedulerJobSpecErrorActionWebAuthenticationCertificate authenticationCertificate = 3;

  // +optional
  optional string body = 4;

  // +optional
  map<string, string> headers = 5;

  optional string method = 6;

  optional string url = 7;
}

message SchedulerJobSpecErrorActionWebAuthenticationActiveDirectory {
  // +optional
  optional string audience = 1;

  optional string clientID = 2;

  optional string tenantID = 3;
}

message SchedulerJobSpecErrorActionWebAuthenticationBasic {
  optional string username = 1;
}

message SchedulerJobSpecErrorActionWebAuthenticationCertificate {
  // +optional
  optional string expiration = 1;

  // +optional
  optional string subjectName = 2;

  // +optional
  optional string thumbprint = 3;
}

message SchedulerJobSpecRecurrence {
  // +optional
  optional int64 count = 1;

  // +optional
  optional string endTime = 2;

  optional string frequency = 3;

  // +optional
  repeated int64 hours = 4;

  // +optional
  optional int64 interval = 5;

  // +optional
  repeated int64 minutes = 6;

  // +optional
  // +kubebuilder:validation:MinItems=1
  repeated int64 monthDays = 7;

  // +optional
  // +kubebuilder:validation:MinItems=1
  repeated SchedulerJobSpecRecurrenceMonthlyOccurrences monthlyOccurrences = 8;

  // +optional
  repeated string weekDays = 9;
}

message SchedulerJobSpecRecurrenceMonthlyOccurrences {
  optional string day = 1;

  optional int64 occurrence = 2;
}

message SchedulerJobSpecRetry {
  // +optional
  optional int64 count = 1;

  // +optional
  optional string interval = 2;
}

message SchedulerJobStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional SchedulerJobSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message SearchService {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional SearchServiceSpec spec = 2;

  optional SearchServiceStatus status = 3;
}

// SearchServiceList is a list of SearchServices
message SearchServiceList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of SearchService CRD objects
  repeated SearchService items = 2;
}

message SearchServiceSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string location = 3;

  optional string name = 4;

  // +optional
  optional int64 partitionCount = 5;

  // +optional
  optional string primaryKey = 6;

  // +optional
  optional int64 replicaCount = 7;

  optional string resourceGroupName = 8;

  // +optional
  optional string secondaryKey = 9;

  optional string sku = 10;

  // +optional
  map<string, string> tags = 11;
}

message SearchServiceStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional SearchServiceSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message SecurityCenterContact {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional SecurityCenterContactSpec spec = 2;

  optional SecurityCenterContactStatus status = 3;
}

// SecurityCenterContactList is a list of SecurityCenterContacts
message SecurityCenterContactList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of SecurityCenterContact CRD objects
  repeated SecurityCenterContact items = 2;
}

message SecurityCenterContactSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional bool alertNotifications = 3;

  optional bool alertsToAdmins = 4;

  optional string email = 5;

  // +optional
  optional string phone = 6;
}

message SecurityCenterContactStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional SecurityCenterContactSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message SecurityCenterSubscriptionPricing {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional SecurityCenterSubscriptionPricingSpec spec = 2;

  optional SecurityCenterSubscriptionPricingStatus status = 3;
}

// SecurityCenterSubscriptionPricingList is a list of SecurityCenterSubscriptionPricings
message SecurityCenterSubscriptionPricingList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of SecurityCenterSubscriptionPricing CRD objects
  repeated SecurityCenterSubscriptionPricing items = 2;
}

message SecurityCenterSubscriptionPricingSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string tier = 3;
}

message SecurityCenterSubscriptionPricingStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional SecurityCenterSubscriptionPricingSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message SecurityCenterWorkspace {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional SecurityCenterWorkspaceSpec spec = 2;

  optional SecurityCenterWorkspaceStatus status = 3;
}

// SecurityCenterWorkspaceList is a list of SecurityCenterWorkspaces
message SecurityCenterWorkspaceList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of SecurityCenterWorkspace CRD objects
  repeated SecurityCenterWorkspace items = 2;
}

message SecurityCenterWorkspaceSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string scope = 3;

  optional string workspaceID = 4;
}

message SecurityCenterWorkspaceStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional SecurityCenterWorkspaceSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message ServiceFabricCluster {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional ServiceFabricClusterSpec spec = 2;

  optional ServiceFabricClusterStatus status = 3;
}

// ServiceFabricClusterList is a list of ServiceFabricClusters
message ServiceFabricClusterList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of ServiceFabricCluster CRD objects
  repeated ServiceFabricCluster items = 2;
}

message ServiceFabricClusterSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  repeated string addOnFeatures = 3;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated ServiceFabricClusterSpecAzureActiveDirectory azureActiveDirectory = 4;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated ServiceFabricClusterSpecCertificate certificate = 5;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated ServiceFabricClusterSpecCertificateCommonNames certificateCommonNames = 6;

  // +optional
  // +kubebuilder:validation:MaxItems=2
  repeated ServiceFabricClusterSpecClientCertificateThumbprint clientCertificateThumbprint = 7;

  // +optional
  optional string clusterCodeVersion = 8;

  // +optional
  optional string clusterEndpoint = 9;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated ServiceFabricClusterSpecDiagnosticsConfig diagnosticsConfig = 10;

  // +optional
  repeated ServiceFabricClusterSpecFabricSettings fabricSettings = 11;

  optional string location = 12;

  optional string managementEndpoint = 13;

  optional string name = 14;

  repeated ServiceFabricClusterSpecNodeType nodeType = 15;

  optional string reliabilityLevel = 16;

  optional string resourceGroupName = 17;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated ServiceFabricClusterSpecReverseProxyCertificate reverseProxyCertificate = 18;

  // +optional
  map<string, string> tags = 19;

  optional string upgradeMode = 20;

  optional string vmImage = 21;
}

message ServiceFabricClusterSpecAzureActiveDirectory {
  optional string clientApplicationID = 1;

  optional string clusterApplicationID = 2;

  optional string tenantID = 3;
}

message ServiceFabricClusterSpecCertificate {
  optional string thumbprint = 1;

  // +optional
  optional string thumbprintSecondary = 2;

  optional string x509StoreName = 3;
}

message ServiceFabricClusterSpecCertificateCommonNames {
  // +kubebuilder:validation:MinItems=1
  repeated ServiceFabricClusterSpecCertificateCommonNamesCommonNames commonNames = 1;

  optional string x509StoreName = 2;
}

message ServiceFabricClusterSpecCertificateCommonNamesCommonNames {
  optional string certificateCommonName = 1;

  // +optional
  optional string certificateIssuerThumbprint = 2;
}

message ServiceFabricClusterSpecClientCertificateThumbprint {
  optional bool isAdmin = 1;

  optional string thumbprint = 2;
}

message ServiceFabricClusterSpecDiagnosticsConfig {
  optional string blobEndpoint = 1;

  optional string protectedAccountKeyName = 2;

  optional string queueEndpoint = 3;

  optional string storageAccountName = 4;

  optional string tableEndpoint = 5;
}

message ServiceFabricClusterSpecFabricSettings {
  optional string name = 1;

  // +optional
  map<string, string> parameters = 2;
}

message ServiceFabricClusterSpecNodeType {
  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated ServiceFabricClusterSpecNodeTypeApplicationPorts applicationPorts = 1;

  // +optional
  map<string, string> capacities = 2;

  optional int64 clientEndpointPort = 3;

  // +optional
  optional string durabilityLevel = 4;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated ServiceFabricClusterSpecNodeTypeEphemeralPorts ephemeralPorts = 5;

  optional int64 httpEndpointPort = 6;

  optional int64 instanceCount = 7;

  optional bool isPrimary = 8;

  optional string name = 9;

  // +optional
  map<string, string> placementProperties = 10;

  // +optional
  optional int64 reverseProxyEndpointPort = 11;
}

message ServiceFabricClusterSpecNodeTypeApplicationPorts {
  optional int64 endPort = 1;

  optional int64 startPort = 2;
}

message ServiceFabricClusterSpecNodeTypeEphemeralPorts {
  optional int64 endPort = 1;

  optional int64 startPort = 2;
}

message ServiceFabricClusterSpecReverseProxyCertificate {
  optional string thumbprint = 1;

  // +optional
  optional string thumbprintSecondary = 2;

  optional string x509StoreName = 3;
}

message ServiceFabricClusterStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional ServiceFabricClusterSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message ServicebusNamespace {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional ServicebusNamespaceSpec spec = 2;

  optional ServicebusNamespaceStatus status = 3;
}

message ServicebusNamespaceAuthorizationRule {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional ServicebusNamespaceAuthorizationRuleSpec spec = 2;

  optional ServicebusNamespaceAuthorizationRuleStatus status = 3;
}

// ServicebusNamespaceAuthorizationRuleList is a list of ServicebusNamespaceAuthorizationRules
message ServicebusNamespaceAuthorizationRuleList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of ServicebusNamespaceAuthorizationRule CRD objects
  repeated ServicebusNamespaceAuthorizationRule items = 2;
}

message ServicebusNamespaceAuthorizationRuleSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional k8s.io.api.core.v1.LocalObjectReference secretRef = 3;

  // +optional
  optional bool listen = 4;

  // +optional
  optional bool manage = 5;

  optional string name = 6;

  optional string namespaceName = 7;

  optional string resourceGroupName = 8;

  // +optional
  optional bool send = 9;
}

message ServicebusNamespaceAuthorizationRuleStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional ServicebusNamespaceAuthorizationRuleSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

// ServicebusNamespaceList is a list of ServicebusNamespaces
message ServicebusNamespaceList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of ServicebusNamespace CRD objects
  repeated ServicebusNamespace items = 2;
}

message ServicebusNamespaceSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional k8s.io.api.core.v1.LocalObjectReference secretRef = 3;

  // +optional
  optional int64 capacity = 4;

  optional string location = 5;

  optional string name = 6;

  optional string resourceGroupName = 7;

  optional string sku = 8;

  // +optional
  map<string, string> tags = 9;
}

message ServicebusNamespaceStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional ServicebusNamespaceSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message ServicebusQueue {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional ServicebusQueueSpec spec = 2;

  optional ServicebusQueueStatus status = 3;
}

message ServicebusQueueAuthorizationRule {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional ServicebusQueueAuthorizationRuleSpec spec = 2;

  optional ServicebusQueueAuthorizationRuleStatus status = 3;
}

// ServicebusQueueAuthorizationRuleList is a list of ServicebusQueueAuthorizationRules
message ServicebusQueueAuthorizationRuleList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of ServicebusQueueAuthorizationRule CRD objects
  repeated ServicebusQueueAuthorizationRule items = 2;
}

message ServicebusQueueAuthorizationRuleSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional k8s.io.api.core.v1.LocalObjectReference secretRef = 3;

  // +optional
  optional bool listen = 4;

  // +optional
  optional bool manage = 5;

  optional string name = 6;

  optional string namespaceName = 7;

  optional string queueName = 8;

  optional string resourceGroupName = 9;

  // +optional
  optional bool send = 10;
}

message ServicebusQueueAuthorizationRuleStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional ServicebusQueueAuthorizationRuleSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

// ServicebusQueueList is a list of ServicebusQueues
message ServicebusQueueList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of ServicebusQueue CRD objects
  repeated ServicebusQueue items = 2;
}

message ServicebusQueueSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  optional string autoDeleteOnIdle = 3;

  // +optional
  optional bool deadLetteringOnMessageExpiration = 4;

  // +optional
  optional string defaultMessageTtl = 5;

  // +optional
  optional string duplicateDetectionHistoryTimeWindow = 6;

  // +optional
  // Deprecated
  optional bool enableBatchedOperations = 7;

  // +optional
  optional bool enableExpress = 8;

  // +optional
  optional bool enablePartitioning = 9;

  // +optional
  // Deprecated
  optional string location = 10;

  // +optional
  optional string lockDuration = 11;

  // +optional
  optional int64 maxDeliveryCount = 12;

  // +optional
  optional int64 maxSizeInMegabytes = 13;

  optional string name = 14;

  optional string namespaceName = 15;

  // +optional
  optional bool requiresDuplicateDetection = 16;

  // +optional
  optional bool requiresSession = 17;

  optional string resourceGroupName = 18;

  // +optional
  // Deprecated
  optional bool supportOrdering = 19;
}

message ServicebusQueueStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional ServicebusQueueSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message ServicebusSubscription {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional ServicebusSubscriptionSpec spec = 2;

  optional ServicebusSubscriptionStatus status = 3;
}

// ServicebusSubscriptionList is a list of ServicebusSubscriptions
message ServicebusSubscriptionList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of ServicebusSubscription CRD objects
  repeated ServicebusSubscription items = 2;
}

message ServicebusSubscriptionRule {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional ServicebusSubscriptionRuleSpec spec = 2;

  optional ServicebusSubscriptionRuleStatus status = 3;
}

// ServicebusSubscriptionRuleList is a list of ServicebusSubscriptionRules
message ServicebusSubscriptionRuleList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of ServicebusSubscriptionRule CRD objects
  repeated ServicebusSubscriptionRule items = 2;
}

message ServicebusSubscriptionRuleSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  optional string action = 3;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated ServicebusSubscriptionRuleSpecCorrelationFilter correlationFilter = 4;

  optional string filterType = 5;

  optional string name = 6;

  optional string namespaceName = 7;

  optional string resourceGroupName = 8;

  // +optional
  optional string sqlFilter = 9;

  optional string subscriptionName = 10;

  optional string topicName = 11;
}

message ServicebusSubscriptionRuleSpecCorrelationFilter {
  // +optional
  optional string contentType = 1;

  // +optional
  optional string correlationID = 2;

  // +optional
  optional string label = 3;

  // +optional
  optional string messageID = 4;

  // +optional
  optional string replyTo = 5;

  // +optional
  optional string replyToSessionID = 6;

  // +optional
  optional string sessionID = 7;

  // +optional
  optional string to = 8;
}

message ServicebusSubscriptionRuleStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional ServicebusSubscriptionRuleSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message ServicebusSubscriptionSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  optional string autoDeleteOnIdle = 3;

  // +optional
  // Deprecated
  optional bool deadLetteringOnFilterEvaluationExceptions = 4;

  // +optional
  optional bool deadLetteringOnMessageExpiration = 5;

  // +optional
  optional string defaultMessageTtl = 6;

  // +optional
  optional bool enableBatchedOperations = 7;

  // +optional
  optional string forwardTo = 8;

  // +optional
  // Deprecated
  optional string location = 9;

  // +optional
  optional string lockDuration = 10;

  optional int64 maxDeliveryCount = 11;

  optional string name = 12;

  optional string namespaceName = 13;

  // +optional
  optional bool requiresSession = 14;

  optional string resourceGroupName = 15;

  optional string topicName = 16;
}

message ServicebusSubscriptionStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional ServicebusSubscriptionSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message ServicebusTopic {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional ServicebusTopicSpec spec = 2;

  optional ServicebusTopicStatus status = 3;
}

message ServicebusTopicAuthorizationRule {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional ServicebusTopicAuthorizationRuleSpec spec = 2;

  optional ServicebusTopicAuthorizationRuleStatus status = 3;
}

// ServicebusTopicAuthorizationRuleList is a list of ServicebusTopicAuthorizationRules
message ServicebusTopicAuthorizationRuleList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of ServicebusTopicAuthorizationRule CRD objects
  repeated ServicebusTopicAuthorizationRule items = 2;
}

message ServicebusTopicAuthorizationRuleSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional k8s.io.api.core.v1.LocalObjectReference secretRef = 3;

  // +optional
  optional bool listen = 4;

  // +optional
  optional bool manage = 5;

  optional string name = 6;

  optional string namespaceName = 7;

  optional string resourceGroupName = 8;

  // +optional
  optional bool send = 9;

  optional string topicName = 10;
}

message ServicebusTopicAuthorizationRuleStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional ServicebusTopicAuthorizationRuleSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

// ServicebusTopicList is a list of ServicebusTopics
message ServicebusTopicList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of ServicebusTopic CRD objects
  repeated ServicebusTopic items = 2;
}

message ServicebusTopicSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  optional string autoDeleteOnIdle = 3;

  // +optional
  optional string defaultMessageTtl = 4;

  // +optional
  optional string duplicateDetectionHistoryTimeWindow = 5;

  // +optional
  optional bool enableBatchedOperations = 6;

  // +optional
  optional bool enableExpress = 7;

  // +optional
  // Deprecated
  optional bool enableFilteringMessagesBeforePublishing = 8;

  // +optional
  optional bool enablePartitioning = 9;

  // +optional
  // Deprecated
  optional string location = 10;

  // +optional
  optional int64 maxSizeInMegabytes = 11;

  optional string name = 12;

  optional string namespaceName = 13;

  // +optional
  optional bool requiresDuplicateDetection = 14;

  optional string resourceGroupName = 15;

  // +optional
  optional string status = 16;

  // +optional
  optional bool supportOrdering = 17;
}

message ServicebusTopicStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional ServicebusTopicSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message SharedImage {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional SharedImageSpec spec = 2;

  optional SharedImageStatus status = 3;
}

message SharedImageGallery {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional SharedImageGallerySpec spec = 2;

  optional SharedImageGalleryStatus status = 3;
}

// SharedImageGalleryList is a list of SharedImageGallerys
message SharedImageGalleryList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of SharedImageGallery CRD objects
  repeated SharedImageGallery items = 2;
}

message SharedImageGallerySpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  optional string description = 3;

  optional string location = 4;

  optional string name = 5;

  optional string resourceGroupName = 6;

  // +optional
  map<string, string> tags = 7;

  // +optional
  optional string uniqueName = 8;
}

message SharedImageGalleryStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional SharedImageGallerySpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

// SharedImageList is a list of SharedImages
message SharedImageList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of SharedImage CRD objects
  repeated SharedImage items = 2;
}

message SharedImageSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  optional string description = 3;

  // +optional
  optional string eula = 4;

  optional string galleryName = 5;

  // +kubebuilder:validation:MaxItems=1
  repeated SharedImageSpecIdentifier identifier = 6;

  optional string location = 7;

  optional string name = 8;

  optional string osType = 9;

  // +optional
  optional string privacyStatementURI = 10;

  // +optional
  optional string releaseNoteURI = 11;

  optional string resourceGroupName = 12;

  // +optional
  map<string, string> tags = 13;
}

message SharedImageSpecIdentifier {
  optional string offer = 1;

  optional string publisher = 2;

  optional string sku = 3;
}

message SharedImageStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional SharedImageSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message SharedImageVersion {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional SharedImageVersionSpec spec = 2;

  optional SharedImageVersionStatus status = 3;
}

// SharedImageVersionList is a list of SharedImageVersions
message SharedImageVersionList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of SharedImageVersion CRD objects
  repeated SharedImageVersion items = 2;
}

message SharedImageVersionSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  optional bool excludeFromLatest = 3;

  optional string galleryName = 4;

  optional string imageName = 5;

  optional string location = 6;

  optional string managedImageID = 7;

  optional string name = 8;

  optional string resourceGroupName = 9;

  // +optional
  map<string, string> tags = 10;

  repeated SharedImageVersionSpecTargetRegion targetRegion = 11;
}

message SharedImageVersionSpecTargetRegion {
  optional string name = 1;

  optional int64 regionalReplicaCount = 2;
}

message SharedImageVersionStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional SharedImageVersionSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message SignalrService {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional SignalrServiceSpec spec = 2;

  optional SignalrServiceStatus status = 3;
}

// SignalrServiceList is a list of SignalrServices
message SignalrServiceList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of SignalrService CRD objects
  repeated SignalrService items = 2;
}

message SignalrServiceSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional k8s.io.api.core.v1.LocalObjectReference secretRef = 3;

  // +optional
  optional string hostname = 4;

  // +optional
  optional string ipAddress = 5;

  optional string location = 6;

  optional string name = 7;

  // +optional
  optional int64 publicPort = 8;

  optional string resourceGroupName = 9;

  // +optional
  optional int64 serverPort = 10;

  // +kubebuilder:validation:MaxItems=1
  repeated SignalrServiceSpecSku sku = 11;

  // +optional
  map<string, string> tags = 12;
}

message SignalrServiceSpecSku {
  optional int64 capacity = 1;

  optional string name = 2;
}

message SignalrServiceStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional SignalrServiceSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message Snapshot {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional SnapshotSpec spec = 2;

  optional SnapshotStatus status = 3;
}

// SnapshotList is a list of Snapshots
message SnapshotList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of Snapshot CRD objects
  repeated Snapshot items = 2;
}

message SnapshotSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string createOption = 3;

  // +optional
  optional int64 diskSizeGb = 4;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated SnapshotSpecEncryptionSettings encryptionSettings = 5;

  optional string location = 6;

  optional string name = 7;

  optional string resourceGroupName = 8;

  // +optional
  optional string sourceResourceID = 9;

  // +optional
  optional string sourceURI = 10;

  // +optional
  optional string storageAccountID = 11;

  // +optional
  map<string, string> tags = 12;
}

message SnapshotSpecEncryptionSettings {
  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated SnapshotSpecEncryptionSettingsDiskEncryptionKey diskEncryptionKey = 1;

  optional bool enabled = 2;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated SnapshotSpecEncryptionSettingsKeyEncryptionKey keyEncryptionKey = 3;
}

message SnapshotSpecEncryptionSettingsDiskEncryptionKey {
  optional string secretURL = 1;

  optional string sourceVaultID = 2;
}

message SnapshotSpecEncryptionSettingsKeyEncryptionKey {
  optional string keyURL = 1;

  optional string sourceVaultID = 2;
}

message SnapshotStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional SnapshotSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message SqlActiveDirectoryAdministrator {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional SqlActiveDirectoryAdministratorSpec spec = 2;

  optional SqlActiveDirectoryAdministratorStatus status = 3;
}

// SqlActiveDirectoryAdministratorList is a list of SqlActiveDirectoryAdministrators
message SqlActiveDirectoryAdministratorList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of SqlActiveDirectoryAdministrator CRD objects
  repeated SqlActiveDirectoryAdministrator items = 2;
}

message SqlActiveDirectoryAdministratorSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string login = 3;

  optional string objectID = 4;

  optional string resourceGroupName = 5;

  optional string serverName = 6;

  optional string tenantID = 7;
}

message SqlActiveDirectoryAdministratorStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional SqlActiveDirectoryAdministratorSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message SqlDatabase {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional SqlDatabaseSpec spec = 2;

  optional SqlDatabaseStatus status = 3;
}

// SqlDatabaseList is a list of SqlDatabases
message SqlDatabaseList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of SqlDatabase CRD objects
  repeated SqlDatabase items = 2;
}

message SqlDatabaseSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional k8s.io.api.core.v1.LocalObjectReference secretRef = 3;

  // +optional
  optional string collation = 4;

  // +optional
  optional string createMode = 5;

  // +optional
  optional string creationDate = 6;

  // +optional
  optional string defaultSecondaryLocation = 7;

  // +optional
  optional string edition = 8;

  // +optional
  optional string elasticPoolName = 9;

  // +optional
  optional string encryption = 10;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated SqlDatabaseSpecImport import = 11;

  optional string location = 12;

  // +optional
  optional string maxSizeBytes = 13;

  optional string name = 14;

  // +optional
  optional bool readScale = 15;

  // +optional
  optional string requestedServiceObjectiveID = 16;

  // +optional
  optional string requestedServiceObjectiveName = 17;

  optional string resourceGroupName = 18;

  // +optional
  optional string restorePointInTime = 19;

  optional string serverName = 20;

  // +optional
  optional string sourceDatabaseDeletionDate = 21;

  // +optional
  optional string sourceDatabaseID = 22;

  // +optional
  map<string, string> tags = 23;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated SqlDatabaseSpecThreatDetectionPolicy threatDetectionPolicy = 24;
}

message SqlDatabaseSpecImport {
  optional string administratorLogin = 1;

  optional string authenticationType = 2;

  // +optional
  optional string operationMode = 3;

  optional string storageKeyType = 4;

  optional string storageURI = 5;
}

message SqlDatabaseSpecThreatDetectionPolicy {
  // +optional
  repeated string disabledAlerts = 1;

  // +optional
  optional string emailAccountAdmins = 2;

  // +optional
  repeated string emailAddresses = 3;

  // +optional
  optional int64 retentionDays = 4;

  // +optional
  optional string state = 5;

  // +optional
  optional string storageEndpoint = 6;

  // +optional
  optional string useServerDefault = 7;
}

message SqlDatabaseStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional SqlDatabaseSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message SqlElasticpool {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional SqlElasticpoolSpec spec = 2;

  optional SqlElasticpoolStatus status = 3;
}

// SqlElasticpoolList is a list of SqlElasticpools
message SqlElasticpoolList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of SqlElasticpool CRD objects
  repeated SqlElasticpool items = 2;
}

message SqlElasticpoolSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  optional string creationDate = 3;

  // +optional
  optional int64 dbDtuMax = 4;

  // +optional
  optional int64 dbDtuMin = 5;

  optional int64 dtu = 6;

  optional string edition = 7;

  optional string location = 8;

  optional string name = 9;

  // +optional
  optional int64 poolSize = 10;

  optional string resourceGroupName = 11;

  optional string serverName = 12;

  // +optional
  map<string, string> tags = 13;
}

message SqlElasticpoolStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional SqlElasticpoolSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message SqlFirewallRule {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional SqlFirewallRuleSpec spec = 2;

  optional SqlFirewallRuleStatus status = 3;
}

// SqlFirewallRuleList is a list of SqlFirewallRules
message SqlFirewallRuleList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of SqlFirewallRule CRD objects
  repeated SqlFirewallRule items = 2;
}

message SqlFirewallRuleSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string endIPAddress = 3;

  optional string name = 4;

  optional string resourceGroupName = 5;

  optional string serverName = 6;

  optional string startIPAddress = 7;
}

message SqlFirewallRuleStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional SqlFirewallRuleSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message SqlServer {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional SqlServerSpec spec = 2;

  optional SqlServerStatus status = 3;
}

// SqlServerList is a list of SqlServers
message SqlServerList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of SqlServer CRD objects
  repeated SqlServer items = 2;
}

message SqlServerSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional k8s.io.api.core.v1.LocalObjectReference secretRef = 3;

  optional string administratorLogin = 4;

  // +optional
  optional string fullyQualifiedDomainName = 5;

  optional string location = 6;

  optional string name = 7;

  optional string resourceGroupName = 8;

  // +optional
  map<string, string> tags = 9;

  optional string version = 10;
}

message SqlServerStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional SqlServerSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message SqlVirtualNetworkRule {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional SqlVirtualNetworkRuleSpec spec = 2;

  optional SqlVirtualNetworkRuleStatus status = 3;
}

// SqlVirtualNetworkRuleList is a list of SqlVirtualNetworkRules
message SqlVirtualNetworkRuleList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of SqlVirtualNetworkRule CRD objects
  repeated SqlVirtualNetworkRule items = 2;
}

message SqlVirtualNetworkRuleSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  optional bool ignoreMissingVnetServiceEndpoint = 3;

  optional string name = 4;

  optional string resourceGroupName = 5;

  optional string serverName = 6;

  optional string subnetID = 7;
}

message SqlVirtualNetworkRuleStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional SqlVirtualNetworkRuleSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message StorageAccount {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional StorageAccountSpec spec = 2;

  optional StorageAccountStatus status = 3;
}

// StorageAccountList is a list of StorageAccounts
message StorageAccountList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of StorageAccount CRD objects
  repeated StorageAccount items = 2;
}

message StorageAccountSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional k8s.io.api.core.v1.LocalObjectReference secretRef = 3;

  // +optional
  optional string accessTier = 4;

  // +optional
  optional string accountEncryptionSource = 5;

  // +optional
  optional string accountKind = 6;

  optional string accountReplicationType = 7;

  optional string accountTier = 8;

  // +optional
  // Deprecated
  optional string accountType = 9;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated StorageAccountSpecCustomDomain customDomain = 10;

  // +optional
  optional bool enableAdvancedThreatProtection = 11;

  // +optional
  optional bool enableBlobEncryption = 12;

  // +optional
  optional bool enableFileEncryption = 13;

  // +optional
  optional bool enableHTTPSTrafficOnly = 14;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated StorageAccountSpecIdentity identity = 15;

  // +optional
  optional bool isHnsEnabled = 16;

  optional string location = 17;

  optional string name = 18;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated StorageAccountSpecNetworkRules networkRules = 19;

  // +optional
  optional string primaryBlobEndpoint = 20;

  // +optional
  optional string primaryBlobHost = 21;

  // +optional
  optional string primaryDfsEndpoint = 22;

  // +optional
  optional string primaryDfsHost = 23;

  // +optional
  optional string primaryFileEndpoint = 24;

  // +optional
  optional string primaryFileHost = 25;

  // +optional
  optional string primaryLocation = 26;

  // +optional
  optional string primaryQueueEndpoint = 27;

  // +optional
  optional string primaryQueueHost = 28;

  // +optional
  optional string primaryTableEndpoint = 29;

  // +optional
  optional string primaryTableHost = 30;

  // +optional
  optional string primaryWebEndpoint = 31;

  // +optional
  optional string primaryWebHost = 32;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated StorageAccountSpecQueueProperties queueProperties = 33;

  optional string resourceGroupName = 34;

  // +optional
  optional string secondaryBlobEndpoint = 35;

  // +optional
  optional string secondaryBlobHost = 36;

  // +optional
  optional string secondaryDfsEndpoint = 37;

  // +optional
  optional string secondaryDfsHost = 38;

  // +optional
  optional string secondaryFileEndpoint = 39;

  // +optional
  optional string secondaryFileHost = 40;

  // +optional
  optional string secondaryLocation = 41;

  // +optional
  optional string secondaryQueueEndpoint = 42;

  // +optional
  optional string secondaryQueueHost = 43;

  // +optional
  optional string secondaryTableEndpoint = 44;

  // +optional
  optional string secondaryTableHost = 45;

  // +optional
  optional string secondaryWebEndpoint = 46;

  // +optional
  optional string secondaryWebHost = 47;

  // +optional
  map<string, string> tags = 48;
}

message StorageAccountSpecCustomDomain {
  optional string name = 1;

  // +optional
  optional bool useSubdomain = 2;
}

message StorageAccountSpecIdentity {
  // +optional
  optional string principalID = 1;

  // +optional
  optional string tenantID = 2;

  optional string type = 3;
}

message StorageAccountSpecNetworkRules {
  // +optional
  repeated string bypass = 1;

  // +optional
  optional string defaultAction = 2;

  // +optional
  repeated string ipRules = 3;

  // +optional
  repeated string virtualNetworkSubnetIDS = 4;
}

message StorageAccountSpecQueueProperties {
  // +optional
  // +kubebuilder:validation:MaxItems=5
  repeated StorageAccountSpecQueuePropertiesCorsRule corsRule = 1;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated StorageAccountSpecQueuePropertiesHourMetrics hourMetrics = 2;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated StorageAccountSpecQueuePropertiesLogging logging = 3;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated StorageAccountSpecQueuePropertiesMinuteMetrics minuteMetrics = 4;
}

message StorageAccountSpecQueuePropertiesCorsRule {
  // +kubebuilder:validation:MaxItems=64
  repeated string allowedHeaders = 1;

  // +kubebuilder:validation:MaxItems=64
  repeated string allowedMethods = 2;

  // +kubebuilder:validation:MaxItems=64
  repeated string allowedOrigins = 3;

  // +kubebuilder:validation:MaxItems=64
  repeated string exposedHeaders = 4;

  optional int64 maxAgeInSeconds = 5;
}

message StorageAccountSpecQueuePropertiesHourMetrics {
  optional bool enabled = 1;

  // +optional
  optional bool includeApis = 2;

  // +optional
  optional int64 retentionPolicyDays = 3;

  optional string version = 4;
}

message StorageAccountSpecQueuePropertiesLogging {
  optional bool delete = 1;

  optional bool read = 2;

  // +optional
  optional int64 retentionPolicyDays = 3;

  optional string version = 4;

  optional bool write = 5;
}

message StorageAccountSpecQueuePropertiesMinuteMetrics {
  optional bool enabled = 1;

  // +optional
  optional bool includeApis = 2;

  // +optional
  optional int64 retentionPolicyDays = 3;

  optional string version = 4;
}

message StorageAccountStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional StorageAccountSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message StorageBlob {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional StorageBlobSpec spec = 2;

  optional StorageBlobStatus status = 3;
}

// StorageBlobList is a list of StorageBlobs
message StorageBlobList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of StorageBlob CRD objects
  repeated StorageBlob items = 2;
}

message StorageBlobSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  optional int64 attempts = 3;

  // +optional
  optional string contentType = 4;

  // +optional
  map<string, string> metadata = 5;

  optional string name = 6;

  // +optional
  optional int64 parallelism = 7;

  optional string resourceGroupName = 8;

  // +optional
  optional int64 size = 9;

  // +optional
  optional string source = 10;

  // +optional
  optional string sourceURI = 11;

  optional string storageAccountName = 12;

  optional string storageContainerName = 13;

  // +optional
  optional string type = 14;

  // +optional
  optional string url = 15;
}

message StorageBlobStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional StorageBlobSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message StorageContainer {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional StorageContainerSpec spec = 2;

  optional StorageContainerStatus status = 3;
}

// StorageContainerList is a list of StorageContainers
message StorageContainerList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of StorageContainer CRD objects
  repeated StorageContainer items = 2;
}

message StorageContainerSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  optional string containerAccessType = 3;

  // +optional
  optional bool hasImmutabilityPolicy = 4;

  // +optional
  optional bool hasLegalHold = 5;

  // +optional
  map<string, string> metadata = 6;

  optional string name = 7;

  // +optional
  // Deprecated
  map<string, string> properties = 8;

  // +optional
  // Deprecated
  optional string resourceGroupName = 9;

  optional string storageAccountName = 10;
}

message StorageContainerStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional StorageContainerSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message StorageQueue {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional StorageQueueSpec spec = 2;

  optional StorageQueueStatus status = 3;
}

// StorageQueueList is a list of StorageQueues
message StorageQueueList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of StorageQueue CRD objects
  repeated StorageQueue items = 2;
}

message StorageQueueSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  map<string, string> metadata = 3;

  optional string name = 4;

  // +optional
  // Deprecated
  optional string resourceGroupName = 5;

  optional string storageAccountName = 6;
}

message StorageQueueStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional StorageQueueSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message StorageShare {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional StorageShareSpec spec = 2;

  optional StorageShareStatus status = 3;
}

message StorageShareDirectory {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional StorageShareDirectorySpec spec = 2;

  optional StorageShareDirectoryStatus status = 3;
}

// StorageShareDirectoryList is a list of StorageShareDirectorys
message StorageShareDirectoryList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of StorageShareDirectory CRD objects
  repeated StorageShareDirectory items = 2;
}

message StorageShareDirectorySpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  map<string, string> metadata = 3;

  optional string name = 4;

  optional string shareName = 5;

  optional string storageAccountName = 6;
}

message StorageShareDirectoryStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional StorageShareDirectorySpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

// StorageShareList is a list of StorageShares
message StorageShareList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of StorageShare CRD objects
  repeated StorageShare items = 2;
}

message StorageShareSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  repeated StorageShareSpecAcl acl = 3;

  // +optional
  map<string, string> metadata = 4;

  optional string name = 5;

  // +optional
  optional int64 quota = 6;

  // +optional
  // Deprecated
  optional string resourceGroupName = 7;

  optional string storageAccountName = 8;

  // +optional
  optional string url = 9;
}

message StorageShareSpecAcl {
  // +optional
  repeated StorageShareSpecAclAccessPolicy accessPolicy = 1;

  optional string ID = 2;
}

message StorageShareSpecAclAccessPolicy {
  optional string expiry = 1;

  optional string permissions = 2;

  optional string start = 3;
}

message StorageShareStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional StorageShareSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message StorageTable {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional StorageTableSpec spec = 2;

  optional StorageTableStatus status = 3;
}

message StorageTableEntity {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional StorageTableEntitySpec spec = 2;

  optional StorageTableEntityStatus status = 3;
}

// StorageTableEntityList is a list of StorageTableEntitys
message StorageTableEntityList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of StorageTableEntity CRD objects
  repeated StorageTableEntity items = 2;
}

message StorageTableEntitySpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  map<string, string> entity = 3;

  optional string partitionKey = 4;

  optional string rowKey = 5;

  optional string storageAccountName = 6;

  optional string tableName = 7;
}

message StorageTableEntityStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional StorageTableEntitySpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

// StorageTableList is a list of StorageTables
message StorageTableList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of StorageTable CRD objects
  repeated StorageTable items = 2;
}

message StorageTableSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  repeated StorageTableSpecAcl acl = 3;

  optional string name = 4;

  // +optional
  // Deprecated
  optional string resourceGroupName = 5;

  optional string storageAccountName = 6;
}

message StorageTableSpecAcl {
  // +optional
  repeated StorageTableSpecAclAccessPolicy accessPolicy = 1;

  optional string ID = 2;
}

message StorageTableSpecAclAccessPolicy {
  optional string expiry = 1;

  optional string permissions = 2;

  optional string start = 3;
}

message StorageTableStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional StorageTableSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message StreamAnalyticsFunctionJavascriptUdf {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional StreamAnalyticsFunctionJavascriptUdfSpec spec = 2;

  optional StreamAnalyticsFunctionJavascriptUdfStatus status = 3;
}

// StreamAnalyticsFunctionJavascriptUdfList is a list of StreamAnalyticsFunctionJavascriptUdfs
message StreamAnalyticsFunctionJavascriptUdfList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of StreamAnalyticsFunctionJavascriptUdf CRD objects
  repeated StreamAnalyticsFunctionJavascriptUdf items = 2;
}

message StreamAnalyticsFunctionJavascriptUdfSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +kubebuilder:validation:MinItems=1
  repeated StreamAnalyticsFunctionJavascriptUdfSpecInput input = 3;

  optional string name = 4;

  // +kubebuilder:validation:MaxItems=1
  repeated StreamAnalyticsFunctionJavascriptUdfSpecOutput output = 5;

  optional string resourceGroupName = 6;

  optional string script = 7;

  optional string streamAnalyticsJobName = 8;
}

message StreamAnalyticsFunctionJavascriptUdfSpecInput {
  optional string type = 1;
}

message StreamAnalyticsFunctionJavascriptUdfSpecOutput {
  optional string type = 1;
}

message StreamAnalyticsFunctionJavascriptUdfStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional StreamAnalyticsFunctionJavascriptUdfSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message StreamAnalyticsJob {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional StreamAnalyticsJobSpec spec = 2;

  optional StreamAnalyticsJobStatus status = 3;
}

// StreamAnalyticsJobList is a list of StreamAnalyticsJobs
message StreamAnalyticsJobList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of StreamAnalyticsJob CRD objects
  repeated StreamAnalyticsJob items = 2;
}

message StreamAnalyticsJobSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string compatibilityLevel = 3;

  optional string dataLocale = 4;

  optional int64 eventsLateArrivalMaxDelayInSeconds = 5;

  optional int64 eventsOutOfOrderMaxDelayInSeconds = 6;

  optional string eventsOutOfOrderPolicy = 7;

  // +optional
  optional string jobID = 8;

  optional string location = 9;

  optional string name = 10;

  optional string outputErrorPolicy = 11;

  optional string resourceGroupName = 12;

  optional int64 streamingUnits = 13;

  // +optional
  map<string, string> tags = 14;

  optional string transformationQuery = 15;
}

message StreamAnalyticsJobStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional StreamAnalyticsJobSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message StreamAnalyticsOutputBlob {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional StreamAnalyticsOutputBlobSpec spec = 2;

  optional StreamAnalyticsOutputBlobStatus status = 3;
}

// StreamAnalyticsOutputBlobList is a list of StreamAnalyticsOutputBlobs
message StreamAnalyticsOutputBlobList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of StreamAnalyticsOutputBlob CRD objects
  repeated StreamAnalyticsOutputBlob items = 2;
}

message StreamAnalyticsOutputBlobSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional k8s.io.api.core.v1.LocalObjectReference secretRef = 3;

  optional string dateFormat = 4;

  optional string name = 5;

  optional string pathPattern = 6;

  optional string resourceGroupName = 7;

  // +kubebuilder:validation:MaxItems=1
  repeated StreamAnalyticsOutputBlobSpecSerialization serialization = 8;

  optional string storageAccountName = 9;

  optional string storageContainerName = 10;

  optional string streamAnalyticsJobName = 11;

  optional string timeFormat = 12;
}

message StreamAnalyticsOutputBlobSpecSerialization {
  // +optional
  optional string encoding = 1;

  // +optional
  optional string fieldDelimiter = 2;

  // +optional
  optional string format = 3;

  optional string type = 4;
}

message StreamAnalyticsOutputBlobStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional StreamAnalyticsOutputBlobSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message StreamAnalyticsOutputEventhub {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional StreamAnalyticsOutputEventhubSpec spec = 2;

  optional StreamAnalyticsOutputEventhubStatus status = 3;
}

// StreamAnalyticsOutputEventhubList is a list of StreamAnalyticsOutputEventhubs
message StreamAnalyticsOutputEventhubList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of StreamAnalyticsOutputEventhub CRD objects
  repeated StreamAnalyticsOutputEventhub items = 2;
}

message StreamAnalyticsOutputEventhubSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional k8s.io.api.core.v1.LocalObjectReference secretRef = 3;

  optional string eventhubName = 4;

  optional string name = 5;

  optional string resourceGroupName = 6;

  // +kubebuilder:validation:MaxItems=1
  repeated StreamAnalyticsOutputEventhubSpecSerialization serialization = 7;

  optional string servicebusNamespace = 8;

  optional string sharedAccessPolicyName = 9;

  optional string streamAnalyticsJobName = 10;
}

message StreamAnalyticsOutputEventhubSpecSerialization {
  // +optional
  optional string encoding = 1;

  // +optional
  optional string fieldDelimiter = 2;

  // +optional
  optional string format = 3;

  optional string type = 4;
}

message StreamAnalyticsOutputEventhubStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional StreamAnalyticsOutputEventhubSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message StreamAnalyticsOutputMssql {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional StreamAnalyticsOutputMssqlSpec spec = 2;

  optional StreamAnalyticsOutputMssqlStatus status = 3;
}

// StreamAnalyticsOutputMssqlList is a list of StreamAnalyticsOutputMssqls
message StreamAnalyticsOutputMssqlList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of StreamAnalyticsOutputMssql CRD objects
  repeated StreamAnalyticsOutputMssql items = 2;
}

message StreamAnalyticsOutputMssqlSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional k8s.io.api.core.v1.LocalObjectReference secretRef = 3;

  optional string database = 4;

  optional string name = 5;

  optional string resourceGroupName = 6;

  optional string server = 7;

  optional string streamAnalyticsJobName = 8;

  optional string table = 9;

  optional string user = 10;
}

message StreamAnalyticsOutputMssqlStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional StreamAnalyticsOutputMssqlSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message StreamAnalyticsOutputServicebusQueue {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional StreamAnalyticsOutputServicebusQueueSpec spec = 2;

  optional StreamAnalyticsOutputServicebusQueueStatus status = 3;
}

// StreamAnalyticsOutputServicebusQueueList is a list of StreamAnalyticsOutputServicebusQueues
message StreamAnalyticsOutputServicebusQueueList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of StreamAnalyticsOutputServicebusQueue CRD objects
  repeated StreamAnalyticsOutputServicebusQueue items = 2;
}

message StreamAnalyticsOutputServicebusQueueSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional k8s.io.api.core.v1.LocalObjectReference secretRef = 3;

  optional string name = 4;

  optional string queueName = 5;

  optional string resourceGroupName = 6;

  // +kubebuilder:validation:MaxItems=1
  repeated StreamAnalyticsOutputServicebusQueueSpecSerialization serialization = 7;

  optional string servicebusNamespace = 8;

  optional string sharedAccessPolicyName = 9;

  optional string streamAnalyticsJobName = 10;
}

message StreamAnalyticsOutputServicebusQueueSpecSerialization {
  // +optional
  optional string encoding = 1;

  // +optional
  optional string fieldDelimiter = 2;

  // +optional
  optional string format = 3;

  optional string type = 4;
}

message StreamAnalyticsOutputServicebusQueueStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional StreamAnalyticsOutputServicebusQueueSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message StreamAnalyticsStreamInputBlob {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional StreamAnalyticsStreamInputBlobSpec spec = 2;

  optional StreamAnalyticsStreamInputBlobStatus status = 3;
}

// StreamAnalyticsStreamInputBlobList is a list of StreamAnalyticsStreamInputBlobs
message StreamAnalyticsStreamInputBlobList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of StreamAnalyticsStreamInputBlob CRD objects
  repeated StreamAnalyticsStreamInputBlob items = 2;
}

message StreamAnalyticsStreamInputBlobSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional k8s.io.api.core.v1.LocalObjectReference secretRef = 3;

  optional string dateFormat = 4;

  optional string name = 5;

  optional string pathPattern = 6;

  optional string resourceGroupName = 7;

  // +kubebuilder:validation:MaxItems=1
  repeated StreamAnalyticsStreamInputBlobSpecSerialization serialization = 8;

  optional string storageAccountName = 9;

  optional string storageContainerName = 10;

  optional string streamAnalyticsJobName = 11;

  optional string timeFormat = 12;
}

message StreamAnalyticsStreamInputBlobSpecSerialization {
  // +optional
  optional string encoding = 1;

  // +optional
  optional string fieldDelimiter = 2;

  optional string type = 3;
}

message StreamAnalyticsStreamInputBlobStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional StreamAnalyticsStreamInputBlobSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message StreamAnalyticsStreamInputEventhub {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional StreamAnalyticsStreamInputEventhubSpec spec = 2;

  optional StreamAnalyticsStreamInputEventhubStatus status = 3;
}

// StreamAnalyticsStreamInputEventhubList is a list of StreamAnalyticsStreamInputEventhubs
message StreamAnalyticsStreamInputEventhubList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of StreamAnalyticsStreamInputEventhub CRD objects
  repeated StreamAnalyticsStreamInputEventhub items = 2;
}

message StreamAnalyticsStreamInputEventhubSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional k8s.io.api.core.v1.LocalObjectReference secretRef = 3;

  optional string eventhubConsumerGroupName = 4;

  optional string eventhubName = 5;

  optional string name = 6;

  optional string resourceGroupName = 7;

  // +kubebuilder:validation:MaxItems=1
  repeated StreamAnalyticsStreamInputEventhubSpecSerialization serialization = 8;

  optional string servicebusNamespace = 9;

  optional string sharedAccessPolicyName = 10;

  optional string streamAnalyticsJobName = 11;
}

message StreamAnalyticsStreamInputEventhubSpecSerialization {
  // +optional
  optional string encoding = 1;

  // +optional
  optional string fieldDelimiter = 2;

  optional string type = 3;
}

message StreamAnalyticsStreamInputEventhubStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional StreamAnalyticsStreamInputEventhubSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message StreamAnalyticsStreamInputIothub {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional StreamAnalyticsStreamInputIothubSpec spec = 2;

  optional StreamAnalyticsStreamInputIothubStatus status = 3;
}

// StreamAnalyticsStreamInputIothubList is a list of StreamAnalyticsStreamInputIothubs
message StreamAnalyticsStreamInputIothubList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of StreamAnalyticsStreamInputIothub CRD objects
  repeated StreamAnalyticsStreamInputIothub items = 2;
}

message StreamAnalyticsStreamInputIothubSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional k8s.io.api.core.v1.LocalObjectReference secretRef = 3;

  optional string endpoint = 4;

  optional string eventhubConsumerGroupName = 5;

  optional string iothubNamespace = 6;

  optional string name = 7;

  optional string resourceGroupName = 8;

  // +kubebuilder:validation:MaxItems=1
  repeated StreamAnalyticsStreamInputIothubSpecSerialization serialization = 9;

  optional string sharedAccessPolicyName = 10;

  optional string streamAnalyticsJobName = 11;
}

message StreamAnalyticsStreamInputIothubSpecSerialization {
  // +optional
  optional string encoding = 1;

  // +optional
  optional string fieldDelimiter = 2;

  optional string type = 3;
}

message StreamAnalyticsStreamInputIothubStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional StreamAnalyticsStreamInputIothubSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message Subnet {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional SubnetSpec spec = 2;

  optional SubnetStatus status = 3;
}

// SubnetList is a list of Subnets
message SubnetList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of Subnet CRD objects
  repeated Subnet items = 2;
}

message SubnetNetworkSecurityGroupAssociation {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional SubnetNetworkSecurityGroupAssociationSpec spec = 2;

  optional SubnetNetworkSecurityGroupAssociationStatus status = 3;
}

// SubnetNetworkSecurityGroupAssociationList is a list of SubnetNetworkSecurityGroupAssociations
message SubnetNetworkSecurityGroupAssociationList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of SubnetNetworkSecurityGroupAssociation CRD objects
  repeated SubnetNetworkSecurityGroupAssociation items = 2;
}

message SubnetNetworkSecurityGroupAssociationSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string networkSecurityGroupID = 3;

  optional string subnetID = 4;
}

message SubnetNetworkSecurityGroupAssociationStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional SubnetNetworkSecurityGroupAssociationSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message SubnetRouteTableAssociation {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional SubnetRouteTableAssociationSpec spec = 2;

  optional SubnetRouteTableAssociationStatus status = 3;
}

// SubnetRouteTableAssociationList is a list of SubnetRouteTableAssociations
message SubnetRouteTableAssociationList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of SubnetRouteTableAssociation CRD objects
  repeated SubnetRouteTableAssociation items = 2;
}

message SubnetRouteTableAssociationSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string routeTableID = 3;

  optional string subnetID = 4;
}

message SubnetRouteTableAssociationStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional SubnetRouteTableAssociationSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message SubnetSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string addressPrefix = 3;

  // +optional
  repeated SubnetSpecDelegation delegation = 4;

  // +optional
  repeated string ipConfigurations = 5;

  optional string name = 6;

  // +optional
  // Deprecated
  optional string networkSecurityGroupID = 7;

  optional string resourceGroupName = 8;

  // +optional
  // Deprecated
  optional string routeTableID = 9;

  // +optional
  repeated string serviceEndpoints = 10;

  optional string virtualNetworkName = 11;
}

message SubnetSpecDelegation {
  optional string name = 1;

  // +kubebuilder:validation:MaxItems=1
  repeated SubnetSpecDelegationServiceDelegation serviceDelegation = 2;
}

message SubnetSpecDelegationServiceDelegation {
  // +optional
  repeated string actions = 1;

  optional string name = 2;
}

message SubnetStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional SubnetSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message TemplateDeployment {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional TemplateDeploymentSpec spec = 2;

  optional TemplateDeploymentStatus status = 3;
}

// TemplateDeploymentList is a list of TemplateDeployments
message TemplateDeploymentList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of TemplateDeployment CRD objects
  repeated TemplateDeployment items = 2;
}

message TemplateDeploymentSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string deploymentMode = 3;

  optional string name = 4;

  // +optional
  map<string, string> outputs = 5;

  // +optional
  map<string, string> parameters = 6;

  // +optional
  optional string parametersBody = 7;

  optional string resourceGroupName = 8;

  // +optional
  optional string templateBody = 9;
}

message TemplateDeploymentStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional TemplateDeploymentSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message TrafficManagerEndpoint {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional TrafficManagerEndpointSpec spec = 2;

  optional TrafficManagerEndpointStatus status = 3;
}

// TrafficManagerEndpointList is a list of TrafficManagerEndpoints
message TrafficManagerEndpointList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of TrafficManagerEndpoint CRD objects
  repeated TrafficManagerEndpoint items = 2;
}

message TrafficManagerEndpointSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  repeated TrafficManagerEndpointSpecCustomHeader customHeader = 3;

  // +optional
  optional string endpointLocation = 4;

  // +optional
  optional string endpointMonitorStatus = 5;

  // +optional
  optional string endpointStatus = 6;

  // +optional
  repeated string geoMappings = 7;

  // +optional
  optional int64 minChildEndpoints = 8;

  optional string name = 9;

  // +optional
  optional int64 priority = 10;

  optional string profileName = 11;

  optional string resourceGroupName = 12;

  // +optional
  repeated TrafficManagerEndpointSpecSubnet subnet = 13;

  // +optional
  optional string target = 14;

  // +optional
  optional string targetResourceID = 15;

  optional string type = 16;

  // +optional
  optional int64 weight = 17;
}

message TrafficManagerEndpointSpecCustomHeader {
  optional string name = 1;

  optional string value = 2;
}

message TrafficManagerEndpointSpecSubnet {
  optional string first = 1;

  // +optional
  optional string last = 2;

  // +optional
  optional int64 scope = 3;
}

message TrafficManagerEndpointStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional TrafficManagerEndpointSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message TrafficManagerProfile {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional TrafficManagerProfileSpec spec = 2;

  optional TrafficManagerProfileStatus status = 3;
}

// TrafficManagerProfileList is a list of TrafficManagerProfiles
message TrafficManagerProfileList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of TrafficManagerProfile CRD objects
  repeated TrafficManagerProfile items = 2;
}

message TrafficManagerProfileSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  repeated TrafficManagerProfileSpecDnsConfig dnsConfig = 3;

  // +optional
  optional string fqdn = 4;

  repeated TrafficManagerProfileSpecMonitorConfig monitorConfig = 5;

  optional string name = 6;

  // +optional
  optional string profileStatus = 7;

  optional string resourceGroupName = 8;

  // +optional
  map<string, string> tags = 9;

  optional string trafficRoutingMethod = 10;
}

message TrafficManagerProfileSpecDnsConfig {
  optional string relativeName = 1;

  optional int64 ttl = 2;
}

message TrafficManagerProfileSpecMonitorConfig {
  // +optional
  optional string path = 1;

  optional int64 port = 2;

  optional string protocol = 3;
}

message TrafficManagerProfileStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional TrafficManagerProfileSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message UserAssignedIdentity {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional UserAssignedIdentitySpec spec = 2;

  optional UserAssignedIdentityStatus status = 3;
}

// UserAssignedIdentityList is a list of UserAssignedIdentitys
message UserAssignedIdentityList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of UserAssignedIdentity CRD objects
  repeated UserAssignedIdentity items = 2;
}

message UserAssignedIdentitySpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  optional string clientID = 3;

  optional string location = 4;

  optional string name = 5;

  // +optional
  optional string principalID = 6;

  optional string resourceGroupName = 7;

  // +optional
  map<string, string> tags = 8;
}

message UserAssignedIdentityStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional UserAssignedIdentitySpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message VirtualMachine {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional VirtualMachineSpec spec = 2;

  optional VirtualMachineStatus status = 3;
}

message VirtualMachineDataDiskAttachment {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional VirtualMachineDataDiskAttachmentSpec spec = 2;

  optional VirtualMachineDataDiskAttachmentStatus status = 3;
}

// VirtualMachineDataDiskAttachmentList is a list of VirtualMachineDataDiskAttachments
message VirtualMachineDataDiskAttachmentList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of VirtualMachineDataDiskAttachment CRD objects
  repeated VirtualMachineDataDiskAttachment items = 2;
}

message VirtualMachineDataDiskAttachmentSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string caching = 3;

  // +optional
  optional string createOption = 4;

  optional int64 lun = 5;

  optional string managedDiskID = 6;

  optional string virtualMachineID = 7;

  // +optional
  optional bool writeAcceleratorEnabled = 8;
}

message VirtualMachineDataDiskAttachmentStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional VirtualMachineDataDiskAttachmentSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message VirtualMachineExtension {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional VirtualMachineExtensionSpec spec = 2;

  optional VirtualMachineExtensionStatus status = 3;
}

// VirtualMachineExtensionList is a list of VirtualMachineExtensions
message VirtualMachineExtensionList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of VirtualMachineExtension CRD objects
  repeated VirtualMachineExtension items = 2;
}

message VirtualMachineExtensionSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional k8s.io.api.core.v1.LocalObjectReference secretRef = 3;

  // +optional
  optional bool autoUpgradeMinorVersion = 4;

  optional string location = 5;

  optional string name = 6;

  optional string publisher = 7;

  optional string resourceGroupName = 8;

  // +optional
  optional string settings = 9;

  // +optional
  map<string, string> tags = 10;

  optional string type = 11;

  optional string typeHandlerVersion = 12;

  optional string virtualMachineName = 13;
}

message VirtualMachineExtensionStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional VirtualMachineExtensionSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

// VirtualMachineList is a list of VirtualMachines
message VirtualMachineList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of VirtualMachine CRD objects
  repeated VirtualMachine items = 2;
}

message VirtualMachineScaleSet {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional VirtualMachineScaleSetSpec spec = 2;

  optional VirtualMachineScaleSetStatus status = 3;
}

// VirtualMachineScaleSetList is a list of VirtualMachineScaleSets
message VirtualMachineScaleSetList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of VirtualMachineScaleSet CRD objects
  repeated VirtualMachineScaleSet items = 2;
}

message VirtualMachineScaleSetSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional k8s.io.api.core.v1.LocalObjectReference secretRef = 3;

  // +optional
  optional bool automaticOsUpgrade = 4;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated VirtualMachineScaleSetSpecBootDiagnostics bootDiagnostics = 5;

  // +optional
  optional string evictionPolicy = 6;

  // +optional
  repeated VirtualMachineScaleSetSpecExtension extension = 7;

  // +optional
  optional string healthProbeID = 8;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated VirtualMachineScaleSetSpecIdentity identity = 9;

  // +optional
  optional string licenseType = 10;

  optional string location = 11;

  optional string name = 12;

  repeated VirtualMachineScaleSetSpecNetworkProfile networkProfile = 13;

  // +kubebuilder:validation:MaxItems=1
  repeated VirtualMachineScaleSetSpecOsProfile osProfile = 14;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated VirtualMachineScaleSetSpecOsProfileLinuxConfig osProfileLinuxConfig = 15;

  // +optional
  repeated VirtualMachineScaleSetSpecOsProfileSecrets osProfileSecrets = 16;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated VirtualMachineScaleSetSpecOsProfileWindowsConfig osProfileWindowsConfig = 17;

  // +optional
  optional bool overprovision = 18;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated VirtualMachineScaleSetSpecPlan plan = 19;

  // +optional
  optional string priority = 20;

  optional string resourceGroupName = 21;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated VirtualMachineScaleSetSpecRollingUpgradePolicy rollingUpgradePolicy = 22;

  // +optional
  optional bool singlePlacementGroup = 23;

  // +kubebuilder:validation:MaxItems=1
  repeated VirtualMachineScaleSetSpecSku sku = 24;

  // +optional
  repeated VirtualMachineScaleSetSpecStorageProfileDataDisk storageProfileDataDisk = 25;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated VirtualMachineScaleSetSpecStorageProfileImageReference storageProfileImageReference = 26;

  // +kubebuilder:validation:MaxItems=1
  repeated VirtualMachineScaleSetSpecStorageProfileOsDisk storageProfileOsDisk = 27;

  // +optional
  map<string, string> tags = 28;

  optional string upgradePolicyMode = 29;

  // +optional
  repeated string zones = 30;
}

message VirtualMachineScaleSetSpecBootDiagnostics {
  // +optional
  optional bool enabled = 1;

  optional string storageURI = 2;
}

message VirtualMachineScaleSetSpecExtension {
  // +optional
  optional bool autoUpgradeMinorVersion = 1;

  optional string name = 2;

  // +optional
  repeated string provisionAfterExtensions = 3;

  optional string publisher = 4;

  // +optional
  optional string settings = 5;

  optional string type = 6;

  optional string typeHandlerVersion = 7;
}

message VirtualMachineScaleSetSpecIdentity {
  // +optional
  repeated string identityIDS = 1;

  // +optional
  optional string principalID = 2;

  optional string type = 3;
}

message VirtualMachineScaleSetSpecNetworkProfile {
  // +optional
  optional bool acceleratedNetworking = 1;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated VirtualMachineScaleSetSpecNetworkProfileDnsSettings dnsSettings = 2;

  repeated VirtualMachineScaleSetSpecNetworkProfileIpConfiguration ipConfiguration = 3;

  // +optional
  optional bool ipForwarding = 4;

  optional string name = 5;

  // +optional
  optional string networkSecurityGroupID = 6;

  optional bool primary = 7;
}

message VirtualMachineScaleSetSpecNetworkProfileDnsSettings {
  repeated string dnsServers = 1;
}

message VirtualMachineScaleSetSpecNetworkProfileIpConfiguration {
  // +optional
  repeated string applicationGatewayBackendAddressPoolIDS = 1;

  // +optional
  // +kubebuilder:validation:MaxItems=20
  repeated string applicationSecurityGroupIDS = 2;

  // +optional
  repeated string loadBalancerBackendAddressPoolIDS = 3;

  // +optional
  repeated string loadBalancerInboundNATRulesIDS = 4;

  optional string name = 5;

  optional bool primary = 6;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated VirtualMachineScaleSetSpecNetworkProfileIpConfigurationPublicIPAddressConfiguration publicIPAddressConfiguration = 7;

  optional string subnetID = 8;
}

message VirtualMachineScaleSetSpecNetworkProfileIpConfigurationPublicIPAddressConfiguration {
  optional string domainNameLabel = 1;

  optional int64 idleTimeout = 2;

  optional string name = 3;
}

message VirtualMachineScaleSetSpecOsProfile {
  optional string adminUsername = 1;

  optional string computerNamePrefix = 2;

  // +optional
  optional string customData = 3;
}

message VirtualMachineScaleSetSpecOsProfileLinuxConfig {
  // +optional
  optional bool disablePasswordAuthentication = 1;

  // +optional
  repeated VirtualMachineScaleSetSpecOsProfileLinuxConfigSshKeys sshKeys = 2;
}

message VirtualMachineScaleSetSpecOsProfileLinuxConfigSshKeys {
  // +optional
  optional string keyData = 1;

  optional string path = 2;
}

message VirtualMachineScaleSetSpecOsProfileSecrets {
  optional string sourceVaultID = 1;

  // +optional
  repeated VirtualMachineScaleSetSpecOsProfileSecretsVaultCertificates vaultCertificates = 2;
}

message VirtualMachineScaleSetSpecOsProfileSecretsVaultCertificates {
  // +optional
  optional string certificateStore = 1;

  optional string certificateURL = 2;
}

message VirtualMachineScaleSetSpecOsProfileWindowsConfig {
  // +optional
  repeated VirtualMachineScaleSetSpecOsProfileWindowsConfigAdditionalUnattendConfig additionalUnattendConfig = 1;

  // +optional
  optional bool enableAutomaticUpgrades = 2;

  // +optional
  optional bool provisionVmAgent = 3;

  // +optional
  repeated VirtualMachineScaleSetSpecOsProfileWindowsConfigWinrm winrm = 4;
}

message VirtualMachineScaleSetSpecOsProfileWindowsConfigAdditionalUnattendConfig {
  optional string component = 1;

  optional string pass = 2;

  optional string settingName = 3;
}

message VirtualMachineScaleSetSpecOsProfileWindowsConfigWinrm {
  // +optional
  optional string certificateURL = 1;

  optional string protocol = 2;
}

message VirtualMachineScaleSetSpecPlan {
  optional string name = 1;

  optional string product = 2;

  optional string publisher = 3;
}

message VirtualMachineScaleSetSpecRollingUpgradePolicy {
  // +optional
  optional int64 maxBatchInstancePercent = 1;

  // +optional
  optional int64 maxUnhealthyInstancePercent = 2;

  // +optional
  optional int64 maxUnhealthyUpgradedInstancePercent = 3;

  // +optional
  optional string pauseTimeBetweenBatches = 4;
}

message VirtualMachineScaleSetSpecSku {
  optional int64 capacity = 1;

  optional string name = 2;

  // +optional
  optional string tier = 3;
}

message VirtualMachineScaleSetSpecStorageProfileDataDisk {
  // +optional
  optional string caching = 1;

  optional string createOption = 2;

  // +optional
  optional int64 diskSizeGb = 3;

  optional int64 lun = 4;

  // +optional
  optional string managedDiskType = 5;
}

message VirtualMachineScaleSetSpecStorageProfileImageReference {
  // +optional
  optional string ID = 1;

  // +optional
  optional string offer = 2;

  // +optional
  optional string publisher = 3;

  // +optional
  optional string sku = 4;

  // +optional
  optional string version = 5;
}

message VirtualMachineScaleSetSpecStorageProfileOsDisk {
  // +optional
  optional string caching = 1;

  optional string createOption = 2;

  // +optional
  optional string image = 3;

  // +optional
  optional string managedDiskType = 4;

  // +optional
  optional string name = 5;

  // +optional
  optional string osType = 6;

  // +optional
  repeated string vhdContainers = 7;
}

message VirtualMachineScaleSetStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional VirtualMachineScaleSetSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message VirtualMachineSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional k8s.io.api.core.v1.LocalObjectReference secretRef = 3;

  // +optional
  optional string availabilitySetID = 4;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated VirtualMachineSpecBootDiagnostics bootDiagnostics = 5;

  // +optional
  optional bool deleteDataDisksOnTermination = 6;

  // +optional
  optional bool deleteOsDiskOnTermination = 7;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated VirtualMachineSpecIdentity identity = 8;

  // +optional
  optional string licenseType = 9;

  optional string location = 10;

  optional string name = 11;

  repeated string networkInterfaceIDS = 12;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated VirtualMachineSpecOsProfile osProfile = 13;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated VirtualMachineSpecOsProfileLinuxConfig osProfileLinuxConfig = 14;

  // +optional
  repeated VirtualMachineSpecOsProfileSecrets osProfileSecrets = 15;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated VirtualMachineSpecOsProfileWindowsConfig osProfileWindowsConfig = 16;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated VirtualMachineSpecPlan plan = 17;

  // +optional
  optional string primaryNetworkInterfaceID = 18;

  optional string resourceGroupName = 19;

  // +optional
  repeated VirtualMachineSpecStorageDataDisk storageDataDisk = 20;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated VirtualMachineSpecStorageImageReference storageImageReference = 21;

  // +kubebuilder:validation:MaxItems=1
  repeated VirtualMachineSpecStorageOsDisk storageOsDisk = 22;

  // +optional
  map<string, string> tags = 23;

  optional string vmSize = 24;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated string zones = 25;
}

message VirtualMachineSpecBootDiagnostics {
  optional bool enabled = 1;

  optional string storageURI = 2;
}

message VirtualMachineSpecIdentity {
  // +optional
  // +kubebuilder:validation:MinItems=1
  repeated string identityIDS = 1;

  // +optional
  optional string principalID = 2;

  optional string type = 3;
}

message VirtualMachineSpecOsProfile {
  optional string adminUsername = 1;

  optional string computerName = 2;

  // +optional
  optional string customData = 3;
}

message VirtualMachineSpecOsProfileLinuxConfig {
  optional bool disablePasswordAuthentication = 1;

  // +optional
  repeated VirtualMachineSpecOsProfileLinuxConfigSshKeys sshKeys = 2;
}

message VirtualMachineSpecOsProfileLinuxConfigSshKeys {
  optional string keyData = 1;

  optional string path = 2;
}

message VirtualMachineSpecOsProfileSecrets {
  optional string sourceVaultID = 1;

  // +optional
  repeated VirtualMachineSpecOsProfileSecretsVaultCertificates vaultCertificates = 2;
}

message VirtualMachineSpecOsProfileSecretsVaultCertificates {
  // +optional
  optional string certificateStore = 1;

  optional string certificateURL = 2;
}

message VirtualMachineSpecOsProfileWindowsConfig {
  // +optional
  repeated VirtualMachineSpecOsProfileWindowsConfigAdditionalUnattendConfig additionalUnattendConfig = 1;

  // +optional
  optional bool enableAutomaticUpgrades = 2;

  // +optional
  optional bool provisionVmAgent = 3;

  // +optional
  optional string timezone = 4;

  // +optional
  repeated VirtualMachineSpecOsProfileWindowsConfigWinrm winrm = 5;
}

message VirtualMachineSpecOsProfileWindowsConfigAdditionalUnattendConfig {
  optional string component = 1;

  optional string pass = 2;

  optional string settingName = 3;
}

message VirtualMachineSpecOsProfileWindowsConfigWinrm {
  // +optional
  optional string certificateURL = 1;

  optional string protocol = 2;
}

message VirtualMachineSpecPlan {
  optional string name = 1;

  optional string product = 2;

  optional string publisher = 3;
}

message VirtualMachineSpecStorageDataDisk {
  // +optional
  optional string caching = 1;

  optional string createOption = 2;

  // +optional
  optional int64 diskSizeGb = 3;

  optional int64 lun = 4;

  // +optional
  optional string managedDiskID = 5;

  // +optional
  optional string managedDiskType = 6;

  optional string name = 7;

  // +optional
  optional string vhdURI = 8;

  // +optional
  optional bool writeAcceleratorEnabled = 9;
}

message VirtualMachineSpecStorageImageReference {
  // +optional
  optional string ID = 1;

  // +optional
  optional string offer = 2;

  // +optional
  optional string publisher = 3;

  // +optional
  optional string sku = 4;

  // +optional
  optional string version = 5;
}

message VirtualMachineSpecStorageOsDisk {
  // +optional
  optional string caching = 1;

  optional string createOption = 2;

  // +optional
  optional int64 diskSizeGb = 3;

  // +optional
  optional string imageURI = 4;

  // +optional
  optional string managedDiskID = 5;

  // +optional
  optional string managedDiskType = 6;

  optional string name = 7;

  // +optional
  optional string osType = 8;

  // +optional
  optional string vhdURI = 9;

  // +optional
  optional bool writeAcceleratorEnabled = 10;
}

message VirtualMachineStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional VirtualMachineSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message VirtualNetwork {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional VirtualNetworkSpec spec = 2;

  optional VirtualNetworkStatus status = 3;
}

message VirtualNetworkGateway {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional VirtualNetworkGatewaySpec spec = 2;

  optional VirtualNetworkGatewayStatus status = 3;
}

message VirtualNetworkGatewayConnection {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional VirtualNetworkGatewayConnectionSpec spec = 2;

  optional VirtualNetworkGatewayConnectionStatus status = 3;
}

// VirtualNetworkGatewayConnectionList is a list of VirtualNetworkGatewayConnections
message VirtualNetworkGatewayConnectionList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of VirtualNetworkGatewayConnection CRD objects
  repeated VirtualNetworkGatewayConnection items = 2;
}

message VirtualNetworkGatewayConnectionSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional k8s.io.api.core.v1.LocalObjectReference secretRef = 3;

  // +optional
  optional bool enableBGP = 4;

  // +optional
  optional string expressRouteCircuitID = 5;

  // +optional
  optional bool expressRouteGatewayBypass = 6;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated VirtualNetworkGatewayConnectionSpecIpsecPolicy ipsecPolicy = 7;

  // +optional
  optional string localNetworkGatewayID = 8;

  optional string location = 9;

  optional string name = 10;

  // +optional
  optional string peerVirtualNetworkGatewayID = 11;

  optional string resourceGroupName = 12;

  // +optional
  optional int64 routingWeight = 13;

  // +optional
  map<string, string> tags = 14;

  optional string type = 15;

  // +optional
  optional bool usePolicyBasedTrafficSelectors = 16;

  optional string virtualNetworkGatewayID = 17;
}

message VirtualNetworkGatewayConnectionSpecIpsecPolicy {
  optional string dhGroup = 1;

  optional string ikeEncryption = 2;

  optional string ikeIntegrity = 3;

  optional string ipsecEncryption = 4;

  optional string ipsecIntegrity = 5;

  optional string pfsGroup = 6;

  // +optional
  optional int64 saDatasize = 7;

  // +optional
  optional int64 saLifetime = 8;
}

message VirtualNetworkGatewayConnectionStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional VirtualNetworkGatewayConnectionSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

// VirtualNetworkGatewayList is a list of VirtualNetworkGateways
message VirtualNetworkGatewayList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of VirtualNetworkGateway CRD objects
  repeated VirtualNetworkGateway items = 2;
}

message VirtualNetworkGatewaySpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  optional bool activeActive = 3;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated VirtualNetworkGatewaySpecBgpSettings bgpSettings = 4;

  // +optional
  optional string defaultLocalNetworkGatewayID = 5;

  // +optional
  optional bool enableBGP = 6;

  // +kubebuilder:validation:MaxItems=2
  repeated VirtualNetworkGatewaySpecIpConfiguration ipConfiguration = 7;

  optional string location = 8;

  optional string name = 9;

  optional string resourceGroupName = 10;

  optional string sku = 11;

  // +optional
  map<string, string> tags = 12;

  optional string type = 13;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated VirtualNetworkGatewaySpecVpnClientConfiguration vpnClientConfiguration = 14;

  // +optional
  optional string vpnType = 15;
}

message VirtualNetworkGatewaySpecBgpSettings {
  // +optional
  optional int64 asn = 1;

  // +optional
  optional int64 peerWeight = 2;

  // +optional
  optional string peeringAddress = 3;
}

message VirtualNetworkGatewaySpecIpConfiguration {
  // +optional
  optional string name = 1;

  // +optional
  optional string privateIPAddressAllocation = 2;

  // +optional
  optional string publicIPAddressID = 3;

  optional string subnetID = 4;
}

message VirtualNetworkGatewaySpecVpnClientConfiguration {
  repeated string addressSpace = 1;

  // +optional
  optional string radiusServerAddress = 2;

  // +optional
  optional string radiusServerSecret = 3;

  // +optional
  repeated VirtualNetworkGatewaySpecVpnClientConfigurationRevokedCertificate revokedCertificate = 4;

  // +optional
  repeated VirtualNetworkGatewaySpecVpnClientConfigurationRootCertificate rootCertificate = 5;

  // +optional
  repeated string vpnClientProtocols = 6;
}

message VirtualNetworkGatewaySpecVpnClientConfigurationRevokedCertificate {
  optional string name = 1;

  optional string thumbprint = 2;
}

message VirtualNetworkGatewaySpecVpnClientConfigurationRootCertificate {
  optional string name = 1;

  optional string publicCertData = 2;
}

message VirtualNetworkGatewayStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional VirtualNetworkGatewaySpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

// VirtualNetworkList is a list of VirtualNetworks
message VirtualNetworkList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of VirtualNetwork CRD objects
  repeated VirtualNetwork items = 2;
}

message VirtualNetworkPeering {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional VirtualNetworkPeeringSpec spec = 2;

  optional VirtualNetworkPeeringStatus status = 3;
}

// VirtualNetworkPeeringList is a list of VirtualNetworkPeerings
message VirtualNetworkPeeringList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of VirtualNetworkPeering CRD objects
  repeated VirtualNetworkPeering items = 2;
}

message VirtualNetworkPeeringSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  optional bool allowForwardedTraffic = 3;

  // +optional
  optional bool allowGatewayTransit = 4;

  // +optional
  optional bool allowVirtualNetworkAccess = 5;

  optional string name = 6;

  optional string remoteVirtualNetworkID = 7;

  optional string resourceGroupName = 8;

  // +optional
  optional bool useRemoteGateways = 9;

  optional string virtualNetworkName = 10;
}

message VirtualNetworkPeeringStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional VirtualNetworkPeeringSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message VirtualNetworkSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +kubebuilder:validation:MinItems=1
  repeated string addressSpace = 3;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated VirtualNetworkSpecDdosProtectionPlan ddosProtectionPlan = 4;

  // +optional
  repeated string dnsServers = 5;

  optional string location = 6;

  optional string name = 7;

  optional string resourceGroupName = 8;

  // +optional
  repeated VirtualNetworkSpecSubnet subnet = 9;

  // +optional
  map<string, string> tags = 10;
}

message VirtualNetworkSpecDdosProtectionPlan {
  optional bool enable = 1;

  optional string ID = 2;
}

message VirtualNetworkSpecSubnet {
  optional string addressPrefix = 1;

  // +optional
  optional string ID = 2;

  optional string name = 3;

  // +optional
  optional string securityGroup = 4;
}

message VirtualNetworkStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional VirtualNetworkSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message State {
  optional int64 version = 1;

  optional string terraform_version = 2;

  optional uint64 serial = 3;

  optional string lineage = 4;
}

