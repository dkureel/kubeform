/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/kubeform/apis/base/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type HdinsightInteractiveQueryCluster struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty" protobuf:"bytes,1,opt,name=metadata"`
	Spec              HdinsightInteractiveQueryClusterSpec   `json:"spec,omitempty" protobuf:"bytes,2,opt,name=spec"`
	Status            HdinsightInteractiveQueryClusterStatus `json:"status,omitempty" protobuf:"bytes,3,opt,name=status"`
}

type HdinsightInteractiveQueryClusterSpecComponentVersion struct {
	InteractiveHive string `json:"interactiveHive" tf:"interactive_hive" protobuf:"bytes,1,opt,name=interactiveHive"`
}

type HdinsightInteractiveQueryClusterSpecGateway struct {
	Enabled  bool   `json:"enabled" tf:"enabled" protobuf:"varint,1,opt,name=enabled"`
	Password string `json:"-" sensitive:"true" tf:"password"`
	Username string `json:"username" tf:"username" protobuf:"bytes,2,opt,name=username"`
}

type HdinsightInteractiveQueryClusterSpecRolesHeadNode struct {
	// +optional
	Password string `json:"-" sensitive:"true" tf:"password,omitempty"`
	// +optional
	SshKeys []string `json:"sshKeys,omitempty" tf:"ssh_keys,omitempty" protobuf:"bytes,1,rep,name=sshKeys"`
	// +optional
	SubnetID string `json:"subnetID,omitempty" tf:"subnet_id,omitempty" protobuf:"bytes,2,opt,name=subnetID"`
	Username string `json:"username" tf:"username" protobuf:"bytes,3,opt,name=username"`
	// +optional
	VirtualNetworkID string `json:"virtualNetworkID,omitempty" tf:"virtual_network_id,omitempty" protobuf:"bytes,4,opt,name=virtualNetworkID"`
	VmSize           string `json:"vmSize" tf:"vm_size" protobuf:"bytes,5,opt,name=vmSize"`
}

type HdinsightInteractiveQueryClusterSpecRolesWorkerNode struct {
	// +optional
	MinInstanceCount int64 `json:"minInstanceCount,omitempty" tf:"min_instance_count,omitempty" protobuf:"varint,1,opt,name=minInstanceCount"`
	// +optional
	Password string `json:"-" sensitive:"true" tf:"password,omitempty"`
	// +optional
	SshKeys []string `json:"sshKeys,omitempty" tf:"ssh_keys,omitempty" protobuf:"bytes,2,rep,name=sshKeys"`
	// +optional
	SubnetID            string `json:"subnetID,omitempty" tf:"subnet_id,omitempty" protobuf:"bytes,3,opt,name=subnetID"`
	TargetInstanceCount int64  `json:"targetInstanceCount" tf:"target_instance_count" protobuf:"varint,4,opt,name=targetInstanceCount"`
	Username            string `json:"username" tf:"username" protobuf:"bytes,5,opt,name=username"`
	// +optional
	VirtualNetworkID string `json:"virtualNetworkID,omitempty" tf:"virtual_network_id,omitempty" protobuf:"bytes,6,opt,name=virtualNetworkID"`
	VmSize           string `json:"vmSize" tf:"vm_size" protobuf:"bytes,7,opt,name=vmSize"`
}

type HdinsightInteractiveQueryClusterSpecRolesZookeeperNode struct {
	// +optional
	Password string `json:"-" sensitive:"true" tf:"password,omitempty"`
	// +optional
	SshKeys []string `json:"sshKeys,omitempty" tf:"ssh_keys,omitempty" protobuf:"bytes,1,rep,name=sshKeys"`
	// +optional
	SubnetID string `json:"subnetID,omitempty" tf:"subnet_id,omitempty" protobuf:"bytes,2,opt,name=subnetID"`
	Username string `json:"username" tf:"username" protobuf:"bytes,3,opt,name=username"`
	// +optional
	VirtualNetworkID string `json:"virtualNetworkID,omitempty" tf:"virtual_network_id,omitempty" protobuf:"bytes,4,opt,name=virtualNetworkID"`
	VmSize           string `json:"vmSize" tf:"vm_size" protobuf:"bytes,5,opt,name=vmSize"`
}

type HdinsightInteractiveQueryClusterSpecRoles struct {
	// +kubebuilder:validation:MaxItems=1
	HeadNode []HdinsightInteractiveQueryClusterSpecRolesHeadNode `json:"headNode" tf:"head_node" protobuf:"bytes,1,rep,name=headNode"`
	// +kubebuilder:validation:MaxItems=1
	WorkerNode []HdinsightInteractiveQueryClusterSpecRolesWorkerNode `json:"workerNode" tf:"worker_node" protobuf:"bytes,2,rep,name=workerNode"`
	// +kubebuilder:validation:MaxItems=1
	ZookeeperNode []HdinsightInteractiveQueryClusterSpecRolesZookeeperNode `json:"zookeeperNode" tf:"zookeeper_node" protobuf:"bytes,3,rep,name=zookeeperNode"`
}

type HdinsightInteractiveQueryClusterSpecStorageAccount struct {
	IsDefault          bool   `json:"isDefault" tf:"is_default" protobuf:"varint,1,opt,name=isDefault"`
	StorageAccountKey  string `json:"-" sensitive:"true" tf:"storage_account_key"`
	StorageContainerID string `json:"storageContainerID" tf:"storage_container_id" protobuf:"bytes,2,opt,name=storageContainerID"`
}

type HdinsightInteractiveQueryClusterSpec struct {
	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-" protobuf:"bytes,1,opt,name=providerRef"`

	ID string `json:"id,omitempty" tf:"id,omitempty" protobuf:"bytes,2,opt,name=id"`

	SecretRef *core.LocalObjectReference `json:"secretRef,omitempty" tf:"-" protobuf:"bytes,3,opt,name=secretRef"`

	ClusterVersion string `json:"clusterVersion" tf:"cluster_version" protobuf:"bytes,4,opt,name=clusterVersion"`
	// +kubebuilder:validation:MaxItems=1
	ComponentVersion []HdinsightInteractiveQueryClusterSpecComponentVersion `json:"componentVersion" tf:"component_version" protobuf:"bytes,5,rep,name=componentVersion"`
	// +kubebuilder:validation:MaxItems=1
	Gateway []HdinsightInteractiveQueryClusterSpecGateway `json:"gateway" tf:"gateway" protobuf:"bytes,6,rep,name=gateway"`
	// +optional
	HttpsEndpoint     string `json:"httpsEndpoint,omitempty" tf:"https_endpoint,omitempty" protobuf:"bytes,7,opt,name=httpsEndpoint"`
	Location          string `json:"location" tf:"location" protobuf:"bytes,8,opt,name=location"`
	Name              string `json:"name" tf:"name" protobuf:"bytes,9,opt,name=name"`
	ResourceGroupName string `json:"resourceGroupName" tf:"resource_group_name" protobuf:"bytes,10,opt,name=resourceGroupName"`
	// +kubebuilder:validation:MaxItems=1
	Roles []HdinsightInteractiveQueryClusterSpecRoles `json:"roles" tf:"roles" protobuf:"bytes,11,rep,name=roles"`
	// +optional
	SshEndpoint    string                                               `json:"sshEndpoint,omitempty" tf:"ssh_endpoint,omitempty" protobuf:"bytes,12,opt,name=sshEndpoint"`
	StorageAccount []HdinsightInteractiveQueryClusterSpecStorageAccount `json:"storageAccount" tf:"storage_account" protobuf:"bytes,13,rep,name=storageAccount"`
	// +optional
	Tags map[string]string `json:"tags,omitempty" tf:"tags,omitempty" protobuf:"bytes,14,rep,name=tags"`
	Tier string            `json:"tier" tf:"tier" protobuf:"bytes,15,opt,name=tier"`
}

type HdinsightInteractiveQueryClusterStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty" protobuf:"varint,1,opt,name=observedGeneration"`
	// +optional
	Output *HdinsightInteractiveQueryClusterSpec `json:"output,omitempty" protobuf:"bytes,2,opt,name=output"`
	// +optional
	State *base.State `json:"state,omitempty" protobuf:"bytes,3,opt,name=state"`
	// +optional
	Phase base.Phase `json:"phase,omitempty" protobuf:"bytes,4,opt,name=phase,casttype=kubeform.dev/kubeform/apis/base/v1alpha1.Phase"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// HdinsightInteractiveQueryClusterList is a list of HdinsightInteractiveQueryClusters
type HdinsightInteractiveQueryClusterList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty" protobuf:"bytes,1,opt,name=metadata"`
	// Items is a list of HdinsightInteractiveQueryCluster CRD objects
	Items []HdinsightInteractiveQueryCluster `json:"items,omitempty" protobuf:"bytes,2,rep,name=items"`
}
