/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/kubeform/apis/base/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type Iothub struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty" protobuf:"bytes,1,opt,name=metadata"`
	Spec              IothubSpec   `json:"spec,omitempty" protobuf:"bytes,2,opt,name=spec"`
	Status            IothubStatus `json:"status,omitempty" protobuf:"bytes,3,opt,name=status"`
}

type IothubSpecEndpoint struct {
	// +optional
	BatchFrequencyInSeconds int64  `json:"batchFrequencyInSeconds,omitempty" tf:"batch_frequency_in_seconds,omitempty" protobuf:"varint,1,opt,name=batchFrequencyInSeconds"`
	ConnectionString        string `json:"-" sensitive:"true" tf:"connection_string"`
	// +optional
	ContainerName string `json:"containerName,omitempty" tf:"container_name,omitempty" protobuf:"bytes,2,opt,name=containerName"`
	// +optional
	Encoding string `json:"encoding,omitempty" tf:"encoding,omitempty" protobuf:"bytes,3,opt,name=encoding"`
	// +optional
	FileNameFormat string `json:"fileNameFormat,omitempty" tf:"file_name_format,omitempty" protobuf:"bytes,4,opt,name=fileNameFormat"`
	// +optional
	MaxChunkSizeInBytes int64  `json:"maxChunkSizeInBytes,omitempty" tf:"max_chunk_size_in_bytes,omitempty" protobuf:"varint,5,opt,name=maxChunkSizeInBytes"`
	Name                string `json:"name" tf:"name" protobuf:"bytes,6,opt,name=name"`
	Type                string `json:"type" tf:"type" protobuf:"bytes,7,opt,name=type"`
}

type IothubSpecFallbackRoute struct {
	// +optional
	Condition string `json:"condition,omitempty" tf:"condition,omitempty" protobuf:"bytes,1,opt,name=condition"`
	// +optional
	Enabled bool `json:"enabled,omitempty" tf:"enabled,omitempty" protobuf:"varint,2,opt,name=enabled"`
	// +optional
	EndpointNames []string `json:"endpointNames,omitempty" tf:"endpoint_names,omitempty" protobuf:"bytes,3,rep,name=endpointNames"`
	// +optional
	Source string `json:"source,omitempty" tf:"source,omitempty" protobuf:"bytes,4,opt,name=source"`
}

type IothubSpecFileUpload struct {
	ConnectionString string `json:"-" sensitive:"true" tf:"connection_string"`
	ContainerName    string `json:"containerName" tf:"container_name" protobuf:"bytes,1,opt,name=containerName"`
	// +optional
	DefaultTtl string `json:"defaultTtl,omitempty" tf:"default_ttl,omitempty" protobuf:"bytes,2,opt,name=defaultTtl"`
	// +optional
	LockDuration string `json:"lockDuration,omitempty" tf:"lock_duration,omitempty" protobuf:"bytes,3,opt,name=lockDuration"`
	// +optional
	MaxDeliveryCount int64 `json:"maxDeliveryCount,omitempty" tf:"max_delivery_count,omitempty" protobuf:"varint,4,opt,name=maxDeliveryCount"`
	// +optional
	Notifications bool `json:"notifications,omitempty" tf:"notifications,omitempty" protobuf:"varint,5,opt,name=notifications"`
	// +optional
	SasTtl string `json:"sasTtl,omitempty" tf:"sas_ttl,omitempty" protobuf:"bytes,6,opt,name=sasTtl"`
}

type IothubSpecIpFilterRule struct {
	Action string `json:"action" tf:"action" protobuf:"bytes,1,opt,name=action"`
	IpMask string `json:"ipMask" tf:"ip_mask" protobuf:"bytes,2,opt,name=ipMask"`
	Name   string `json:"name" tf:"name" protobuf:"bytes,3,opt,name=name"`
}

type IothubSpecRoute struct {
	// +optional
	Condition     string   `json:"condition,omitempty" tf:"condition,omitempty" protobuf:"bytes,1,opt,name=condition"`
	Enabled       bool     `json:"enabled" tf:"enabled" protobuf:"varint,2,opt,name=enabled"`
	EndpointNames []string `json:"endpointNames" tf:"endpoint_names" protobuf:"bytes,3,rep,name=endpointNames"`
	Name          string   `json:"name" tf:"name" protobuf:"bytes,4,opt,name=name"`
	Source        string   `json:"source" tf:"source" protobuf:"bytes,5,opt,name=source"`
}

type IothubSpecSharedAccessPolicy struct {
	// +optional
	KeyName string `json:"keyName,omitempty" tf:"key_name,omitempty" protobuf:"bytes,1,opt,name=keyName"`
	// +optional
	Permissions string `json:"permissions,omitempty" tf:"permissions,omitempty" protobuf:"bytes,2,opt,name=permissions"`
	// +optional
	PrimaryKey string `json:"-" sensitive:"true" tf:"primary_key,omitempty"`
	// +optional
	SecondaryKey string `json:"-" sensitive:"true" tf:"secondary_key,omitempty"`
}

type IothubSpecSku struct {
	Capacity int64  `json:"capacity" tf:"capacity" protobuf:"varint,1,opt,name=capacity"`
	Name     string `json:"name" tf:"name" protobuf:"bytes,2,opt,name=name"`
	Tier     string `json:"tier" tf:"tier" protobuf:"bytes,3,opt,name=tier"`
}

type IothubSpec struct {
	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-" protobuf:"bytes,1,opt,name=providerRef"`

	ID string `json:"id,omitempty" tf:"id,omitempty" protobuf:"bytes,2,opt,name=id"`

	SecretRef *core.LocalObjectReference `json:"secretRef,omitempty" tf:"-" protobuf:"bytes,3,opt,name=secretRef"`

	// +optional
	Endpoint []IothubSpecEndpoint `json:"endpoint,omitempty" tf:"endpoint,omitempty" protobuf:"bytes,4,rep,name=endpoint"`
	// +optional
	EventHubEventsEndpoint string `json:"eventHubEventsEndpoint,omitempty" tf:"event_hub_events_endpoint,omitempty" protobuf:"bytes,5,opt,name=eventHubEventsEndpoint"`
	// +optional
	EventHubEventsPath string `json:"eventHubEventsPath,omitempty" tf:"event_hub_events_path,omitempty" protobuf:"bytes,6,opt,name=eventHubEventsPath"`
	// +optional
	EventHubOperationsEndpoint string `json:"eventHubOperationsEndpoint,omitempty" tf:"event_hub_operations_endpoint,omitempty" protobuf:"bytes,7,opt,name=eventHubOperationsEndpoint"`
	// +optional
	EventHubOperationsPath string `json:"eventHubOperationsPath,omitempty" tf:"event_hub_operations_path,omitempty" protobuf:"bytes,8,opt,name=eventHubOperationsPath"`
	// +optional
	// +kubebuilder:validation:MaxItems=1
	FallbackRoute []IothubSpecFallbackRoute `json:"fallbackRoute,omitempty" tf:"fallback_route,omitempty" protobuf:"bytes,9,rep,name=fallbackRoute"`
	// +optional
	// +kubebuilder:validation:MaxItems=1
	FileUpload []IothubSpecFileUpload `json:"fileUpload,omitempty" tf:"file_upload,omitempty" protobuf:"bytes,10,rep,name=fileUpload"`
	// +optional
	Hostname string `json:"hostname,omitempty" tf:"hostname,omitempty" protobuf:"bytes,11,opt,name=hostname"`
	// +optional
	IpFilterRule      []IothubSpecIpFilterRule `json:"ipFilterRule,omitempty" tf:"ip_filter_rule,omitempty" protobuf:"bytes,12,rep,name=ipFilterRule"`
	Location          string                   `json:"location" tf:"location" protobuf:"bytes,13,opt,name=location"`
	Name              string                   `json:"name" tf:"name" protobuf:"bytes,14,opt,name=name"`
	ResourceGroupName string                   `json:"resourceGroupName" tf:"resource_group_name" protobuf:"bytes,15,opt,name=resourceGroupName"`
	// +optional
	Route []IothubSpecRoute `json:"route,omitempty" tf:"route,omitempty" protobuf:"bytes,16,rep,name=route"`
	// +optional
	SharedAccessPolicy []IothubSpecSharedAccessPolicy `json:"sharedAccessPolicy,omitempty" tf:"shared_access_policy,omitempty" protobuf:"bytes,17,rep,name=sharedAccessPolicy"`
	// +kubebuilder:validation:MaxItems=1
	Sku []IothubSpecSku `json:"sku" tf:"sku" protobuf:"bytes,18,rep,name=sku"`
	// +optional
	Tags map[string]string `json:"tags,omitempty" tf:"tags,omitempty" protobuf:"bytes,19,rep,name=tags"`
	// +optional
	Type string `json:"type,omitempty" tf:"type,omitempty" protobuf:"bytes,20,opt,name=type"`
}

type IothubStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty" protobuf:"varint,1,opt,name=observedGeneration"`
	// +optional
	Output *IothubSpec `json:"output,omitempty" protobuf:"bytes,2,opt,name=output"`
	// +optional
	State *base.State `json:"state,omitempty" protobuf:"bytes,3,opt,name=state"`
	// +optional
	Phase base.Phase `json:"phase,omitempty" protobuf:"bytes,4,opt,name=phase,casttype=kubeform.dev/kubeform/apis/base/v1alpha1.Phase"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// IothubList is a list of Iothubs
type IothubList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty" protobuf:"bytes,1,opt,name=metadata"`
	// Items is a list of Iothub CRD objects
	Items []Iothub `json:"items,omitempty" protobuf:"bytes,2,rep,name=items"`
}
