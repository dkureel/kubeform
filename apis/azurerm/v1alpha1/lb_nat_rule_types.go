/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/kubeform/apis/base/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type LbNATRule struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty" protobuf:"bytes,1,opt,name=metadata"`
	Spec              LbNATRuleSpec   `json:"spec,omitempty" protobuf:"bytes,2,opt,name=spec"`
	Status            LbNATRuleStatus `json:"status,omitempty" protobuf:"bytes,3,opt,name=status"`
}

type LbNATRuleSpec struct {
	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-" protobuf:"bytes,1,opt,name=providerRef"`

	ID string `json:"id,omitempty" tf:"id,omitempty" protobuf:"bytes,2,opt,name=id"`

	// +optional
	BackendIPConfigurationID string `json:"backendIPConfigurationID,omitempty" tf:"backend_ip_configuration_id,omitempty" protobuf:"bytes,3,opt,name=backendIPConfigurationID"`
	BackendPort              int64  `json:"backendPort" tf:"backend_port" protobuf:"varint,4,opt,name=backendPort"`
	// +optional
	EnableFloatingIP bool `json:"enableFloatingIP,omitempty" tf:"enable_floating_ip,omitempty" protobuf:"varint,5,opt,name=enableFloatingIP"`
	// +optional
	FrontendIPConfigurationID   string `json:"frontendIPConfigurationID,omitempty" tf:"frontend_ip_configuration_id,omitempty" protobuf:"bytes,6,opt,name=frontendIPConfigurationID"`
	FrontendIPConfigurationName string `json:"frontendIPConfigurationName" tf:"frontend_ip_configuration_name" protobuf:"bytes,7,opt,name=frontendIPConfigurationName"`
	FrontendPort                int64  `json:"frontendPort" tf:"frontend_port" protobuf:"varint,8,opt,name=frontendPort"`
	LoadbalancerID              string `json:"loadbalancerID" tf:"loadbalancer_id" protobuf:"bytes,9,opt,name=loadbalancerID"`
	// +optional
	// Deprecated
	Location          string `json:"location,omitempty" tf:"location,omitempty" protobuf:"bytes,10,opt,name=location"`
	Name              string `json:"name" tf:"name" protobuf:"bytes,11,opt,name=name"`
	Protocol          string `json:"protocol" tf:"protocol" protobuf:"bytes,12,opt,name=protocol"`
	ResourceGroupName string `json:"resourceGroupName" tf:"resource_group_name" protobuf:"bytes,13,opt,name=resourceGroupName"`
}

type LbNATRuleStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty" protobuf:"varint,1,opt,name=observedGeneration"`
	// +optional
	Output *LbNATRuleSpec `json:"output,omitempty" protobuf:"bytes,2,opt,name=output"`
	// +optional
	State *base.State `json:"state,omitempty" protobuf:"bytes,3,opt,name=state"`
	// +optional
	Phase base.Phase `json:"phase,omitempty" protobuf:"bytes,4,opt,name=phase,casttype=kubeform.dev/kubeform/apis/base/v1alpha1.Phase"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// LbNATRuleList is a list of LbNATRules
type LbNATRuleList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty" protobuf:"bytes,1,opt,name=metadata"`
	// Items is a list of LbNATRule CRD objects
	Items []LbNATRule `json:"items,omitempty" protobuf:"bytes,2,rep,name=items"`
}
