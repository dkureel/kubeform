/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/kubeform/apis/base/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type MonitorDiagnosticSetting struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty" protobuf:"bytes,1,opt,name=metadata"`
	Spec              MonitorDiagnosticSettingSpec   `json:"spec,omitempty" protobuf:"bytes,2,opt,name=spec"`
	Status            MonitorDiagnosticSettingStatus `json:"status,omitempty" protobuf:"bytes,3,opt,name=status"`
}

type MonitorDiagnosticSettingSpecLogRetentionPolicy struct {
	// +optional
	Days    int64 `json:"days,omitempty" tf:"days,omitempty" protobuf:"varint,1,opt,name=days"`
	Enabled bool  `json:"enabled" tf:"enabled" protobuf:"varint,2,opt,name=enabled"`
}

type MonitorDiagnosticSettingSpecLog struct {
	Category string `json:"category" tf:"category" protobuf:"bytes,1,opt,name=category"`
	// +optional
	Enabled bool `json:"enabled,omitempty" tf:"enabled,omitempty" protobuf:"varint,2,opt,name=enabled"`
	// +kubebuilder:validation:MaxItems=1
	RetentionPolicy []MonitorDiagnosticSettingSpecLogRetentionPolicy `json:"retentionPolicy" tf:"retention_policy" protobuf:"bytes,3,rep,name=retentionPolicy"`
}

type MonitorDiagnosticSettingSpecMetricRetentionPolicy struct {
	// +optional
	Days    int64 `json:"days,omitempty" tf:"days,omitempty" protobuf:"varint,1,opt,name=days"`
	Enabled bool  `json:"enabled" tf:"enabled" protobuf:"varint,2,opt,name=enabled"`
}

type MonitorDiagnosticSettingSpecMetric struct {
	Category string `json:"category" tf:"category" protobuf:"bytes,1,opt,name=category"`
	// +optional
	Enabled bool `json:"enabled,omitempty" tf:"enabled,omitempty" protobuf:"varint,2,opt,name=enabled"`
	// +kubebuilder:validation:MaxItems=1
	RetentionPolicy []MonitorDiagnosticSettingSpecMetricRetentionPolicy `json:"retentionPolicy" tf:"retention_policy" protobuf:"bytes,3,rep,name=retentionPolicy"`
}

type MonitorDiagnosticSettingSpec struct {
	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-" protobuf:"bytes,1,opt,name=providerRef"`

	ID string `json:"id,omitempty" tf:"id,omitempty" protobuf:"bytes,2,opt,name=id"`

	// +optional
	EventhubAuthorizationRuleID string `json:"eventhubAuthorizationRuleID,omitempty" tf:"eventhub_authorization_rule_id,omitempty" protobuf:"bytes,3,opt,name=eventhubAuthorizationRuleID"`
	// +optional
	EventhubName string `json:"eventhubName,omitempty" tf:"eventhub_name,omitempty" protobuf:"bytes,4,opt,name=eventhubName"`
	// +optional
	Log []MonitorDiagnosticSettingSpecLog `json:"log,omitempty" tf:"log,omitempty" protobuf:"bytes,5,rep,name=log"`
	// +optional
	LogAnalyticsWorkspaceID string `json:"logAnalyticsWorkspaceID,omitempty" tf:"log_analytics_workspace_id,omitempty" protobuf:"bytes,6,opt,name=logAnalyticsWorkspaceID"`
	// +optional
	Metric []MonitorDiagnosticSettingSpecMetric `json:"metric,omitempty" tf:"metric,omitempty" protobuf:"bytes,7,rep,name=metric"`
	Name   string                               `json:"name" tf:"name" protobuf:"bytes,8,opt,name=name"`
	// +optional
	StorageAccountID string `json:"storageAccountID,omitempty" tf:"storage_account_id,omitempty" protobuf:"bytes,9,opt,name=storageAccountID"`
	TargetResourceID string `json:"targetResourceID" tf:"target_resource_id" protobuf:"bytes,10,opt,name=targetResourceID"`
}

type MonitorDiagnosticSettingStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty" protobuf:"varint,1,opt,name=observedGeneration"`
	// +optional
	Output *MonitorDiagnosticSettingSpec `json:"output,omitempty" protobuf:"bytes,2,opt,name=output"`
	// +optional
	State *base.State `json:"state,omitempty" protobuf:"bytes,3,opt,name=state"`
	// +optional
	Phase base.Phase `json:"phase,omitempty" protobuf:"bytes,4,opt,name=phase,casttype=kubeform.dev/kubeform/apis/base/v1alpha1.Phase"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// MonitorDiagnosticSettingList is a list of MonitorDiagnosticSettings
type MonitorDiagnosticSettingList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty" protobuf:"bytes,1,opt,name=metadata"`
	// Items is a list of MonitorDiagnosticSetting CRD objects
	Items []MonitorDiagnosticSetting `json:"items,omitempty" protobuf:"bytes,2,rep,name=items"`
}
