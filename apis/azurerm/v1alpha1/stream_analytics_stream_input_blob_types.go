/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/kubeform/apis/base/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type StreamAnalyticsStreamInputBlob struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty" protobuf:"bytes,1,opt,name=metadata"`
	Spec              StreamAnalyticsStreamInputBlobSpec   `json:"spec,omitempty" protobuf:"bytes,2,opt,name=spec"`
	Status            StreamAnalyticsStreamInputBlobStatus `json:"status,omitempty" protobuf:"bytes,3,opt,name=status"`
}

type StreamAnalyticsStreamInputBlobSpecSerialization struct {
	// +optional
	Encoding string `json:"encoding,omitempty" tf:"encoding,omitempty" protobuf:"bytes,1,opt,name=encoding"`
	// +optional
	FieldDelimiter string `json:"fieldDelimiter,omitempty" tf:"field_delimiter,omitempty" protobuf:"bytes,2,opt,name=fieldDelimiter"`
	Type           string `json:"type" tf:"type" protobuf:"bytes,3,opt,name=type"`
}

type StreamAnalyticsStreamInputBlobSpec struct {
	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-" protobuf:"bytes,1,opt,name=providerRef"`

	ID string `json:"id,omitempty" tf:"id,omitempty" protobuf:"bytes,2,opt,name=id"`

	SecretRef *core.LocalObjectReference `json:"secretRef,omitempty" tf:"-" protobuf:"bytes,3,opt,name=secretRef"`

	DateFormat        string `json:"dateFormat" tf:"date_format" protobuf:"bytes,4,opt,name=dateFormat"`
	Name              string `json:"name" tf:"name" protobuf:"bytes,5,opt,name=name"`
	PathPattern       string `json:"pathPattern" tf:"path_pattern" protobuf:"bytes,6,opt,name=pathPattern"`
	ResourceGroupName string `json:"resourceGroupName" tf:"resource_group_name" protobuf:"bytes,7,opt,name=resourceGroupName"`
	// +kubebuilder:validation:MaxItems=1
	Serialization          []StreamAnalyticsStreamInputBlobSpecSerialization `json:"serialization" tf:"serialization" protobuf:"bytes,8,rep,name=serialization"`
	StorageAccountKey      string                                            `json:"-" sensitive:"true" tf:"storage_account_key"`
	StorageAccountName     string                                            `json:"storageAccountName" tf:"storage_account_name" protobuf:"bytes,9,opt,name=storageAccountName"`
	StorageContainerName   string                                            `json:"storageContainerName" tf:"storage_container_name" protobuf:"bytes,10,opt,name=storageContainerName"`
	StreamAnalyticsJobName string                                            `json:"streamAnalyticsJobName" tf:"stream_analytics_job_name" protobuf:"bytes,11,opt,name=streamAnalyticsJobName"`
	TimeFormat             string                                            `json:"timeFormat" tf:"time_format" protobuf:"bytes,12,opt,name=timeFormat"`
}

type StreamAnalyticsStreamInputBlobStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty" protobuf:"varint,1,opt,name=observedGeneration"`
	// +optional
	Output *StreamAnalyticsStreamInputBlobSpec `json:"output,omitempty" protobuf:"bytes,2,opt,name=output"`
	// +optional
	State *base.State `json:"state,omitempty" protobuf:"bytes,3,opt,name=state"`
	// +optional
	Phase base.Phase `json:"phase,omitempty" protobuf:"bytes,4,opt,name=phase,casttype=kubeform.dev/kubeform/apis/base/v1alpha1.Phase"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// StreamAnalyticsStreamInputBlobList is a list of StreamAnalyticsStreamInputBlobs
type StreamAnalyticsStreamInputBlobList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty" protobuf:"bytes,1,opt,name=metadata"`
	// Items is a list of StreamAnalyticsStreamInputBlob CRD objects
	Items []StreamAnalyticsStreamInputBlob `json:"items,omitempty" protobuf:"bytes,2,rep,name=items"`
}
