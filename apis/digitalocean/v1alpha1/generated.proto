/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// This file was autogenerated by go-to-protobuf. Do not edit it manually!

syntax = 'proto2';

package kubeform.dev.kubeform.apis.digitalocean.v1alpha1;

import "k8s.io/api/core/v1/generated.proto";
import "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/schema/generated.proto";

// Package-wide variables from generator "generated".
option go_package = "v1alpha1";

message State {
  optional int64 version = 1;

  optional string terraform_version = 2;

  optional uint64 serial = 3;

  optional string lineage = 4;
}

message Cdn {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional CdnSpec spec = 2;

  optional CdnStatus status = 3;
}

// CdnList is a list of Cdns
message CdnList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of Cdn CRD objects
  repeated Cdn items = 2;
}

message CdnSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // ID of a DigitalOcean managed TLS certificate for use with custom domains
  // +optional
  optional string certificateID = 3;

  // The date and time (ISO8601) of when the CDN endpoint was created.
  // +optional
  optional string createdAt = 4;

  // fully qualified domain name (FQDN) for custom subdomain, (requires certificate_id)
  // +optional
  optional string customDomain = 5;

  // fully qualified domain name (FQDN) to serve the CDN content
  // +optional
  optional string endpoint = 6;

  // fully qualified domain name (FQDN) for the origin server
  optional string origin = 7;

  // The amount of time the content is cached in the CDN
  // +optional
  optional int64 ttl = 8;
}

message CdnStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional CdnSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message Certificate {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional CertificateSpec spec = 2;

  optional CertificateStatus status = 3;
}

// CertificateList is a list of Certificates
message CertificateList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of Certificate CRD objects
  repeated Certificate items = 2;
}

message CertificateSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional k8s.io.api.core.v1.LocalObjectReference secretRef = 3;

  // +optional
  optional string certificateChain = 4;

  // +optional
  repeated string domains = 5;

  // +optional
  optional string leafCertificate = 6;

  optional string name = 7;

  // +optional
  optional string notAfter = 8;

  // +optional
  optional string sha1Fingerprint = 9;

  // +optional
  optional string state = 10;

  // +optional
  optional string type = 11;
}

message CertificateStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional CertificateSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message DatabaseCluster {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional DatabaseClusterSpec spec = 2;

  optional DatabaseClusterStatus status = 3;
}

// DatabaseClusterList is a list of DatabaseClusters
message DatabaseClusterList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of DatabaseCluster CRD objects
  repeated DatabaseCluster items = 2;
}

message DatabaseClusterSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  optional string database = 3;

  optional string engine = 4;

  // +optional
  optional string host = 5;

  // +optional
  // +kubebuilder:validation:MinItems=1
  repeated DatabaseClusterSpecMaintenanceWindow maintenanceWindow = 6;

  optional string name = 7;

  optional int64 nodeCount = 8;

  // +optional
  optional string password = 9;

  // +optional
  optional int64 port = 10;

  optional string region = 11;

  optional string size = 12;

  // +optional
  optional string uri = 13;

  // +optional
  optional string user = 14;

  optional string version = 15;
}

message DatabaseClusterSpecMaintenanceWindow {
  optional string day = 1;

  optional string hour = 2;
}

message DatabaseClusterStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional DatabaseClusterSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message Domain {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional DomainSpec spec = 2;

  optional DomainStatus status = 3;
}

// DomainList is a list of Domains
message DomainList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of Domain CRD objects
  repeated Domain items = 2;
}

message DomainSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  optional string ipAddress = 3;

  optional string name = 4;

  // +optional
  optional string urn = 5;
}

message DomainStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional DomainSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message Droplet {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional DropletSpec spec = 2;

  optional DropletStatus status = 3;
}

// DropletList is a list of Droplets
message DropletList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of Droplet CRD objects
  repeated Droplet items = 2;
}

message DropletSnapshot {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional DropletSnapshotSpec spec = 2;

  optional DropletSnapshotStatus status = 3;
}

// DropletSnapshotList is a list of DropletSnapshots
message DropletSnapshotList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of DropletSnapshot CRD objects
  repeated DropletSnapshot items = 2;
}

message DropletSnapshotSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  optional string createdAt = 3;

  optional string dropletID = 4;

  // +optional
  optional int64 minDiskSize = 5;

  optional string name = 6;

  // +optional
  repeated string regions = 7;

  // +optional
  optional double size = 8;
}

message DropletSnapshotStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional DropletSnapshotSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message DropletSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  optional bool backups = 3;

  // +optional
  optional int64 disk = 4;

  optional string image = 5;

  // +optional
  optional string ipv4Address = 6;

  // +optional
  optional string ipv4AddressPrivate = 7;

  // +optional
  optional bool ipv6 = 8;

  // +optional
  optional string ipv6Address = 9;

  // +optional
  optional bool locked = 10;

  // +optional
  optional int64 memory = 11;

  // +optional
  optional bool monitoring = 12;

  optional string name = 13;

  // +optional
  optional double priceHourly = 14;

  // +optional
  optional double priceMonthly = 15;

  // +optional
  optional bool privateNetworking = 16;

  optional string region = 17;

  // +optional
  optional bool resizeDisk = 18;

  optional string size = 19;

  // +optional
  repeated string sshKeys = 20;

  // +optional
  optional string status = 21;

  // +optional
  repeated string tags = 22;

  // +optional
  optional string urn = 23;

  // +optional
  optional string userData = 24;

  // +optional
  optional int64 vcpus = 25;

  // +optional
  repeated string volumeIDS = 26;
}

message DropletStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional DropletSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message Firewall {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional FirewallSpec spec = 2;

  optional FirewallStatus status = 3;
}

// FirewallList is a list of Firewalls
message FirewallList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of Firewall CRD objects
  repeated Firewall items = 2;
}

message FirewallSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  optional string createdAt = 3;

  // +optional
  repeated int64 dropletIDS = 4;

  // +optional
  repeated FirewallSpecInboundRule inboundRule = 5;

  optional string name = 6;

  // +optional
  repeated FirewallSpecOutboundRule outboundRule = 7;

  // +optional
  repeated FirewallSpecPendingChanges pendingChanges = 8;

  // +optional
  optional string status = 9;

  // +optional
  repeated string tags = 10;
}

message FirewallSpecInboundRule {
  // +optional
  optional string portRange = 1;

  optional string protocol = 2;

  // +optional
  repeated string sourceAddresses = 3;

  // +optional
  repeated int64 sourceDropletIDS = 4;

  // +optional
  repeated string sourceLoadBalancerUids = 5;

  // +optional
  repeated string sourceTags = 6;
}

message FirewallSpecOutboundRule {
  // +optional
  repeated string destinationAddresses = 1;

  // +optional
  repeated int64 destinationDropletIDS = 2;

  // +optional
  repeated string destinationLoadBalancerUids = 3;

  // +optional
  repeated string destinationTags = 4;

  // +optional
  optional string portRange = 5;

  optional string protocol = 6;
}

message FirewallSpecPendingChanges {
  // +optional
  optional int64 dropletID = 1;

  // +optional
  optional bool removing = 2;

  // +optional
  optional string status = 3;
}

message FirewallStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional FirewallSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message FloatingIP {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional FloatingIPSpec spec = 2;

  optional FloatingIPStatus status = 3;
}

message FloatingIPAssignment {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional FloatingIPAssignmentSpec spec = 2;

  optional FloatingIPAssignmentStatus status = 3;
}

// FloatingIPAssignmentList is a list of FloatingIPAssignments
message FloatingIPAssignmentList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of FloatingIPAssignment CRD objects
  repeated FloatingIPAssignment items = 2;
}

message FloatingIPAssignmentSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional int64 dropletID = 3;

  optional string ipAddress = 4;
}

message FloatingIPAssignmentStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional FloatingIPAssignmentSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

// FloatingIPList is a list of FloatingIPs
message FloatingIPList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of FloatingIP CRD objects
  repeated FloatingIP items = 2;
}

message FloatingIPSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  optional int64 dropletID = 3;

  // +optional
  optional string ipAddress = 4;

  optional string region = 5;

  // the uniform resource name for the floating ip
  // +optional
  optional string urn = 6;
}

message FloatingIPStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional FloatingIPSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message KubernetesCluster {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional KubernetesClusterSpec spec = 2;

  optional KubernetesClusterStatus status = 3;
}

// KubernetesClusterList is a list of KubernetesClusters
message KubernetesClusterList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of KubernetesCluster CRD objects
  repeated KubernetesCluster items = 2;
}

message KubernetesClusterSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  optional string clusterSubnet = 3;

  // +optional
  optional string createdAt = 4;

  // +optional
  optional string endpoint = 5;

  // +optional
  optional string ipv4Address = 6;

  // +optional
  repeated KubernetesClusterSpecKubeConfig kubeConfig = 7;

  optional string name = 8;

  // +kubebuilder:validation:MaxItems=1
  // +kubebuilder:validation:MinItems=1
  repeated KubernetesClusterSpecNodePool nodePool = 9;

  optional string region = 10;

  // +optional
  optional string serviceSubnet = 11;

  // +optional
  optional string status = 12;

  // +optional
  repeated string tags = 13;

  // +optional
  optional string updatedAt = 14;

  optional string version = 15;
}

message KubernetesClusterSpecKubeConfig {
  // +optional
  optional string clientCertificate = 1;

  // +optional
  optional string clientKey = 2;

  // +optional
  optional string clusterCaCertificate = 3;

  // +optional
  optional string host = 4;

  // +optional
  optional string rawConfig = 5;
}

message KubernetesClusterSpecNodePool {
  // +optional
  optional string ID = 1;

  optional string name = 2;

  optional int64 nodeCount = 3;

  // +optional
  repeated KubernetesClusterSpecNodePoolNodes nodes = 4;

  optional string size = 5;

  // +optional
  repeated string tags = 6;
}

message KubernetesClusterSpecNodePoolNodes {
  // +optional
  optional string createdAt = 1;

  // +optional
  optional string ID = 2;

  // +optional
  optional string name = 3;

  // +optional
  optional string status = 4;

  // +optional
  optional string updatedAt = 5;
}

message KubernetesClusterStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional KubernetesClusterSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message KubernetesNodePool {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional KubernetesNodePoolSpec spec = 2;

  optional KubernetesNodePoolStatus status = 3;
}

// KubernetesNodePoolList is a list of KubernetesNodePools
message KubernetesNodePoolList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of KubernetesNodePool CRD objects
  repeated KubernetesNodePool items = 2;
}

message KubernetesNodePoolSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string clusterID = 3;

  optional string name = 4;

  optional int64 nodeCount = 5;

  // +optional
  repeated KubernetesNodePoolSpecNodes nodes = 6;

  optional string size = 7;

  // +optional
  repeated string tags = 8;
}

message KubernetesNodePoolSpecNodes {
  // +optional
  optional string createdAt = 1;

  // +optional
  optional string ID = 2;

  // +optional
  optional string name = 3;

  // +optional
  optional string status = 4;

  // +optional
  optional string updatedAt = 5;
}

message KubernetesNodePoolStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional KubernetesNodePoolSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message Loadbalancer {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional LoadbalancerSpec spec = 2;

  optional LoadbalancerStatus status = 3;
}

// LoadbalancerList is a list of Loadbalancers
message LoadbalancerList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of Loadbalancer CRD objects
  repeated Loadbalancer items = 2;
}

message LoadbalancerSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  optional string algorithm = 3;

  // +optional
  repeated int64 dropletIDS = 4;

  // +optional
  optional string dropletTag = 5;

  // +optional
  optional bool enableProxyProtocol = 6;

  // +kubebuilder:validation:MinItems=1
  repeated LoadbalancerSpecForwardingRule forwardingRule = 7;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated LoadbalancerSpecHealthcheck healthcheck = 8;

  // +optional
  optional string ip = 9;

  optional string name = 10;

  // +optional
  optional bool redirectHTTPToHTTPS = 11;

  optional string region = 12;

  // +optional
  optional string status = 13;

  // +optional
  // +kubebuilder:validation:MaxItems=1
  repeated LoadbalancerSpecStickySessions stickySessions = 14;

  // the uniform resource name for the load balancer
  // +optional
  optional string urn = 15;
}

message LoadbalancerSpecForwardingRule {
  // +optional
  optional string certificateID = 1;

  optional int64 entryPort = 2;

  optional string entryProtocol = 3;

  optional int64 targetPort = 4;

  optional string targetProtocol = 5;

  // +optional
  optional bool tlsPassthrough = 6;
}

message LoadbalancerSpecHealthcheck {
  // +optional
  optional int64 checkIntervalSeconds = 1;

  // +optional
  optional int64 healthyThreshold = 2;

  // +optional
  optional string path = 3;

  optional int64 port = 4;

  optional string protocol = 5;

  // +optional
  optional int64 responseTimeoutSeconds = 6;

  // +optional
  optional int64 unhealthyThreshold = 7;
}

message LoadbalancerSpecStickySessions {
  // +optional
  optional string cookieName = 1;

  // +optional
  optional int64 cookieTtlSeconds = 2;

  // +optional
  optional string type = 3;
}

message LoadbalancerStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional LoadbalancerSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message Project {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional ProjectSpec spec = 2;

  optional ProjectStatus status = 3;
}

// ProjectList is a list of Projects
message ProjectList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of Project CRD objects
  repeated Project items = 2;
}

message ProjectSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // the date and time when the project was created, (ISO8601)
  // +optional
  optional string createdAt = 3;

  // the descirption of the project
  // +optional
  optional string description = 4;

  // the environment of the project's resources
  // +optional
  optional string environment = 5;

  // the human-readable name for the project
  optional string name = 6;

  // the id of the project owner.
  // +optional
  optional int64 ownerID = 7;

  // the unique universal identifier of the project owner.
  // +optional
  optional string ownerUUID = 8;

  // the purpose of the project
  // +optional
  optional string purpose = 9;

  // the resources associated with the project
  // +optional
  repeated string resources = 10;

  // the date and time when the project was last updated, (ISO8601)
  // +optional
  optional string updatedAt = 11;
}

message ProjectStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional ProjectSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message Record {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional RecordSpec spec = 2;

  optional RecordStatus status = 3;
}

// RecordList is a list of Records
message RecordList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of Record CRD objects
  repeated Record items = 2;
}

message RecordSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string domain = 3;

  // +optional
  optional int64 flags = 4;

  // +optional
  optional string fqdn = 5;

  optional string name = 6;

  // +optional
  optional int64 port = 7;

  // +optional
  optional int64 priority = 8;

  // +optional
  optional string tag = 9;

  // +optional
  optional int64 ttl = 10;

  optional string type = 11;

  optional string value = 12;

  // +optional
  optional int64 weight = 13;
}

message RecordStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional RecordSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message SpacesBucket {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional SpacesBucketSpec spec = 2;

  optional SpacesBucketStatus status = 3;
}

// SpacesBucketList is a list of SpacesBuckets
message SpacesBucketList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of SpacesBucket CRD objects
  repeated SpacesBucket items = 2;
}

message SpacesBucketSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // Canned ACL applied on bucket creation
  // +optional
  optional string acl = 3;

  // The FQDN of the bucket
  // +optional
  optional string bucketDomainName = 4;

  // Unless true, the bucket will only be destroyed if empty
  // +optional
  optional bool forceDestroy = 5;

  // Bucket name
  optional string name = 6;

  // Bucket region
  // +optional
  optional string region = 7;

  // the uniform resource name for the bucket
  // +optional
  optional string urn = 8;
}

message SpacesBucketStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional SpacesBucketSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message SshKey {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional SshKeySpec spec = 2;

  optional SshKeyStatus status = 3;
}

// SshKeyList is a list of SshKeys
message SshKeyList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of SshKey CRD objects
  repeated SshKey items = 2;
}

message SshKeySpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  optional string fingerprint = 3;

  optional string name = 4;

  optional string publicKey = 5;
}

message SshKeyStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional SshKeySpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message Tag {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional TagSpec spec = 2;

  optional TagStatus status = 3;
}

// TagList is a list of Tags
message TagList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of Tag CRD objects
  repeated Tag items = 2;
}

message TagSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional string name = 3;
}

message TagStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional TagSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message Volume {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional VolumeSpec spec = 2;

  optional VolumeStatus status = 3;
}

message VolumeAttachment {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional VolumeAttachmentSpec spec = 2;

  optional VolumeAttachmentStatus status = 3;
}

// VolumeAttachmentList is a list of VolumeAttachments
message VolumeAttachmentList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of VolumeAttachment CRD objects
  repeated VolumeAttachment items = 2;
}

message VolumeAttachmentSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  optional int64 dropletID = 3;

  optional string volumeID = 4;
}

message VolumeAttachmentStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional VolumeAttachmentSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

// VolumeList is a list of Volumes
message VolumeList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of Volume CRD objects
  repeated Volume items = 2;
}

message VolumeSnapshot {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional VolumeSnapshotSpec spec = 2;

  optional VolumeSnapshotStatus status = 3;
}

// VolumeSnapshotList is a list of VolumeSnapshots
message VolumeSnapshotList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of VolumeSnapshot CRD objects
  repeated VolumeSnapshot items = 2;
}

message VolumeSnapshotSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  optional string createdAt = 3;

  // +optional
  optional int64 minDiskSize = 4;

  optional string name = 5;

  // +optional
  repeated string regions = 6;

  // +optional
  optional double size = 7;

  optional string volumeID = 8;
}

message VolumeSnapshotStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional VolumeSnapshotSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

message VolumeSpec {
  optional k8s.io.api.core.v1.LocalObjectReference providerRef = 1;

  optional string id = 2;

  // +optional
  optional string description = 3;

  // +optional
  repeated int64 dropletIDS = 4;

  // +optional
  optional string filesystemLabel = 5;

  // +optional
  // Deprecated
  optional string filesystemType = 6;

  // +optional
  optional string initialFilesystemLabel = 7;

  // +optional
  optional string initialFilesystemType = 8;

  optional string name = 9;

  optional string region = 10;

  optional int64 size = 11;

  // +optional
  optional string snapshotID = 12;

  // the uniform resource name for the volume.
  // +optional
  optional string urn = 13;
}

message VolumeStatus {
  // Resource generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // +optional
  optional VolumeSpec output = 2;

  // +optional
  optional State state = 3;

  // +optional
  optional string phase = 4;
}

