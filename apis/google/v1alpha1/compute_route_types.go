/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/kubeform/apis/base/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type ComputeRoute struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty" protobuf:"bytes,1,opt,name=metadata"`
	Spec              ComputeRouteSpec   `json:"spec,omitempty" protobuf:"bytes,2,opt,name=spec"`
	Status            ComputeRouteStatus `json:"status,omitempty" protobuf:"bytes,3,opt,name=status"`
}

type ComputeRouteSpec struct {
	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-" protobuf:"bytes,1,opt,name=providerRef"`

	ID string `json:"id,omitempty" tf:"id,omitempty" protobuf:"bytes,2,opt,name=id"`

	// +optional
	Description string `json:"description,omitempty" tf:"description,omitempty" protobuf:"bytes,3,opt,name=description"`
	DestRange   string `json:"destRange" tf:"dest_range" protobuf:"bytes,4,opt,name=destRange"`
	Name        string `json:"name" tf:"name" protobuf:"bytes,5,opt,name=name"`
	Network     string `json:"network" tf:"network" protobuf:"bytes,6,opt,name=network"`
	// +optional
	NextHopGateway string `json:"nextHopGateway,omitempty" tf:"next_hop_gateway,omitempty" protobuf:"bytes,7,opt,name=nextHopGateway"`
	// +optional
	NextHopInstance string `json:"nextHopInstance,omitempty" tf:"next_hop_instance,omitempty" protobuf:"bytes,8,opt,name=nextHopInstance"`
	// +optional
	NextHopInstanceZone string `json:"nextHopInstanceZone,omitempty" tf:"next_hop_instance_zone,omitempty" protobuf:"bytes,9,opt,name=nextHopInstanceZone"`
	// +optional
	NextHopIP string `json:"nextHopIP,omitempty" tf:"next_hop_ip,omitempty" protobuf:"bytes,10,opt,name=nextHopIP"`
	// +optional
	NextHopNetwork string `json:"nextHopNetwork,omitempty" tf:"next_hop_network,omitempty" protobuf:"bytes,11,opt,name=nextHopNetwork"`
	// +optional
	NextHopVPNTunnel string `json:"nextHopVPNTunnel,omitempty" tf:"next_hop_vpn_tunnel,omitempty" protobuf:"bytes,12,opt,name=nextHopVPNTunnel"`
	// +optional
	Priority int64 `json:"priority,omitempty" tf:"priority,omitempty" protobuf:"varint,13,opt,name=priority"`
	// +optional
	Project string `json:"project,omitempty" tf:"project,omitempty" protobuf:"bytes,14,opt,name=project"`
	// +optional
	SelfLink string `json:"selfLink,omitempty" tf:"self_link,omitempty" protobuf:"bytes,15,opt,name=selfLink"`
	// +optional
	Tags []string `json:"tags,omitempty" tf:"tags,omitempty" protobuf:"bytes,16,rep,name=tags"`
}

type ComputeRouteStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty" protobuf:"varint,1,opt,name=observedGeneration"`
	// +optional
	Output *ComputeRouteSpec `json:"output,omitempty" protobuf:"bytes,2,opt,name=output"`
	// +optional
	State *base.State `json:"state,omitempty" protobuf:"bytes,3,opt,name=state"`
	// +optional
	Phase base.Phase `json:"phase,omitempty" protobuf:"bytes,4,opt,name=phase,casttype=kubeform.dev/kubeform/apis/base/v1alpha1.Phase"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// ComputeRouteList is a list of ComputeRoutes
type ComputeRouteList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty" protobuf:"bytes,1,opt,name=metadata"`
	// Items is a list of ComputeRoute CRD objects
	Items []ComputeRoute `json:"items,omitempty" protobuf:"bytes,2,rep,name=items"`
}
